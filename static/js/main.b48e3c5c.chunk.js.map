{"version":3,"sources":["utils.ts","components/Settings.tsx","components/Chord.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","interactive-editor/Cursor.tsx","interactive-editor/Editor.tsx","text-editor/Editor.tsx","tunes/RoseTatoo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","merge","defaultValue","overrides","Object","reduce","acc","key","coreSettings","width","lineSpacing","sidePaddingEnabled","textCharCentreOffset","x","y","noteHorizontalLineAdjustment","showNotes","CoreSettings","React","getPadding","getStaveHeight","getSidePadding","padding","getBarWidth","staveWidth","barsPerStave","getNoteWidth","barWidth","meter","staveHeight","sidePadding","staveHeightWithPadding","noteWidth","DerivedSettingsContext","useSettings","useContext","Settings","props","useSheetInfo","useMemo","getStaveHeightWithPadding","getStaveWidth","Provider","value","children","Chord","chord","noteX","staveY","SingleNote","tuning","Utils","scale","split","stringNote","toLowerCase","reverse","stringNoteIndex","lowestStringIndex","noteTailY1","noteTailY2","noteCentreX","noteY","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","substr","PullOffNote","SlideNote","Note","noteType","BarLine","settings","StaveLine","Stave","barNotes","i","notes","barIndex","barX","noteString","noteIndex","s","trim","part","toUpperCase","defaultSheetInfo","SheetInfoContext","Sheet","title","notesArray","sheetInfo","staveBarNotes","note","floor","noteIndexInBar","staveIndex","barIndexInStave","sheetHeight","viewBox","preserveAspectRatio","HopHighLadies1","HopHighLadies2","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","Cursor","position","useEditor","attributeName","to","dur","repeatCount","EditorContext","createContext","Editor","useState","setNotes","setPosition","move","direction","max","addNote","slice","del","backspace","onKey","useCallback","keyCode","useEffect","document","addEventListener","removeEventListener","join","height","VirtualSheet","notesCount","previewSize","start","end","adjustment","visibleNotes","blanksToAdd","blanks","_","visibleNotesWithBlanks","adjustedPosition","textPosition","setTextPosition","rows","onSelect","e","target","selectionStart","onChange","TitleRoute","path","App","setShowNotes","className","type","id","checked","htmlFor","WorriedMansBlues","HopHighLadies","RoseTatoo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b48e3c5c.chunk.js","sourcesContent":["export const range = (length: number) => Array.from(Array(length).keys());\n\nexport const getStringFrets = (strings: string) =>\n  range(5)\n    .map((stringIndex) => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\n    .map(({ stringIndex, fret }) => {\n      if (isNaN(parseInt(fret))) {\n        const alphabet = \"abcdefghijklmnopqrst\";\n        const alphaIndex = alphabet.indexOf(fret);\n        if (alphaIndex !== -1) {\n          const doubleDigitFret = 10 + alphaIndex;\n          return { stringIndex, fret: doubleDigitFret.toString() };\n        }\n      }\n      return { stringIndex, fret };\n    });\n\nexport const getLowestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\n};\n\nexport const getHighestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[0]?.stringIndex;\n};\n\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\n  const stringNoteIndex = scale.indexOf(stringNote);\n  const fretIndex = parseInt(fret);\n\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\n\n  return fretNote;\n};\n\nexport const merge = <T>(defaultValue: T, overrides: Partial<T>): T => {\n  return (Object.keys(defaultValue) as (keyof T)[]).reduce(\n    (acc, key) =>\n      overrides[key] !== undefined\n        ? { ...acc, ...{ [key]: overrides[key] } }\n        : acc,\n    { ...defaultValue }\n  );\n};\n","import * as React from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { merge } from \"../utils\";\nimport { useSheetInfo } from \"./Sheet\";\n\nexport const defaultBarsPerStave = 4;\nexport const defaultMeter = 4;\n\nconst width = 800;\nconst lineSpacing = 10;\nconst sidePaddingEnabled = true;\n// Accounts for font size and svg discrepancies.\nconst textCharCentreOffset = {\n  x: -3.5,\n  y: 4,\n};\n// Accounts for different widths of vertical and horizontal lines and ugly edges.\nconst noteHorizontalLineAdjustment = 0.5;\nconst showNotes = false;\n\nconst coreSettings = {\n  width,\n  lineSpacing,\n  sidePaddingEnabled,\n  textCharCentreOffset,\n  noteHorizontalLineAdjustment,\n  showNotes,\n};\n\nconst CoreSettings = React.createContext(coreSettings);\n\nconst useCoreSettings = () => useContext(CoreSettings);\n\nconst getPadding = (lineSpacing: number) => 5 * lineSpacing;\nconst getStaveHeight = (lineSpacing: number) => lineSpacing * 4;\nconst getSidePadding = (sidePaddingEnabled: boolean, padding: number) =>\n  sidePaddingEnabled ? padding : 0;\nconst getStaveHeightWithPadding = (staveHeight: number, padding: number) =>\n  staveHeight + padding;\nconst getStaveWidth = (width: number, sidePadding: number) =>\n  width - sidePadding;\nconst getBarWidth = (staveWidth: number, barsPerStave: number) =>\n  staveWidth / barsPerStave;\nconst getNoteWidth = (barWidth: number, meter: number) => barWidth / meter;\n\nconst padding = getPadding(lineSpacing);\nconst staveHeight = getStaveHeight(lineSpacing);\nconst sidePadding = getSidePadding(sidePaddingEnabled, padding);\n\nconst staveHeightWithPadding = staveHeight + padding;\nconst staveWidth = width - sidePadding * 2;\nconst barWidth = getBarWidth(staveWidth, defaultBarsPerStave);\nconst noteWidth = getNoteWidth(barWidth, defaultMeter);\n\nconst DerivedSettingsContext = React.createContext({\n  padding,\n  staveHeight,\n  sidePadding,\n  staveHeightWithPadding,\n  staveWidth,\n  barWidth,\n  noteWidth,\n});\n\nexport const useSettings = () => ({\n  ...useContext(CoreSettings),\n  ...useContext(DerivedSettingsContext),\n});\n\nconst Settings: React.FunctionComponent<Partial<typeof coreSettings>> = (\n  props\n) => {\n  const { barsPerStave, meter } = useSheetInfo();\n  const coreSettings = merge(useCoreSettings(), props);\n  const { lineSpacing, sidePaddingEnabled, width } = coreSettings;\n\n  const padding = useMemo(() => getPadding(lineSpacing), [lineSpacing]);\n  const staveHeight = useMemo(() => getStaveHeight(lineSpacing), [lineSpacing]);\n  const sidePadding = useMemo(\n    () => getSidePadding(sidePaddingEnabled, lineSpacing),\n    [sidePaddingEnabled, lineSpacing]\n  );\n  const staveHeightWithPadding = useMemo(\n    () => getStaveHeightWithPadding(staveHeight, padding),\n    [staveHeight, padding]\n  );\n  const staveWidth = useMemo(() => getStaveWidth(width, sidePadding), [\n    width,\n    sidePadding,\n  ]);\n  const barWidth = useMemo(() => getBarWidth(staveWidth, barsPerStave), [\n    staveWidth,\n    barsPerStave,\n  ]);\n  const noteWidth = useMemo(() => getNoteWidth(barWidth, meter), [\n    barWidth,\n    meter,\n  ]);\n  return (\n    <CoreSettings.Provider value={coreSettings}>\n      <DerivedSettingsContext.Provider\n        value={{\n          padding,\n          staveHeight,\n          sidePadding,\n          staveHeightWithPadding,\n          staveWidth,\n          barWidth,\n          noteWidth,\n        }}\n      >\n        {props.children}\n      </DerivedSettingsContext.Provider>\n    </CoreSettings.Provider>\n  );\n};\n\nexport default Settings;\n","import * as React from \"react\";\nimport { useSettings } from \"./Settings\";\n\nexport const Chord = ({\n  chord,\n  noteX,\n  staveY,\n  width,\n}: {\n  chord: string;\n  noteX: number;\n  staveY: number;\n  width: number;\n}) => {\n  const { lineSpacing, textCharCentreOffset } = useSettings();\n  if (!chord) {\n    return null;\n  }\n  const x = noteX + width / 2 + chord.length * textCharCentreOffset.x;\n  const y = staveY - 1.5 * lineSpacing + textCharCentreOffset.y;\n  return <text {...{ x, y }}>{chord}</text>;\n};\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./Settings\";\n\nexport type NoteProps = {\n  strings: string;\n  x: number;\n  y: number;\n  width: number;\n};\n\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\n  const { tuning } = useSheetInfo();\n  const {\n    showNotes,\n    lineSpacing,\n    staveHeight,\n    textCharCentreOffset,\n  } = useSettings();\n  const stringFrets = Utils.getStringFrets(strings).map(\n    ({ stringIndex, fret }) => {\n      if (showNotes) {\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\n        return { stringIndex, fret: fret + fretNote };\n      }\n      return { stringIndex, fret };\n    }\n  );\n\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\n  const noteTailY1 = y + lineSpacing * (lowestStringIndex + 0.5);\n  const noteTailY2 = y + staveHeight + lineSpacing;\n  const noteCentreX = x + width * 0.5;\n\n  return (\n    <>\n      {stringFrets.map(({ stringIndex, fret }) => {\n        const noteX = noteCentreX + textCharCentreOffset.x * fret.length;\n        const noteY = y + stringIndex * lineSpacing + textCharCentreOffset.y;\n        return (\n          <text key={stringIndex} x={noteX} y={noteY}>\n            {fret}\n          </text>\n        );\n      })}\n      <line\n        x1={noteCentreX}\n        y1={noteTailY1}\n        x2={noteCentreX}\n        y2={noteTailY2}\n        strokeWidth={1}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const DoubleNote = (props: NoteProps) => {\n  const {\n    staveHeight,\n    lineSpacing,\n    noteHorizontalLineAdjustment,\n  } = useSettings();\n  const horizontalLineY = props.y + staveHeight + lineSpacing;\n  const horizontalLineX1 =\n    props.x + props.width * 0.25 - noteHorizontalLineAdjustment;\n  const horizontalLineX2 =\n    props.x + props.width * 0.75 + noteHorizontalLineAdjustment;\n  const [strings1, strings2] = props.strings.split(\",\");\n  return (\n    <>\n      <SingleNote\n        strings={strings1}\n        width={props.width * 0.5}\n        x={props.x}\n        y={props.y}\n      />\n      <SingleNote\n        strings={strings2}\n        width={props.width * 0.5}\n        x={props.x + props.width * 0.5}\n        y={props.y}\n      />\n      <line\n        x1={horizontalLineX1}\n        y1={horizontalLineY}\n        x2={horizontalLineX2}\n        y2={horizontalLineY}\n        strokeWidth={3}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const BrushNote = (props: NoteProps) => (\n  <DoubleNote\n    x={props.x}\n    y={props.y}\n    width={props.width}\n    strings={props.strings + \",    0\"}\n  />\n);\n\nexport const SlurNote = (\n  props: NoteProps & {\n    label: string;\n  }\n) => {\n  const { lineSpacing, textCharCentreOffset, staveHeight } = useSettings();\n  const [strings1, strings2] = props.strings.split(\",\");\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\n\n  const arcX1 = props.x + props.width * 0.25;\n  const arcX2 = props.x + props.width * 0.75;\n  const arcY1 = props.y + (highestString1 - 0.5) * lineSpacing;\n  const arcY2 = props.y + (highestString2 - 0.5) * lineSpacing;\n\n  const arcControlX1 = arcX1 + 0.5 * lineSpacing;\n  const arcControlX2 = arcX2 - 0.5 * lineSpacing;\n  const arcControlY1 = arcY1 - 0.5 * lineSpacing;\n  const arcControlY2 = arcY2 - 0.5 * lineSpacing;\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\n\n  const labelLength = props.label.length;\n  const labelX =\n    props.x + 0.5 * props.width + textCharCentreOffset.x * labelLength;\n  const labelY =\n    props.y + staveHeight + 2 * lineSpacing + textCharCentreOffset.y;\n\n  return (\n    <>\n      <DoubleNote\n        x={props.x}\n        y={props.y}\n        width={props.width}\n        strings={props.strings}\n      />\n      <path\n        d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill=\"transparent\"\n      />\n      <text x={labelX} y={labelY}>\n        {props.label}\n      </text>\n    </>\n  );\n};\n\nexport const HammerOnNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings.substr(0, props.strings.length - 1) + \"0,\" + props.strings\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"H\" } }} />;\n};\n\nexport const PullOffNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings +\n        \",\" +\n        props.strings.substr(0, props.strings.length - 1) +\n        \"0\"\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"P\" } }} />;\n};\n\nexport const SlideNote = (props: NoteProps) => (\n  <SlurNote {...props} label=\"SL\" />\n);\n\nexport const Note = (\n  props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }\n) => {\n  switch (props.noteType) {\n    case \"b\":\n      return <BrushNote {...props} />;\n    case \"h\":\n      return <HammerOnNote {...props} />;\n    case \"p\":\n      return <PullOffNote {...props} />;\n    case \"s\":\n      return <SlideNote {...props} />;\n    case \"m\":\n      return <SingleNote {...props} />;\n    case \"d\":\n      return <DoubleNote {...props} />;\n    default:\n      return null;\n  }\n};\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { Chord } from \"./Chord\";\nimport { Note } from \"./Notes\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./Settings\";\n\nconst BarLine = (props: { x: number; y: number }) => {\n  const settings = useSettings();\n  return (\n    <line\n      x1={props.x}\n      y1={props.y}\n      x2={props.x}\n      y2={props.y + settings.staveHeight}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nconst StaveLine = (props: { y: number; width: number }) => {\n  const { sidePadding } = useSettings();\n  return (\n    <line\n      x1={sidePadding}\n      y1={props.y}\n      x2={sidePadding + props.width}\n      y2={props.y}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nexport const Stave = (props: { y: number; barNotes: string[][] }) => {\n  const { lineSpacing, sidePadding, barWidth, noteWidth } = useSettings();\n  const staveWidth = barWidth * props.barNotes.length;\n\n  return (\n    <>\n      {Utils.range(5).map((i) => (\n        <StaveLine key={i} y={props.y + i * lineSpacing} width={staveWidth} />\n      ))}\n      {Utils.range(props.barNotes.length + 1).map((i) => (\n        <BarLine key={i} y={props.y} x={sidePadding + i * barWidth} />\n      ))}\n      {props.barNotes.map((notes, barIndex) => {\n        const barX = sidePadding + barIndex * barWidth;\n        return notes.map((noteString, noteIndex) => {\n          const noteX = barX + noteIndex * noteWidth;\n          const { noteType, strings, chord } = noteString\n            .split(\":\")\n            .map((s) => s.trim())\n            .reduce(\n              (acc, part) => {\n                if (part[0]) {\n                  if (part[0] === part[0].toUpperCase()) {\n                    //chord\n                    return { ...acc, chord: part };\n                  } else if (part[0] === part[0].toLowerCase()) {\n                    //note\n                    return {\n                      ...acc,\n                      noteType: part[0],\n                      strings: part.substr(1),\n                    };\n                  }\n                }\n                return acc;\n              },\n              {\n                noteType: \"\",\n                strings: \"\",\n                chord: \"\",\n              }\n            );\n\n          return (\n            <React.Fragment key={noteIndex}>\n              <Chord {...{ chord, noteX, staveY: props.y, width: noteWidth }} />\n              <Note\n                {...{\n                  noteType,\n                  strings,\n                  x: noteX,\n                  y: props.y,\n                  width: noteWidth,\n                }}\n              />\n            </React.Fragment>\n          );\n        });\n      })}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Stave } from \"./Stave\";\nimport { useContext } from \"react\";\nimport Settings, {\n  useSettings,\n  defaultMeter,\n  defaultBarsPerStave,\n} from \"./Settings\";\nimport { merge } from \"../utils\";\n\nconst defaultSheetInfo = {\n  tuning: \"gDGBd\",\n  meter: defaultMeter,\n  barsPerStave: defaultBarsPerStave,\n};\n\nconst SheetInfoContext = React.createContext(defaultSheetInfo);\n\nexport const useSheetInfo = () => useContext(SheetInfoContext);\n\nexport const Sheet: React.FunctionComponent<{\n  title: string;\n  notes: string;\n  tuning?: string;\n  meter?: number;\n  barsPerStave?: number;\n}> = (props) => {\n  const { notes, title, children } = props;\n  const { width, padding, staveHeightWithPadding } = useSettings();\n  const notesArray = notes.split(\";\").map((s) => s.trim());\n\n  const sheetInfo = merge(useSheetInfo(), props);\n  const { barsPerStave, tuning } = sheetInfo;\n\n  const staveBarNotes = notesArray.reduce(\n    (acc: string[][][], note, noteIndex) => {\n      const barIndex = Math.floor(noteIndex / sheetInfo.meter);\n      const noteIndexInBar = noteIndex % sheetInfo.meter;\n      const staveIndex = Math.floor(barIndex / barsPerStave);\n      const barIndexInStave = barIndex % barsPerStave;\n\n      if (!acc[staveIndex]) {\n        acc[staveIndex] = [];\n      }\n\n      if (!acc[staveIndex][barIndexInStave]) {\n        acc[staveIndex][barIndexInStave] = [];\n      }\n\n      acc[staveIndex][barIndexInStave][noteIndexInBar] = note;\n      return acc;\n    },\n    []\n  );\n\n  const sheetHeight =\n    0.5 * padding + staveHeightWithPadding * staveBarNotes.length;\n\n  return (\n    <SheetInfoContext.Provider value={sheetInfo}>\n      <Settings>\n        <h1>{title}</h1>\n        <p>{tuning}</p>\n        <svg\n          viewBox={`0 0 ${width} ${sheetHeight}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n        >\n          {staveBarNotes.map((barNotes, staveIndex) => {\n            return (\n              <Stave\n                key={staveIndex}\n                y={0.5 * padding + staveHeightWithPadding * staveIndex}\n                barNotes={barNotes}\n              />\n            );\n          })}\n          {children}\n        </svg>\n      </Settings>\n    </SheetInfoContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const HopHighLadies1 = () => (\n  <Sheet\n    title=\"Hop High Ladies v1\"\n    notes={`\n      G:h  0,  2;h 0, 1;m0;m  0;\n      s  2,  4;b0040;m 0;b0000;\n      h  0,  2;h 0, 1;m0;m  0;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:h  0,  2;h 0, 1;m0;m  0;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\n\n      G:m  0;m5;p2,0;b0000;\n      s  2,  4;b0040;m 0;b0000;\n      m  0;m5;p2,0;b0000;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:m  0;m5;p2,0;b0000;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      p 3, 0;m  0;D7:h  0,  2;b0120\n    `}\n  />\n);\n\nexport const HopHighLadies2 = () => (\n  <Sheet\n    title=\"Hop High Ladies v2\"\n    notes={`\n        G:h  0,  2;h 0, 1;m0;b  0;\n        s  2,  4;b  4;m 0;b0;\n        h  0,  2;h 0, 1;m0;b  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:h  0,  2;h 0, 1;m0;b  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\n  \n        G:m  0;m5;p2,0;d 0,  0;\n        s  2,  4;b  4;m 0;b0;\n        m  0;m5;p2,0;d 0,  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:m  0;m5;p2,0;d 0,  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        p 3, 0;m  0;D7:h  0,  2;m   0\n      `}\n  />\n);\n\nexport default () => (\n  <>\n    <HopHighLadies1 />\n    <HopHighLadies2 />\n  </>\n);\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const WorriedMansBluesOriginal = () => (\n  <Sheet\n    title=\"Worried Man's Blues\"\n    notes={`\n      G;;;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m  0;m   0;\n      C:m   2;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n\n      G:m   0;b0000;b0000;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m   4;m  0;\n      D7:m  2;b0120;b0120;m  2;\n      m 0;m  2;m  0;m   4;\n      G:m  0;b0000;m0000;\n    `}\n  />\n);\n\nexport const WorriedMansBluesOctaveUpV1 = () => (\n  <Sheet\n    title=\"Worried Man's Blues (octave up v.1)\"\n    notes={`\n      G;;;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987;m 8;m  7;\n      C:m  9;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n\n      G:m  7;b987;b987;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987; m 7;m 8;\n      D7:m a;baa7;baa7;m a;\n      G:m9;m a;m 8;m 7;\n      m 8;b987;m987\n    `}\n  />\n);\n\nexport default () => (\n  <>\n    <WorriedMansBluesOriginal />\n    <WorriedMansBluesOctaveUpV1 />\n  </>\n);\n","import * as React from \"react\";\nimport { useEditor } from \"./Editor\";\nimport { useSettings } from \"../components/Settings\";\n\nconst Cursor = () => {\n  const { position } = useEditor();\n  const { noteWidth, padding, lineSpacing } = useSettings();\n  const x = padding + (0.1 + position) * noteWidth;\n  const height = lineSpacing * 5;\n  const y1 = 0.5 * padding - 0.5 * lineSpacing;\n  const y2 = y1 + height;\n\n  return (\n    <line x1={x} y1={y1} x2={x} y2={y2} strokeWidth={1} stroke=\"black\">\n      <animate\n        attributeName=\"visibility\"\n        from=\"visible\"\n        to=\"hidden\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </line>\n  );\n};\n\nexport default Cursor;\n","import React, {\n  useEffect,\n  useCallback,\n  useState,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { Sheet } from \"../components/Sheet\";\nimport Cursor from \"./Cursor\";\n\nconst EditorContext = React.createContext<{\n  position: number;\n  meter: number;\n}>({\n  position: 0,\n  meter: 4,\n});\n\nexport const useEditor = () => useContext(EditorContext);\n\nconst Editor = () => {\n  const [notes, setNotes] = useState<string[]>([]);\n  const [position, setPosition] = useState(0);\n\n  const { move, addNote, del, backspace } = useMemo(\n    () => ({\n      move: (direction: \"left\" | \"right\") => {\n        switch (direction) {\n          case \"left\":\n            setPosition(Math.max(0, position - 1));\n            break;\n          case \"right\":\n            setPosition(Math.min(notes.length, position + 1));\n            break;\n        }\n      },\n      addNote: (note: string) => {\n        setNotes([...notes.slice(0, position), note, ...notes.slice(position)]);\n        setPosition(position + 1);\n      },\n      del: () => {\n        if (position < notes.length) {\n          setNotes([...notes.slice(0, position), ...notes.slice(position + 1)]);\n        }\n      },\n      backspace: () => {\n        setNotes([\n          ...notes.slice(0, Math.max(0, position - 1)),\n          ...notes.slice(position),\n        ]);\n        setPosition(Math.max(0, position - 1));\n      },\n    }),\n    [position, setPosition, notes, setNotes]\n  );\n\n  const onKey = useCallback(\n    ({ keyCode }: KeyboardEvent) => {\n      switch (keyCode) {\n        case 37:\n          move(\"left\");\n          break;\n        case 39:\n          move(\"right\");\n          break;\n        case 8:\n          backspace();\n          break;\n        case 46:\n          del();\n          break;\n        case 66:\n          addNote(\"b0000\");\n          break;\n      }\n    },\n    [move, addNote, backspace, del]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKey);\n    return () => document.removeEventListener(\"keydown\", onKey);\n  }, [onKey]);\n\n  const meter = 4;\n\n  return (\n    <EditorContext.Provider value={{ position, meter }}>\n      <Sheet title=\"Editor\" meter={meter} notes={notes.join(\";\")}>\n        <Cursor />\n      </Sheet>\n    </EditorContext.Provider>\n  );\n};\n\nexport default Editor;\n","import * as React from \"react\";\nimport { Sheet, useSheetInfo } from \"../components/Sheet\";\nimport { useState } from \"react\";\nimport Settings, { useSettings } from \"../components/Settings\";\nimport { range } from \"../utils\";\n\nconst Cursor = (props: { position: number }) => {\n  const { position } = props;\n  const { sidePadding, staveHeightWithPadding, noteWidth } = useSettings();\n\n  const x = sidePadding + position * noteWidth;\n  const y = 0;\n\n  return (\n    <rect\n      {...{\n        x,\n        y,\n        width: noteWidth,\n        height: staveHeightWithPadding,\n      }}\n      strokeWidth={1}\n      stroke=\"black\"\n      fill=\"transparent\"\n    ></rect>\n  );\n};\n\nconst VirtualSheet: React.FunctionComponent<{\n  notes: string;\n  title: string;\n  position: number;\n}> = ({ notes, title, position }) => {\n  const notesArray = notes.split(\";\");\n  const notesCount = notesArray.length;\n  const barsPerStave = 2;\n\n  const { meter } = useSheetInfo();\n  const previewSize = meter * barsPerStave;\n\n  let start = Math.max(0, notesArray.length - previewSize);\n  let end = notesCount;\n\n  if (position < start) {\n    const adjustment = start - position;\n    start = position;\n    end -= adjustment;\n  }\n\n  const visibleNotes = notesArray.slice(start, end);\n  const blanksToAdd = Math.max(0, previewSize - notesArray.length);\n  const blanks = range(blanksToAdd).map((_) => \"\");\n  const visibleNotesWithBlanks = [...visibleNotes, ...blanks].join(\";\");\n\n  const adjustedPosition = position - start;\n\n  return (\n    <Sheet\n      {...{ title, notes: visibleNotesWithBlanks, barsPerStave }}\n      notes={visibleNotesWithBlanks}\n    >\n      <Cursor position={adjustedPosition} />\n    </Sheet>\n  );\n};\n\nexport default () => {\n  const [notes, setNotes] = useState(\"\");\n  const [textPosition, setTextPosition] = useState(0);\n  const position = notes.substr(0, textPosition).split(\";\").length - 1;\n\n  return (\n    <>\n      <Settings {...{ sidePaddingEnabled: false, width: 400 }}>\n        <VirtualSheet title=\"Editor\" {...{ position, notes }} />\n      </Settings>\n      <br />\n      <textarea\n        rows={10}\n        onSelect={(e) =>\n          setTextPosition((e.target as HTMLTextAreaElement).selectionStart)\n        }\n        onChange={(e) => setNotes(e.target.value)}\n        value={notes}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nconst notes = `\n  Am:m  2;b2122;m  2;b  0;\n  m  2;b  0;m  2;b 0;\n  C:m 1;b2102;m 1;m0;\n  h0,2;b2102;p2,0;b 1;\n  G:m0;b0000;m0;m 1;\n  b0;b2;b0;b 1;\n  Am:m 1;b2122;m 0;b2022;\n  m  2;b2122;m  2;b2122\n`;\n\nexport default () => (\n  <Sheet {...{ title: \"Rose Tattoo\", tuning: \"gDGBd\", meter: 4, notes }} />\n);\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, HashRouter, Link } from \"react-router-dom\";\n\nimport HopHighLadies from \"./tunes/HopHighLadies\";\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\nimport InteractiveEditor from \"./interactive-editor/Editor\";\nimport TextEditor from \"./text-editor/Editor\";\nimport RoseTatoo from \"./tunes/RoseTatoo\";\n\nimport \"./App.css\";\nimport Settings from \"./components/Settings\";\n\ntype TitleRouteProps = {\n  path: string;\n  title: string;\n};\n\nconst TitleRoute: React.FunctionComponent<TitleRouteProps> = ({\n  path,\n  title,\n  children,\n}) => {\n  useEffect(() => {\n    document.title = \"Banjo Tab :: \" + title;\n  });\n  return <Route {...{ path }}>{children}</Route>;\n};\n\nconst App = () => {\n  const [showNotes, setShowNotes] = useState(false);\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div className=\"content\">\n          <span>\n            <input\n              type=\"checkbox\"\n              id=\"showNotes\"\n              checked={showNotes}\n              onChange={() => setShowNotes(!showNotes)}\n            />\n            <label htmlFor=\"showNotes\">Show Notes</label>\n            <br />\n            <Link to=\"/worried-man\">Worried Man's Blues</Link>\n            ::\n            <Link to=\"/hop-high-ladies\">Hop High Ladies</Link>\n            ::\n            <Link to=\"/rose-tattoo\">Rose Tattoo</Link>\n            {/* ::\n          <Link to=\"/interactive-editor\">Interactive Editor</Link> */}\n            ::\n            <Link to=\"/text-editor\">Text Editor</Link>\n          </span>\n          <Settings {...{ showNotes }}>\n            <Switch>\n              <TitleRoute path=\"/worried-man\" title=\"Worried Man's Blues\">\n                <WorriedMansBlues />\n              </TitleRoute>\n              <TitleRoute path=\"/hop-high-ladies\" title=\"Hop High Ladies\">\n                <HopHighLadies />\n              </TitleRoute>\n              <TitleRoute path=\"/rose-tattoo\" title=\"Rose Tattoo\">\n                <RoseTatoo />\n              </TitleRoute>\n              <TitleRoute path=\"/interactive-editor\" title=\"Interactive Editor\">\n                <InteractiveEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/text-editor\" title=\"Text Editor\">\n                <TextEditor />\n              </TitleRoute>\n              <Route path=\"/\">\n                <Redirect to=\"/worried-man\" />\n              </Route>\n            </Switch>\n          </Settings>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}