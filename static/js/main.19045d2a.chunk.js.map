{"version":3,"sources":["utils.ts","components/SettingsContext.tsx","components/Chord.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","interactive-editor/Cursor.tsx","interactive-editor/Editor.tsx","text-editor/Editor.tsx","tunes/RoseTatoo.tsx","tunes/SandyRiverBelle.tsx","tunes/Anthems.tsx","tunes/Korobeiniki.tsx","tunes/Kalinka.tsx","tunes/MortalKombat.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","merge","defaultValue","overrides","Object","reduce","acc","key","coreSettings","width","lineSpacing","sidePaddingEnabled","textCharCentreOffset","x","y","noteHorizontalLineAdjustment","showNotes","getPadding","getStaveHeight","getSidePadding","padding","staveHeight","sidePadding","derivedSettings","staveHeightWithPadding","staveWidth","Settings","React","useSettings","useContext","SettingsContext","props","useMemo","getStaveHeightWithPadding","getStaveWidth","Provider","value","children","Chord","chord","noteX","staveY","SingleNote","tuning","useSheetInfo","Utils","scale","split","stringNote","toLowerCase","reverse","stringNoteIndex","lowestStringIndex","noteTailY1","noteTailY2","noteCentreX","noteY","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","substr","PullOffNote","SlideNote","Note","noteType","BarLine","settings","StaveLine","Stave","barWidth","noteWidth","barNotes","i","notes","barIndex","barX","noteString","noteIndex","s","trim","part","toUpperCase","SheetInfoContext","meter","barsPerStave","Sheet","title","description","sheetInfo","getBarWidth","getNoteWidth","staveBarNotes","note","floor","noteIndexInBar","staveIndex","barIndexInStave","sheetHeight","viewBox","preserveAspectRatio","HopHighLadies1","HopHighLadies2","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","Cursor","position","useEditor","attributeName","to","dur","repeatCount","EditorContext","createContext","Editor","useState","setNotes","setPosition","move","direction","max","addNote","slice","del","backspace","onKey","useCallback","keyCode","useEffect","document","addEventListener","removeEventListener","join","height","VirtualSheet","notesArray","notesCount","previewSize","start","end","adjustment","visibleNotes","blanksToAdd","blanks","_","visibleNotesWithBlanks","adjustedPosition","textPosition","setTextPosition","rows","onSelect","e","target","selectionStart","onChange","PartA","PartB","SandyRiverBelle","RussianShort","RussianFullClawhammer","middle","Anthems","MelodyNotes","main","ShortVersion","ShortVersion2","FullVersion","Korobeiniki","CVersion","GVersion","Kalinka","MortalKombat","TitleRoute","path","App","setShowNotes","className","type","id","checked","htmlFor","WorriedMansBlues","HopHighLadies","RoseTatoo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.19045d2a.chunk.js","sourcesContent":["export const range = (length: number) => Array.from(Array(length).keys());\r\n\r\nexport const getStringFrets = (strings: string) =>\r\n  range(5)\r\n    .map((stringIndex) => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\r\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\r\n    .map(({ stringIndex, fret }) => {\r\n      if (isNaN(parseInt(fret))) {\r\n        const alphabet = \"abcdefghijklmnopqrst\";\r\n        const alphaIndex = alphabet.indexOf(fret);\r\n        if (alphaIndex !== -1) {\r\n          const doubleDigitFret = 10 + alphaIndex;\r\n          return { stringIndex, fret: doubleDigitFret.toString() };\r\n        }\r\n      }\r\n      return { stringIndex, fret };\r\n    });\r\n\r\nexport const getLowestStringIndex = (strings: string) => {\r\n  const stringFrets = getStringFrets(strings);\r\n\r\n  if (stringFrets.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\r\n};\r\n\r\nexport const getHighestStringIndex = (strings: string) => {\r\n  const stringFrets = getStringFrets(strings);\r\n\r\n  if (stringFrets.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return stringFrets[0]?.stringIndex;\r\n};\r\n\r\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\r\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\r\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\r\n  const stringNoteIndex = scale.indexOf(stringNote);\r\n  const fretIndex = parseInt(fret);\r\n\r\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\r\n\r\n  return fretNote;\r\n};\r\n\r\nexport const merge = <T>(defaultValue: T, overrides: Partial<T>): T => {\r\n  return (Object.keys(defaultValue) as (keyof T)[]).reduce(\r\n    (acc, key) =>\r\n      overrides[key] !== undefined\r\n        ? { ...acc, ...{ [key]: overrides[key] } }\r\n        : acc,\r\n    { ...defaultValue }\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { merge } from \"../utils\";\r\n\r\nconst width = 800;\r\nconst lineSpacing = 10;\r\nconst sidePaddingEnabled = true;\r\n// Accounts for font size and svg discrepancies.\r\nconst textCharCentreOffset = {\r\n  x: -3.5,\r\n  y: 4,\r\n};\r\n// Accounts for different widths of vertical and horizontal lines and ugly edges.\r\nconst noteHorizontalLineAdjustment = 0.5;\r\nconst showNotes = false;\r\n\r\nconst coreSettings = {\r\n  width,\r\n  lineSpacing,\r\n  sidePaddingEnabled,\r\n  textCharCentreOffset,\r\n  noteHorizontalLineAdjustment,\r\n  showNotes,\r\n};\r\n\r\nconst getPadding = (lineSpacing: number) => 5 * lineSpacing;\r\nconst getStaveHeight = (lineSpacing: number) => lineSpacing * 4;\r\nconst getSidePadding = (sidePaddingEnabled: boolean, padding: number) =>\r\n  sidePaddingEnabled ? padding : 0;\r\nconst getStaveHeightWithPadding = (staveHeight: number, padding: number) =>\r\n  staveHeight + padding;\r\nconst getStaveWidth = (width: number, sidePadding: number) =>\r\n  width - sidePadding;\r\n\r\nconst padding = getPadding(lineSpacing);\r\nconst staveHeight = getStaveHeight(lineSpacing);\r\nconst sidePadding = getSidePadding(sidePaddingEnabled, padding);\r\n\r\nconst staveHeightWithPadding = staveHeight + padding;\r\nconst staveWidth = width - sidePadding * 2;\r\n\r\nconst derivedSettings = {\r\n  padding,\r\n  staveHeight,\r\n  sidePadding,\r\n  staveHeightWithPadding,\r\n  staveWidth,\r\n};\r\n\r\nconst Settings = React.createContext({\r\n  ...coreSettings,\r\n  ...derivedSettings,\r\n});\r\n\r\nexport const useSettings = () => useContext(Settings);\r\n\r\nconst SettingsContext: React.FunctionComponent<Partial<typeof coreSettings>> = (\r\n  props\r\n) => {\r\n  const coreSettings = merge(useSettings(), props);\r\n  const { lineSpacing, sidePaddingEnabled, width } = coreSettings;\r\n\r\n  const padding = useMemo(() => getPadding(lineSpacing), [lineSpacing]);\r\n  const staveHeight = useMemo(() => getStaveHeight(lineSpacing), [lineSpacing]);\r\n  const sidePadding = useMemo(\r\n    () => getSidePadding(sidePaddingEnabled, lineSpacing),\r\n    [sidePaddingEnabled, lineSpacing]\r\n  );\r\n  const staveHeightWithPadding = useMemo(\r\n    () => getStaveHeightWithPadding(staveHeight, padding),\r\n    [staveHeight, padding]\r\n  );\r\n  const staveWidth = useMemo(() => getStaveWidth(width, sidePadding), [\r\n    width,\r\n    sidePadding,\r\n  ]);\r\n\r\n  return (\r\n    <Settings.Provider\r\n      value={{\r\n        ...coreSettings,\r\n        padding,\r\n        staveHeight,\r\n        sidePadding,\r\n        staveHeightWithPadding,\r\n        staveWidth,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Settings.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContext;\r\n","import * as React from \"react\";\r\nimport { useSettings } from \"./SettingsContext\";\r\n\r\nexport const Chord = ({\r\n  chord,\r\n  noteX,\r\n  staveY,\r\n  width,\r\n}: {\r\n  chord: string;\r\n  noteX: number;\r\n  staveY: number;\r\n  width: number;\r\n}) => {\r\n  const { lineSpacing, textCharCentreOffset } = useSettings();\r\n  if (!chord) {\r\n    return null;\r\n  }\r\n  const x = noteX + width / 2 + chord.length * textCharCentreOffset.x;\r\n  const y = staveY - 1.5 * lineSpacing + textCharCentreOffset.y;\r\n  return <text {...{ x, y }}>{chord}</text>;\r\n};\r\n","import * as React from \"react\";\r\nimport * as Utils from \"../utils\";\r\nimport { useSheetInfo } from \"./Sheet\";\r\nimport { useSettings } from \"./SettingsContext\";\r\n\r\nexport type NoteProps = {\r\n  strings: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n};\r\n\r\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\r\n  const { tuning } = useSheetInfo();\r\n  const {\r\n    showNotes,\r\n    lineSpacing,\r\n    staveHeight,\r\n    textCharCentreOffset,\r\n  } = useSettings();\r\n  const stringFrets = Utils.getStringFrets(strings).map(\r\n    ({ stringIndex, fret }) => {\r\n      if (showNotes) {\r\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\r\n        return { stringIndex, fret: fret + fretNote };\r\n      }\r\n      return { stringIndex, fret };\r\n    }\r\n  );\r\n\r\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\r\n  const noteTailY1 = y + lineSpacing * (lowestStringIndex + 0.5);\r\n  const noteTailY2 = y + staveHeight + lineSpacing;\r\n  const noteCentreX = x + width * 0.5;\r\n\r\n  return (\r\n    <>\r\n      {stringFrets.map(({ stringIndex, fret }) => {\r\n        const noteX = noteCentreX + textCharCentreOffset.x * fret.length;\r\n        const noteY = y + stringIndex * lineSpacing + textCharCentreOffset.y;\r\n        return (\r\n          <text key={stringIndex} x={noteX} y={noteY}>\r\n            {fret}\r\n          </text>\r\n        );\r\n      })}\r\n      <line\r\n        x1={noteCentreX}\r\n        y1={noteTailY1}\r\n        x2={noteCentreX}\r\n        y2={noteTailY2}\r\n        strokeWidth={1}\r\n        stroke=\"black\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DoubleNote = (props: NoteProps) => {\r\n  const {\r\n    staveHeight,\r\n    lineSpacing,\r\n    noteHorizontalLineAdjustment,\r\n  } = useSettings();\r\n  const horizontalLineY = props.y + staveHeight + lineSpacing;\r\n  const horizontalLineX1 =\r\n    props.x + props.width * 0.25 - noteHorizontalLineAdjustment;\r\n  const horizontalLineX2 =\r\n    props.x + props.width * 0.75 + noteHorizontalLineAdjustment;\r\n  const [strings1, strings2] = props.strings.split(\",\");\r\n  return (\r\n    <>\r\n      <SingleNote\r\n        strings={strings1}\r\n        width={props.width * 0.5}\r\n        x={props.x}\r\n        y={props.y}\r\n      />\r\n      <SingleNote\r\n        strings={strings2}\r\n        width={props.width * 0.5}\r\n        x={props.x + props.width * 0.5}\r\n        y={props.y}\r\n      />\r\n      <line\r\n        x1={horizontalLineX1}\r\n        y1={horizontalLineY}\r\n        x2={horizontalLineX2}\r\n        y2={horizontalLineY}\r\n        strokeWidth={3}\r\n        stroke=\"black\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const BrushNote = (props: NoteProps) => (\r\n  <DoubleNote\r\n    x={props.x}\r\n    y={props.y}\r\n    width={props.width}\r\n    strings={props.strings + \",    0\"}\r\n  />\r\n);\r\n\r\nexport const SlurNote = (\r\n  props: NoteProps & {\r\n    label: string;\r\n  }\r\n) => {\r\n  const { lineSpacing, textCharCentreOffset, staveHeight } = useSettings();\r\n  const [strings1, strings2] = props.strings.split(\",\");\r\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\r\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\r\n\r\n  const arcX1 = props.x + props.width * 0.25;\r\n  const arcX2 = props.x + props.width * 0.75;\r\n  const arcY1 = props.y + (highestString1 - 0.5) * lineSpacing;\r\n  const arcY2 = props.y + (highestString2 - 0.5) * lineSpacing;\r\n\r\n  const arcControlX1 = arcX1 + 0.5 * lineSpacing;\r\n  const arcControlX2 = arcX2 - 0.5 * lineSpacing;\r\n  const arcControlY1 = arcY1 - 0.5 * lineSpacing;\r\n  const arcControlY2 = arcY2 - 0.5 * lineSpacing;\r\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\r\n\r\n  const labelLength = props.label.length;\r\n  const labelX =\r\n    props.x + 0.5 * props.width + textCharCentreOffset.x * labelLength;\r\n  const labelY =\r\n    props.y + staveHeight + 2 * lineSpacing + textCharCentreOffset.y;\r\n\r\n  return (\r\n    <>\r\n      <DoubleNote\r\n        x={props.x}\r\n        y={props.y}\r\n        width={props.width}\r\n        strings={props.strings}\r\n      />\r\n      <path\r\n        d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`}\r\n        stroke=\"black\"\r\n        strokeWidth={1}\r\n        fill=\"transparent\"\r\n      />\r\n      <text x={labelX} y={labelY}>\r\n        {props.label}\r\n      </text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const HammerOnNote = (props: NoteProps) => {\r\n  const strings =\r\n    props.strings.indexOf(\",\") === -1\r\n      ? props.strings.substr(0, props.strings.length - 1) + \"0,\" + props.strings\r\n      : props.strings;\r\n  return <SlurNote {...{ ...props, ...{ strings, label: \"H\" } }} />;\r\n};\r\n\r\nexport const PullOffNote = (props: NoteProps) => {\r\n  const strings =\r\n    props.strings.indexOf(\",\") === -1\r\n      ? props.strings +\r\n        \",\" +\r\n        props.strings.substr(0, props.strings.length - 1) +\r\n        \"0\"\r\n      : props.strings;\r\n  return <SlurNote {...{ ...props, ...{ strings, label: \"P\" } }} />;\r\n};\r\n\r\nexport const SlideNote = (props: NoteProps) => (\r\n  <SlurNote {...props} label=\"SL\" />\r\n);\r\n\r\nexport const Note = (\r\n  props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }\r\n) => {\r\n  switch (props.noteType) {\r\n    case \"b\":\r\n      return <BrushNote {...props} />;\r\n    case \"h\":\r\n      return <HammerOnNote {...props} />;\r\n    case \"p\":\r\n      return <PullOffNote {...props} />;\r\n    case \"s\":\r\n      return <SlideNote {...props} />;\r\n    case \"m\":\r\n      return <SingleNote {...props} />;\r\n    case \"d\":\r\n      return <DoubleNote {...props} />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n","import * as React from \"react\";\r\nimport * as Utils from \"../utils\";\r\nimport { Chord } from \"./Chord\";\r\nimport { Note } from \"./Notes\";\r\nimport { useSheetInfo } from \"./Sheet\";\r\nimport { useSettings } from \"./SettingsContext\";\r\n\r\nconst BarLine = (props: { x: number; y: number }) => {\r\n  const settings = useSettings();\r\n  return (\r\n    <line\r\n      x1={props.x}\r\n      y1={props.y}\r\n      x2={props.x}\r\n      y2={props.y + settings.staveHeight}\r\n      strokeWidth={1}\r\n      stroke=\"black\"\r\n    />\r\n  );\r\n};\r\n\r\nconst StaveLine = (props: { y: number; width: number }) => {\r\n  const { sidePadding } = useSettings();\r\n  return (\r\n    <line\r\n      x1={sidePadding}\r\n      y1={props.y}\r\n      x2={sidePadding + props.width}\r\n      y2={props.y}\r\n      strokeWidth={1}\r\n      stroke=\"black\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const Stave = (props: { y: number; barNotes: string[][] }) => {\r\n  const { lineSpacing, sidePadding } = useSettings();\r\n  const { barWidth, noteWidth } = useSheetInfo();\r\n  const staveWidth = barWidth * props.barNotes.length;\r\n\r\n  return (\r\n    <>\r\n      {Utils.range(5).map((i) => (\r\n        <StaveLine key={i} y={props.y + i * lineSpacing} width={staveWidth} />\r\n      ))}\r\n      {Utils.range(props.barNotes.length + 1).map((i) => (\r\n        <BarLine key={i} y={props.y} x={sidePadding + i * barWidth} />\r\n      ))}\r\n      {props.barNotes.map((notes, barIndex) => {\r\n        const barX = sidePadding + barIndex * barWidth;\r\n        return notes.map((noteString, noteIndex) => {\r\n          const noteX = barX + noteIndex * noteWidth;\r\n          const { noteType, strings, chord } = noteString\r\n            .split(\":\")\r\n            .map((s) => s.trim())\r\n            .reduce(\r\n              (acc, part) => {\r\n                if (part[0]) {\r\n                  if (part[0] === part[0].toUpperCase()) {\r\n                    //chord\r\n                    return { ...acc, chord: part };\r\n                  } else if (part[0] === part[0].toLowerCase()) {\r\n                    //note\r\n                    return {\r\n                      ...acc,\r\n                      noteType: part[0],\r\n                      strings: part.substr(1),\r\n                    };\r\n                  }\r\n                }\r\n                return acc;\r\n              },\r\n              {\r\n                noteType: \"\",\r\n                strings: \"\",\r\n                chord: \"\",\r\n              }\r\n            );\r\n\r\n          return (\r\n            <React.Fragment key={noteIndex}>\r\n              <Chord {...{ chord, noteX, staveY: props.y, width: noteWidth }} />\r\n              <Note\r\n                {...{\r\n                  noteType,\r\n                  strings,\r\n                  x: noteX,\r\n                  y: props.y,\r\n                  width: noteWidth,\r\n                }}\r\n              />\r\n            </React.Fragment>\r\n          );\r\n        });\r\n      })}\r\n    </>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { Stave } from \"./Stave\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { useSettings } from \"./SettingsContext\";\r\nimport { merge } from \"../utils\";\r\n\r\nconst defaultSheetInfo = {\r\n  tuning: \"gDGBd\",\r\n  meter: 4,\r\n  barsPerStave: 4,\r\n  barWidth: 0,\r\n  noteWidth: 0,\r\n};\r\n\r\nconst getBarWidth = (staveWidth: number, barsPerStave: number) =>\r\n  staveWidth / barsPerStave;\r\nconst getNoteWidth = (barWidth: number, meter: number) => barWidth / meter;\r\n\r\nconst SheetInfoContext = React.createContext(defaultSheetInfo);\r\n\r\nexport const useSheetInfo = () => useContext(SheetInfoContext);\r\n\r\nexport const Sheet: React.FunctionComponent<{\r\n  title: string;\r\n  description?: string;\r\n  notes: string;\r\n  tuning?: string;\r\n  meter?: number;\r\n  barsPerStave?: number;\r\n}> = (props) => {\r\n  const { notes, title, description, children } = props;\r\n  const { width, padding, staveHeightWithPadding, staveWidth } = useSettings();\r\n\r\n  const sheetInfo = merge(useSheetInfo(), props);\r\n  const { barsPerStave, tuning, meter } = sheetInfo;\r\n\r\n  const barWidth = useMemo(() => getBarWidth(staveWidth, barsPerStave), [\r\n    staveWidth,\r\n    barsPerStave,\r\n  ]);\r\n  const noteWidth = useMemo(() => getNoteWidth(barWidth, meter), [\r\n    barWidth,\r\n    meter,\r\n  ]);\r\n\r\n  const notesArray = notes.split(\";\").map((s) => s.trim());\r\n\r\n  const staveBarNotes = notesArray.reduce(\r\n    (acc: string[][][], note, noteIndex) => {\r\n      const barIndex = Math.floor(noteIndex / sheetInfo.meter);\r\n      const noteIndexInBar = noteIndex % sheetInfo.meter;\r\n      const staveIndex = Math.floor(barIndex / barsPerStave);\r\n      const barIndexInStave = barIndex % barsPerStave;\r\n\r\n      if (!acc[staveIndex]) {\r\n        acc[staveIndex] = [];\r\n      }\r\n\r\n      if (!acc[staveIndex][barIndexInStave]) {\r\n        acc[staveIndex][barIndexInStave] = [];\r\n      }\r\n\r\n      acc[staveIndex][barIndexInStave][noteIndexInBar] = note;\r\n      return acc;\r\n    },\r\n    []\r\n  );\r\n\r\n  const sheetHeight =\r\n    0.5 * padding + staveHeightWithPadding * staveBarNotes.length;\r\n\r\n  return (\r\n    <SheetInfoContext.Provider value={{ ...sheetInfo, barWidth, noteWidth }}>\r\n      <h1>{title}</h1>\r\n      {description && <p>{description}</p>}\r\n      <p>{tuning}</p>\r\n      <svg\r\n        viewBox={`0 0 ${width} ${sheetHeight}`}\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      >\r\n        {staveBarNotes.map((barNotes, staveIndex) => {\r\n          return (\r\n            <Stave\r\n              key={staveIndex}\r\n              y={0.5 * padding + staveHeightWithPadding * staveIndex}\r\n              barNotes={barNotes}\r\n            />\r\n          );\r\n        })}\r\n        {children}\r\n      </svg>\r\n    </SheetInfoContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\n\r\nexport const HopHighLadies1 = () => (\r\n  <Sheet\r\n    title=\"Hop High Ladies v1\"\r\n    notes={`\r\n      G:h  0,  2;h 0, 1;m0;m  0;\r\n      s  2,  4;b0040;m 0;b0000;\r\n      h  0,  2;h 0, 1;m0;m  0;\r\n      D7:h  0,  2;b0120;m  2;b0120;\r\n      G:h  0,  2;h 0, 1;m0;m  0;\r\n      m 0;b0000;h 0, 1;m0;\r\n      C:m2;b2102;h0,2;b2102;\r\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\r\n\r\n      G:m  0;m5;p2,0;b0000;\r\n      s  2,  4;b0040;m 0;b0000;\r\n      m  0;m5;p2,0;b0000;\r\n      D7:h  0,  2;b0120;m  2;b0120;\r\n      G:m  0;m5;p2,0;b0000;\r\n      m 0;b0000;h 0, 1;m0;\r\n      C:m2;b2102;h0,2;b2102;\r\n      p 3, 0;m  0;D7:h  0,  2;b0120\r\n    `}\r\n  />\r\n);\r\n\r\nexport const HopHighLadies2 = () => (\r\n  <Sheet\r\n    title=\"Hop High Ladies v2\"\r\n    notes={`\r\n        G:h  0,  2;h 0, 1;m0;b  0;\r\n        s  2,  4;b  4;m 0;b0;\r\n        h  0,  2;h 0, 1;m0;b  0;\r\n        D7:h  0,  2;d0, 1;m  2;m   0;\r\n        G:h  0,  2;h 0, 1;m0;b  0;\r\n        m 0;b0;h 0, 1;m0;\r\n        C:m2;d2, 1;h0,2;d2, 1;\r\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\r\n  \r\n        G:m  0;m5;p2,0;d 0,  0;\r\n        s  2,  4;b  4;m 0;b0;\r\n        m  0;m5;p2,0;d 0,  0;\r\n        D7:h  0,  2;d0, 1;m  2;m   0;\r\n        G:m  0;m5;p2,0;d 0,  0;\r\n        m 0;b0;h 0, 1;m0;\r\n        C:m2;d2, 1;h0,2;d2, 1;\r\n        p 3, 0;m  0;D7:h  0,  2;m   0\r\n      `}\r\n  />\r\n);\r\n\r\nexport default () => (\r\n  <>\r\n    <HopHighLadies1 />\r\n    <HopHighLadies2 />\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\n\r\nexport const WorriedMansBluesOriginal = () => (\r\n  <Sheet\r\n    title=\"Worried Man's Blues\"\r\n    notes={`\r\n      G;;;m   0;\r\n      m   0;b0000;m   0;m   2;\r\n      m  0;b0000;b0000;m  0;\r\n      m 0;b0000;m 0;m  2;\r\n      m  0;b0000;m  0;m   0;\r\n      C:m   2;b2102;m  0;m   2;\r\n      m  0;b2102;m  0;m   2;\r\n      m  0;b2102;m  0;m   2;\r\n\r\n      G:m   0;b0000;b0000;m   0;\r\n      m   0;b0000;m   0;m   2;\r\n      m  0;b0000;b0000;m  0;\r\n      m 0;b0000;m 0;m  2;\r\n      m  0;b0000;m   4;m  0;\r\n      D7:m  2;b0120;b0120;m  2;\r\n      m 0;m  2;m  0;m   4;\r\n      G:m  0;b0000;m0000;\r\n    `}\r\n  />\r\n);\r\n\r\nexport const WorriedMansBluesOctaveUpV1 = () => (\r\n  <Sheet\r\n    title=\"Worried Man's Blues (octave up v.1)\"\r\n    notes={`\r\n      G;;;m  7;\r\n      m  7;b987;m  7;m  9;\r\n      m 8;b987;b987;m 8;\r\n      m9;b987;m9;m a;\r\n      m 8;b987;m 8;m  7;\r\n      C:m  9;ba89;m 8;m  9;\r\n      m 8;ba89;m 8;m  9;\r\n      m 8;ba89;m 8;m  9;\r\n\r\n      G:m  7;b987;b987;m  7;\r\n      m  7;b987;m  7;m  9;\r\n      m 8;b987;b987;m 8;\r\n      m9;b987;m9;m a;\r\n      m 8;b987; m 7;m 8;\r\n      D7:m a;baa7;baa7;m a;\r\n      G:m9;m a;m 8;m 7;\r\n      m 8;b987;m987\r\n    `}\r\n  />\r\n);\r\n\r\nexport default () => (\r\n  <>\r\n    <WorriedMansBluesOriginal />\r\n    <WorriedMansBluesOctaveUpV1 />\r\n  </>\r\n);\r\n","import * as React from \"react\";\r\nimport { useEditor } from \"./Editor\";\r\nimport { useSettings } from \"../components/SettingsContext\";\r\nimport { useSheetInfo } from \"../components/Sheet\";\r\n\r\nconst Cursor = () => {\r\n  const { position } = useEditor();\r\n  const { padding, lineSpacing } = useSettings();\r\n  const { noteWidth } = useSheetInfo();\r\n  const x = padding + (0.1 + position) * noteWidth;\r\n  const height = lineSpacing * 5;\r\n  const y1 = 0.5 * padding - 0.5 * lineSpacing;\r\n  const y2 = y1 + height;\r\n\r\n  return (\r\n    <line x1={x} y1={y1} x2={x} y2={y2} strokeWidth={1} stroke=\"black\">\r\n      <animate\r\n        attributeName=\"visibility\"\r\n        from=\"visible\"\r\n        to=\"hidden\"\r\n        dur=\"1s\"\r\n        repeatCount=\"indefinite\"\r\n      />\r\n    </line>\r\n  );\r\n};\r\n\r\nexport default Cursor;\r\n","import React, {\r\n  useEffect,\r\n  useCallback,\r\n  useState,\r\n  useContext,\r\n  useMemo,\r\n} from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\nimport Cursor from \"./Cursor\";\r\n\r\nconst EditorContext = React.createContext<{\r\n  position: number;\r\n  meter: number;\r\n}>({\r\n  position: 0,\r\n  meter: 4,\r\n});\r\n\r\nexport const useEditor = () => useContext(EditorContext);\r\n\r\nconst Editor = () => {\r\n  const [notes, setNotes] = useState<string[]>([]);\r\n  const [position, setPosition] = useState(0);\r\n\r\n  const { move, addNote, del, backspace } = useMemo(\r\n    () => ({\r\n      move: (direction: \"left\" | \"right\") => {\r\n        switch (direction) {\r\n          case \"left\":\r\n            setPosition(Math.max(0, position - 1));\r\n            break;\r\n          case \"right\":\r\n            setPosition(Math.min(notes.length, position + 1));\r\n            break;\r\n        }\r\n      },\r\n      addNote: (note: string) => {\r\n        setNotes([...notes.slice(0, position), note, ...notes.slice(position)]);\r\n        setPosition(position + 1);\r\n      },\r\n      del: () => {\r\n        if (position < notes.length) {\r\n          setNotes([...notes.slice(0, position), ...notes.slice(position + 1)]);\r\n        }\r\n      },\r\n      backspace: () => {\r\n        setNotes([\r\n          ...notes.slice(0, Math.max(0, position - 1)),\r\n          ...notes.slice(position),\r\n        ]);\r\n        setPosition(Math.max(0, position - 1));\r\n      },\r\n    }),\r\n    [position, setPosition, notes, setNotes]\r\n  );\r\n\r\n  const onKey = useCallback(\r\n    ({ keyCode }: KeyboardEvent) => {\r\n      switch (keyCode) {\r\n        case 37:\r\n          move(\"left\");\r\n          break;\r\n        case 39:\r\n          move(\"right\");\r\n          break;\r\n        case 8:\r\n          backspace();\r\n          break;\r\n        case 46:\r\n          del();\r\n          break;\r\n        case 66:\r\n          addNote(\"b0000\");\r\n          break;\r\n      }\r\n    },\r\n    [move, addNote, backspace, del]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onKey);\r\n    return () => document.removeEventListener(\"keydown\", onKey);\r\n  }, [onKey]);\r\n\r\n  const meter = 4;\r\n\r\n  return (\r\n    <EditorContext.Provider value={{ position, meter }}>\r\n      <Sheet title=\"Editor\" meter={meter} notes={notes.join(\";\")}>\r\n        <Cursor />\r\n      </Sheet>\r\n    </EditorContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import * as React from \"react\";\r\nimport { Sheet, useSheetInfo } from \"../components/Sheet\";\r\nimport { useState } from \"react\";\r\nimport SettingsContext, { useSettings } from \"../components/SettingsContext\";\r\nimport { range } from \"../utils\";\r\n\r\nconst Cursor = (props: { position: number }) => {\r\n  const { position } = props;\r\n  const { sidePadding, staveHeightWithPadding } = useSettings();\r\n  const { noteWidth } = useSheetInfo();\r\n\r\n  const x = sidePadding + position * noteWidth;\r\n  const y = 0;\r\n\r\n  return (\r\n    <rect\r\n      {...{\r\n        x,\r\n        y,\r\n        width: noteWidth,\r\n        height: staveHeightWithPadding,\r\n      }}\r\n      strokeWidth={1}\r\n      stroke=\"black\"\r\n      fill=\"transparent\"\r\n    ></rect>\r\n  );\r\n};\r\n\r\nconst VirtualSheet: React.FunctionComponent<{\r\n  notes: string;\r\n  title: string;\r\n  position: number;\r\n}> = ({ notes, title, position }) => {\r\n  const notesArray = notes.split(\";\");\r\n  const notesCount = notesArray.length;\r\n  const barsPerStave = 2;\r\n\r\n  const { meter } = useSheetInfo();\r\n  const previewSize = meter * barsPerStave;\r\n\r\n  let start = Math.max(0, notesArray.length - previewSize);\r\n  let end = notesCount;\r\n\r\n  if (position < start) {\r\n    const adjustment = start - position;\r\n    start = position;\r\n    end -= adjustment;\r\n  }\r\n\r\n  const visibleNotes = notesArray.slice(start, end);\r\n  const blanksToAdd = Math.max(0, previewSize - notesArray.length);\r\n  const blanks = range(blanksToAdd).map((_) => \"\");\r\n  const visibleNotesWithBlanks = [...visibleNotes, ...blanks].join(\";\");\r\n\r\n  const adjustedPosition = position - start;\r\n\r\n  return (\r\n    <Sheet\r\n      {...{ title, notes: visibleNotesWithBlanks, barsPerStave }}\r\n      notes={visibleNotesWithBlanks}\r\n    >\r\n      <Cursor position={adjustedPosition} />\r\n    </Sheet>\r\n  );\r\n};\r\n\r\nexport default () => {\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [textPosition, setTextPosition] = useState(0);\r\n  const position = notes.substr(0, textPosition).split(\";\").length - 1;\r\n\r\n  return (\r\n    <>\r\n      <SettingsContext {...{ sidePaddingEnabled: false, width: 400 }}>\r\n        <VirtualSheet title=\"Editor\" {...{ position, notes }} />\r\n      </SettingsContext>\r\n      <br />\r\n      <textarea\r\n        rows={10}\r\n        onSelect={(e) =>\r\n          setTextPosition((e.target as HTMLTextAreaElement).selectionStart)\r\n        }\r\n        onChange={(e) => setNotes(e.target.value)}\r\n        value={notes}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\n\r\nconst notes = `\r\n  Am:m  2;b2122;m  2;b  0;\r\n  m  2;b  0;m  2;b 0;\r\n  C:m 1;b2102;m 1;m0;\r\n  h0,2;b2102;p2,0;b 1;\r\n  G:m0;b0000;m0;m 1;\r\n  b0;b2;b0;b 1;\r\n  Am:m 1;b2122;m 0;b2022;\r\n  m  2;b2122;m  2;b2122\r\n`;\r\n\r\nexport default () => (\r\n  <Sheet {...{ title: \"Rose Tattoo\", tuning: \"gDGBd\", meter: 4, notes }} />\r\n);\r\n","import React from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\n\r\nexport const PartA = () => (\r\n  <Sheet\r\n    title=\"Sandy River Belle A\"\r\n    notes={`\r\n      h   2;h  2;s  2,  4;b0040;\r\n      p  2;b0000;m2;m0;\r\n      h   2;h  2;s  2,  4;b0040;\r\n      p  2;b0000;m   2;m   0;\r\n\r\n      h   2;h  2;s  2,  4;b0040;\r\n      p  2;b0000;m2;m0;\r\n      d0, 5;d5, 5;d0, 5;d5, 5;\r\n      d0, 0;s  2,  4;m  0;b0000\r\n    `}\r\n  />\r\n);\r\n\r\nexport const PartB = () => (\r\n  <Sheet\r\n    title=\"Sandy River Belle B\"\r\n    notes={`\r\n      b0;b5;d 5,  7;b 5;\r\n      m9;d9, 8;d7, 8;d9, 8;\r\n      b0;b5;d 5,  7;b 5;\r\n      d 7,  9;b 7;m7;b7777;\r\n\r\n      b0;b5;d 5,  7;b 5;\r\n      m9;d9, 8;d7, 8;d9, 8;\r\n      d0, 5;d5, 5;d0, 5;d5, 5;\r\n      d0, 0;s  2,  4;m  0;b0000\r\n    `}\r\n  />\r\n);\r\n\r\nconst SandyRiverBelle = () => (\r\n  <>\r\n    <PartA />\r\n    <PartB />\r\n  </>\r\n);\r\n\r\nexport default SandyRiverBelle;\r\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const RussianShort = () => (\n  <Sheet\n    title=\"Russian National Anthem\"\n    description=\"short\"\n    tuning=\"gCGBd\"\n    barsPerStave={5}\n    notes={`\n      C:;;;d    x,  0;\n      C:b 1;h  2;G:b 0;d   4,   4;\n      Am:b  2;d  0,   5;C:b  0;d   0,   0;\n      Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n      Am:b  2;h 1;G:m0;d    x,  0;\n      C:b2;d0, 1;G:b0;d 0,  0;\n      Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n      F:b  2;d  0,   5;C:b  0;d   0,   0;\n      C:b 1; d 0,  2;m  0\n    `}\n  />\n);\n\nexport const RussianMelodyNotes = () => {\n  const middle = `\n    C:b 1;h  2;G:b 0;d   4,   4;\n    Am:b  2;d  0,   5;C:b  0;d   0,   0;\n    Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n    Am:b  2;h 1;G:b0;d    x,  0;\n    C:b2;d0, 1;G:b0;d 0,  0;\n    Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n    F:b  2;d  0,   5;C:b  0;d   0,   0;\n    C:b 1; d 0,  2;G:p  0, 0;h 1, 3;\n    C:b2;;d0, 1;h 1;\n    G:b0;d    x,  0;p  0, 0;h 1, 3;\n    C:b 1;;d 0,  2;h  2;    \n    G:b 0;d    x,   4;p   4,  0;p  2, 0;\n    C:b 1;p  2, 0;b 1;p  2, 0;\n    b 1;p  2, 1;F:b3;d3,    x;\n    F:b3;;G:p2;p 1;\n    C:b2;d    x, 1;b 1;;\n    Dm:b0;;p 1;p  2;\n    Am:b 1;d    x,  2;b  2;;\n    C:b 1;d 0,  2;b  0;d   0,   0;\n  `;\n  return (\n    <Sheet\n      title=\"Russian National Anthem\"\n      description=\"melody notes\"\n      tuning=\"gCGBd\"\n      barsPerStave={5}\n      notes={`\n      C:m2100;;;d    x,  0;     \n      ${middle}\n      C:b 1;d 0,  2;b  0;d    x,  0;\n      ${middle}\n      b  0;;b  2;b 0;\n      m2100;\n    `}\n    />\n  );\n};\n\nexport const RussianFullClawhammer = () => {\n  const middle = `\n    C:b 1;h  2;G:b 0;d   4,   4;\n    Am:b  2;d  0,   5;C:b  0;d   0,   0;\n    Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n    Am:b  2;h 1;G:b0002;d    x,  0;\n    C:b2;d0, 1;G:b0;d 0,  0;\n    Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n    F:b  2;d  0,   5;C:b  0;d   0,   0;\n    C:b 1; d 0,  2;G:p  0, 0;h 1, 3;\n    C:m2;b2100;d0, 1;h 1;\n    G:m0;b0002;p  0, 0;h 1, 3;\n    C:m 1;b2100;d 0,  2;h  2;    \n    G:m 0;b0002;p   4,  0;p  2, 0;\n    C:b 1;p  2, 0;b 1;p  2, 0;\n    b 1;d  2, 1;F:m3;b3120;\n    F:m3;b3120;G:p2;p 1;\n    C:m2;b2100;m 1;b2100;\n    G:m0;b0002;p 1;p  2;\n    Am:m 1;b2120;m  2;b2120;\n    C:b 1;d 0,  2;b  0;d   0,   0;\n  `;\n  return (\n    <Sheet\n      title=\"Russian National Anthem\"\n      description=\"clawhammer arrangement\"\n      tuning=\"gCGBd\"\n      barsPerStave={5}\n      notes={`\n      C:m2100;;;d    x,  0;     \n      ${middle}\n      C:b 1;d 0,  2;b  0;d    x,  0;\n      ${middle}\n      G:m  0;m0002;C:m  2;m 0;\n      m2100;\n    `}\n    />\n  );\n};\n\nconst Anthems = () => (\n  <>\n    <RussianShort />\n    {/* <RussianFull /> */}\n    <RussianFullClawhammer />\n  </>\n);\n\nexport default Anthems;\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\n//https://www.youtube.com/watch?v=_gCt8MgOzVk\nexport const MelodyNotes = () => {\n  const main = `\n    E:m2;h 1;\n    m0;p 1;\n    Am:m  2;d  2, 1;\n    m2;d0, 1;\n    E7:m 0;d    x, 1;\n    m0;m2;\n    Am:m 1;m  2;\n    m  2;;\n    Dm:d    x,0;d    x,3;\n    m7;p5,3;\n    Am/C:m2;d    x, 1;\n    m2;d0, 1;\n    E7:m 0;h 1;\n    m0;m2;\n    Am:m 1;m  2;\n    m  2;\n  `;\n  return (\n    <Sheet\n      title=\"Korobeiniki\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n        ${main};\n        ${main};\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;;\n        m  2;;\n        E:m  1;;\n        m 0;;\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;m2;\n        m7;m7;\n        E:m6;;\n        ;;\n        ${main};\n        ${main}\n\n\n    `}\n    />\n  );\n};\n\nexport const ShortVersion = () => {\n  return (\n    <Sheet\n      title=\"Korobeiniki\"\n      description=\"short\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n      E:b2;h 1;\n      b0;p 1;\n      Am:m  2;d  2, 1;\n      b2;d0, 1;\n      E7:b 0;h 1;\n      b0;m2;\n      Am:b 1;m  2;\n      m  2;;\n      Dm:p3;h3;\n      m7;p5,3;\n      Am/C:b2;h 1;\n      b2;d0, 1;\n      E7:b 0;h 1;\n      b0;m2;\n      Am:b 1;m  2;\n      m  2;\n    `}\n    />\n  );\n};\n\nexport const ShortVersion2 = () => {\n  return (\n    <Sheet\n      title=\"Korobeiniki\"\n      description=\"alternative short\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n      E:b2;h 1;\n      b0;p 1;\n      Am:m  2;d  2, 1;\n      b2;d0, 1;\n      E7:b 0;h 1;\n      b0;m2;\n      Am:b 1;m  2;\n      m  2;;\n      Dm:d 6,  7;d0, 6;\n      m7;p 8, 6;\n      Am/C:b 5;s  4,  5;\n      b 5;d0,  5;\n      E7:b 0;h 1;\n      b0;m2;\n      Am:b 1;m  2;\n      m  2;\n    `}\n    />\n  );\n};\n\nexport const FullVersion = () => {\n  const main = `\n    E:b2;h 1;\n    b0;p 1;\n    Am:m  2;d  2, 1;\n    b2;d0, 1;\n    E7:b 0;h 1;\n    b0;m2;\n    Am:b 1;m  2;\n    m  2;;\n    Dm:p3;h3;\n    m7;p5,3;\n    Am/C:b2;h 1;\n    b2;d0, 1;\n    E7:b 0;h 1;\n    b0;m2;\n    Am:b 1;m  2;\n    m  2;\n  `;\n  return (\n    <Sheet\n      title=\"Korobeiniki\"\n      description=\"clawhammer arrangement\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n        ${main};\n        ${main};\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;;\n        m  2;;\n        E:m  1;;\n        m 0;;\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;m2;\n        m7;m7;\n        E:m6;;\n        ;;\n        ${main};\n        ${main}\n\n\n    `}\n    />\n  );\n};\n\nconst Korobeiniki = () => (\n  <>\n    <MelodyNotes />\n    <ShortVersion />\n    <ShortVersion2 />\n    <FullVersion />\n  </>\n);\n\nexport default Korobeiniki;\n","import React from \"react\";\r\nimport { Sheet } from \"../components/Sheet\";\r\n\r\n// http://abcnotation.com/tunePage?a=trillian.mit.edu/~jc/music/abc/Russia/Kalinka/0000\r\nexport const CVersion = () => {\r\n  return (\r\n    <Sheet\r\n      title=\"Kalinka\"\r\n      description=\"lower\"\r\n      tuning=\"gCGBd\"\r\n      barsPerStave={9}\r\n      meter={2}\r\n      notes={`\r\n        ;b  2;\r\n        b  0;h   4,   5;\r\n        b  0;h   4,   5;\r\n        b  0;p   5,   4;\r\n        b   2;d  2,  2;\r\n        d  0,   5;h   4,   5;\r\n        b  0;h   4,   5;\r\n        b  0;p   5,   4;\r\n        m   2;\r\n      `}\r\n    />\r\n  );\r\n};\r\n\r\nexport const GVersion = () => {\r\n  return (\r\n    <Sheet\r\n      title=\"Kalinka\"\r\n      description=\"higher\"\r\n      tuning=\"gDGBd\"\r\n      barsPerStave={9}\r\n      meter={2}\r\n      notes={`\r\n        ;b 0;\r\n        b  2;p   3,  0;\r\n        b  2;p   3,  0;\r\n        b  2;d  0,   3;\r\n        b   2;d 0, 0;\r\n        p  2;p   3,  0;\r\n        b  2;p   3,  0;\r\n        b  2;d  0,   3;\r\n        m   2;\r\n      `}\r\n    />\r\n  );\r\n};\r\n\r\nconst Kalinka = () => (\r\n  <>\r\n    <CVersion />\r\n    <GVersion />\r\n  </>\r\n);\r\n\r\nexport default Kalinka;\r\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\n// https://www.slideshare.net/WrittenForGuitar/mortal-kombat-solo\nexport const MelodyNotes = () => {\n  return (\n    <Sheet\n      title=\"Mortal Kombat\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={4}\n      meter={4}\n      notes={`\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d 1,  0;d0, 1;\n        d   3,   3;d  2,   3;d 1,   3;p 1;\n\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d 1,  0;d 0,  0;\n        d   3,   3;d  2,   3;d 1,   3;p 1;\n\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d 1,  0;d 0,  0;\n        d   3,   3;d  2,   3;d 1,   3;p 1\n    `}\n    />\n  );\n};\n\nconst MortalKombat = () => (\n  <>\n    <MelodyNotes />\n  </>\n);\n\nexport default MortalKombat;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, HashRouter, Link } from \"react-router-dom\";\n\nimport HopHighLadies from \"./tunes/HopHighLadies\";\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\nimport InteractiveEditor from \"./interactive-editor/Editor\";\nimport TextEditor from \"./text-editor/Editor\";\nimport RoseTatoo from \"./tunes/RoseTatoo\";\n\nimport \"./App.css\";\nimport SettingsContext from \"./components/SettingsContext\";\nimport SandyRiverBelle from \"./tunes/SandyRiverBelle\";\nimport Anthems from \"./tunes/Anthems\";\nimport Korobeiniki from \"./tunes/Korobeiniki\";\nimport Kalinka from \"./tunes/Kalinka\";\nimport MortalKombat from \"./tunes/MortalKombat\";\n\ntype TitleRouteProps = {\n  path: string;\n  title: string;\n};\n\nconst TitleRoute: React.FunctionComponent<TitleRouteProps> = ({\n  path,\n  title,\n  children,\n}) => {\n  useEffect(() => {\n    document.title = \"Banjo Tab :: \" + title;\n  });\n  return <Route {...{ path }}>{children}</Route>;\n};\n\nconst App = () => {\n  const [showNotes, setShowNotes] = useState(false);\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div className=\"content\">\n          <span>\n            <input\n              type=\"checkbox\"\n              id=\"showNotes\"\n              checked={showNotes}\n              onChange={() => setShowNotes(!showNotes)}\n            />\n            <label htmlFor=\"showNotes\">Show Notes</label>\n            <br />\n            <Link to=\"/worried-man\">Worried Man's Blues</Link>\n            ::\n            {/* <Link to=\"/hop-high-ladies\">Hop High Ladies</Link>\n            :: */}\n            <Link to=\"/rose-tattoo\">Rose Tattoo</Link>\n            ::\n            {/* <Link to=\"/sandy-river-belle\">Sandy River Belle</Link>\n            :: */}\n            <Link to=\"/anthems\">Anthems</Link>\n            ::\n            <Link to=\"/korobeiniki\">Korobeiniki</Link>\n            ::\n            <Link to=\"/mortal-kombat\">Mortal Kombat</Link>\n            {/* ::\n          <Link to=\"/interactive-editor\">Interactive Editor</Link> */}\n            {/* :: */}\n            {/* <Link to=\"/text-editor\">Text Editor</Link> */}\n          </span>\n          <SettingsContext {...{ showNotes }}>\n            <Switch>\n              <TitleRoute path=\"/worried-man\" title=\"Worried Man's Blues\">\n                <WorriedMansBlues />\n              </TitleRoute>\n              <TitleRoute path=\"/hop-high-ladies\" title=\"Hop High Ladies\">\n                <HopHighLadies />\n              </TitleRoute>\n              <TitleRoute path=\"/rose-tattoo\" title=\"Rose Tattoo\">\n                <RoseTatoo />\n              </TitleRoute>\n              <TitleRoute path=\"/interactive-editor\" title=\"Interactive Editor\">\n                <InteractiveEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/text-editor\" title=\"Text Editor\">\n                <TextEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/sandy-river-belle\" title=\"Sandy River Belle\">\n                <SandyRiverBelle />\n              </TitleRoute>\n              <TitleRoute path=\"/anthems\" title=\"Anthems\">\n                <Anthems />\n              </TitleRoute>\n              <TitleRoute path=\"/korobeiniki\" title=\"Korobeiniki\">\n                <Korobeiniki />\n              </TitleRoute>\n              <TitleRoute path=\"/kalinka\" title=\"Kalinka\">\n                <Kalinka />\n              </TitleRoute>\n              <TitleRoute path=\"/mortal-kombat\" title=\"Mortal Kombat\">\n                <MortalKombat />\n              </TitleRoute>\n              <Route path=\"/\">\n                <Redirect to=\"/worried-man\" />\n              </Route>\n            </Switch>\n          </SettingsContext>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}