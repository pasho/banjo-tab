{"version":3,"sources":["utils.ts","components/SettingsContext.tsx","components/Chord.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","interactive-editor/Cursor.tsx","interactive-editor/Editor.tsx","text-editor/Editor.tsx","tunes/RoseTatoo.tsx","tunes/SandyRiverBelle.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","merge","defaultValue","overrides","Object","reduce","acc","key","coreSettings","width","lineSpacing","sidePaddingEnabled","textCharCentreOffset","x","y","noteHorizontalLineAdjustment","showNotes","getPadding","getStaveHeight","getSidePadding","padding","staveHeight","sidePadding","derivedSettings","staveHeightWithPadding","staveWidth","Settings","React","useSettings","useContext","SettingsContext","props","useMemo","getStaveHeightWithPadding","getStaveWidth","Provider","value","children","Chord","chord","noteX","staveY","SingleNote","tuning","useSheetInfo","Utils","scale","split","stringNote","toLowerCase","reverse","stringNoteIndex","lowestStringIndex","noteTailY1","noteTailY2","noteCentreX","noteY","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","substr","PullOffNote","SlideNote","Note","noteType","BarLine","settings","StaveLine","Stave","barWidth","noteWidth","barNotes","i","notes","barIndex","barX","noteString","noteIndex","s","trim","part","toUpperCase","SheetInfoContext","meter","barsPerStave","Sheet","title","sheetInfo","getBarWidth","getNoteWidth","staveBarNotes","note","floor","noteIndexInBar","staveIndex","barIndexInStave","sheetHeight","viewBox","preserveAspectRatio","HopHighLadies1","HopHighLadies2","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","Cursor","position","useEditor","attributeName","to","dur","repeatCount","EditorContext","createContext","Editor","useState","setNotes","setPosition","move","direction","max","addNote","slice","del","backspace","onKey","useCallback","keyCode","useEffect","document","addEventListener","removeEventListener","join","height","VirtualSheet","notesArray","notesCount","previewSize","start","end","adjustment","visibleNotes","blanksToAdd","blanks","_","visibleNotesWithBlanks","adjustedPosition","textPosition","setTextPosition","rows","onSelect","e","target","selectionStart","onChange","PartA","PartB","SandyRiverBelle","TitleRoute","path","App","setShowNotes","className","type","id","checked","htmlFor","WorriedMansBlues","HopHighLadies","RoseTatoo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ad9d3fc7.chunk.js","sourcesContent":["export const range = (length: number) => Array.from(Array(length).keys());\n\nexport const getStringFrets = (strings: string) =>\n  range(5)\n    .map((stringIndex) => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\n    .map(({ stringIndex, fret }) => {\n      if (isNaN(parseInt(fret))) {\n        const alphabet = \"abcdefghijklmnopqrst\";\n        const alphaIndex = alphabet.indexOf(fret);\n        if (alphaIndex !== -1) {\n          const doubleDigitFret = 10 + alphaIndex;\n          return { stringIndex, fret: doubleDigitFret.toString() };\n        }\n      }\n      return { stringIndex, fret };\n    });\n\nexport const getLowestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\n};\n\nexport const getHighestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[0]?.stringIndex;\n};\n\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\n  const stringNoteIndex = scale.indexOf(stringNote);\n  const fretIndex = parseInt(fret);\n\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\n\n  return fretNote;\n};\n\nexport const merge = <T>(defaultValue: T, overrides: Partial<T>): T => {\n  return (Object.keys(defaultValue) as (keyof T)[]).reduce(\n    (acc, key) =>\n      overrides[key] !== undefined\n        ? { ...acc, ...{ [key]: overrides[key] } }\n        : acc,\n    { ...defaultValue }\n  );\n};\n","import * as React from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { merge } from \"../utils\";\n\nconst width = 800;\nconst lineSpacing = 10;\nconst sidePaddingEnabled = true;\n// Accounts for font size and svg discrepancies.\nconst textCharCentreOffset = {\n  x: -3.5,\n  y: 4,\n};\n// Accounts for different widths of vertical and horizontal lines and ugly edges.\nconst noteHorizontalLineAdjustment = 0.5;\nconst showNotes = false;\n\nconst coreSettings = {\n  width,\n  lineSpacing,\n  sidePaddingEnabled,\n  textCharCentreOffset,\n  noteHorizontalLineAdjustment,\n  showNotes,\n};\n\nconst getPadding = (lineSpacing: number) => 5 * lineSpacing;\nconst getStaveHeight = (lineSpacing: number) => lineSpacing * 4;\nconst getSidePadding = (sidePaddingEnabled: boolean, padding: number) =>\n  sidePaddingEnabled ? padding : 0;\nconst getStaveHeightWithPadding = (staveHeight: number, padding: number) =>\n  staveHeight + padding;\nconst getStaveWidth = (width: number, sidePadding: number) =>\n  width - sidePadding;\n\nconst padding = getPadding(lineSpacing);\nconst staveHeight = getStaveHeight(lineSpacing);\nconst sidePadding = getSidePadding(sidePaddingEnabled, padding);\n\nconst staveHeightWithPadding = staveHeight + padding;\nconst staveWidth = width - sidePadding * 2;\n\nconst derivedSettings = {\n  padding,\n  staveHeight,\n  sidePadding,\n  staveHeightWithPadding,\n  staveWidth,\n};\n\nconst Settings = React.createContext({\n  ...coreSettings,\n  ...derivedSettings,\n});\n\nexport const useSettings = () => useContext(Settings);\n\nconst SettingsContext: React.FunctionComponent<Partial<typeof coreSettings>> = (\n  props\n) => {\n  const coreSettings = merge(useSettings(), props);\n  const { lineSpacing, sidePaddingEnabled, width } = coreSettings;\n\n  const padding = useMemo(() => getPadding(lineSpacing), [lineSpacing]);\n  const staveHeight = useMemo(() => getStaveHeight(lineSpacing), [lineSpacing]);\n  const sidePadding = useMemo(\n    () => getSidePadding(sidePaddingEnabled, lineSpacing),\n    [sidePaddingEnabled, lineSpacing]\n  );\n  const staveHeightWithPadding = useMemo(\n    () => getStaveHeightWithPadding(staveHeight, padding),\n    [staveHeight, padding]\n  );\n  const staveWidth = useMemo(() => getStaveWidth(width, sidePadding), [\n    width,\n    sidePadding,\n  ]);\n\n  return (\n    <Settings.Provider\n      value={{\n        ...coreSettings,\n        padding,\n        staveHeight,\n        sidePadding,\n        staveHeightWithPadding,\n        staveWidth,\n      }}\n    >\n      {props.children}\n    </Settings.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import * as React from \"react\";\nimport { useSettings } from \"./SettingsContext\";\n\nexport const Chord = ({\n  chord,\n  noteX,\n  staveY,\n  width,\n}: {\n  chord: string;\n  noteX: number;\n  staveY: number;\n  width: number;\n}) => {\n  const { lineSpacing, textCharCentreOffset } = useSettings();\n  if (!chord) {\n    return null;\n  }\n  const x = noteX + width / 2 + chord.length * textCharCentreOffset.x;\n  const y = staveY - 1.5 * lineSpacing + textCharCentreOffset.y;\n  return <text {...{ x, y }}>{chord}</text>;\n};\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./SettingsContext\";\n\nexport type NoteProps = {\n  strings: string;\n  x: number;\n  y: number;\n  width: number;\n};\n\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\n  const { tuning } = useSheetInfo();\n  const {\n    showNotes,\n    lineSpacing,\n    staveHeight,\n    textCharCentreOffset,\n  } = useSettings();\n  const stringFrets = Utils.getStringFrets(strings).map(\n    ({ stringIndex, fret }) => {\n      if (showNotes) {\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\n        return { stringIndex, fret: fret + fretNote };\n      }\n      return { stringIndex, fret };\n    }\n  );\n\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\n  const noteTailY1 = y + lineSpacing * (lowestStringIndex + 0.5);\n  const noteTailY2 = y + staveHeight + lineSpacing;\n  const noteCentreX = x + width * 0.5;\n\n  return (\n    <>\n      {stringFrets.map(({ stringIndex, fret }) => {\n        const noteX = noteCentreX + textCharCentreOffset.x * fret.length;\n        const noteY = y + stringIndex * lineSpacing + textCharCentreOffset.y;\n        return (\n          <text key={stringIndex} x={noteX} y={noteY}>\n            {fret}\n          </text>\n        );\n      })}\n      <line\n        x1={noteCentreX}\n        y1={noteTailY1}\n        x2={noteCentreX}\n        y2={noteTailY2}\n        strokeWidth={1}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const DoubleNote = (props: NoteProps) => {\n  const {\n    staveHeight,\n    lineSpacing,\n    noteHorizontalLineAdjustment,\n  } = useSettings();\n  const horizontalLineY = props.y + staveHeight + lineSpacing;\n  const horizontalLineX1 =\n    props.x + props.width * 0.25 - noteHorizontalLineAdjustment;\n  const horizontalLineX2 =\n    props.x + props.width * 0.75 + noteHorizontalLineAdjustment;\n  const [strings1, strings2] = props.strings.split(\",\");\n  return (\n    <>\n      <SingleNote\n        strings={strings1}\n        width={props.width * 0.5}\n        x={props.x}\n        y={props.y}\n      />\n      <SingleNote\n        strings={strings2}\n        width={props.width * 0.5}\n        x={props.x + props.width * 0.5}\n        y={props.y}\n      />\n      <line\n        x1={horizontalLineX1}\n        y1={horizontalLineY}\n        x2={horizontalLineX2}\n        y2={horizontalLineY}\n        strokeWidth={3}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const BrushNote = (props: NoteProps) => (\n  <DoubleNote\n    x={props.x}\n    y={props.y}\n    width={props.width}\n    strings={props.strings + \",    0\"}\n  />\n);\n\nexport const SlurNote = (\n  props: NoteProps & {\n    label: string;\n  }\n) => {\n  const { lineSpacing, textCharCentreOffset, staveHeight } = useSettings();\n  const [strings1, strings2] = props.strings.split(\",\");\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\n\n  const arcX1 = props.x + props.width * 0.25;\n  const arcX2 = props.x + props.width * 0.75;\n  const arcY1 = props.y + (highestString1 - 0.5) * lineSpacing;\n  const arcY2 = props.y + (highestString2 - 0.5) * lineSpacing;\n\n  const arcControlX1 = arcX1 + 0.5 * lineSpacing;\n  const arcControlX2 = arcX2 - 0.5 * lineSpacing;\n  const arcControlY1 = arcY1 - 0.5 * lineSpacing;\n  const arcControlY2 = arcY2 - 0.5 * lineSpacing;\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\n\n  const labelLength = props.label.length;\n  const labelX =\n    props.x + 0.5 * props.width + textCharCentreOffset.x * labelLength;\n  const labelY =\n    props.y + staveHeight + 2 * lineSpacing + textCharCentreOffset.y;\n\n  return (\n    <>\n      <DoubleNote\n        x={props.x}\n        y={props.y}\n        width={props.width}\n        strings={props.strings}\n      />\n      <path\n        d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill=\"transparent\"\n      />\n      <text x={labelX} y={labelY}>\n        {props.label}\n      </text>\n    </>\n  );\n};\n\nexport const HammerOnNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings.substr(0, props.strings.length - 1) + \"0,\" + props.strings\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"H\" } }} />;\n};\n\nexport const PullOffNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings +\n        \",\" +\n        props.strings.substr(0, props.strings.length - 1) +\n        \"0\"\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"P\" } }} />;\n};\n\nexport const SlideNote = (props: NoteProps) => (\n  <SlurNote {...props} label=\"SL\" />\n);\n\nexport const Note = (\n  props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }\n) => {\n  switch (props.noteType) {\n    case \"b\":\n      return <BrushNote {...props} />;\n    case \"h\":\n      return <HammerOnNote {...props} />;\n    case \"p\":\n      return <PullOffNote {...props} />;\n    case \"s\":\n      return <SlideNote {...props} />;\n    case \"m\":\n      return <SingleNote {...props} />;\n    case \"d\":\n      return <DoubleNote {...props} />;\n    default:\n      return null;\n  }\n};\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { Chord } from \"./Chord\";\nimport { Note } from \"./Notes\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./SettingsContext\";\n\nconst BarLine = (props: { x: number; y: number }) => {\n  const settings = useSettings();\n  return (\n    <line\n      x1={props.x}\n      y1={props.y}\n      x2={props.x}\n      y2={props.y + settings.staveHeight}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nconst StaveLine = (props: { y: number; width: number }) => {\n  const { sidePadding } = useSettings();\n  return (\n    <line\n      x1={sidePadding}\n      y1={props.y}\n      x2={sidePadding + props.width}\n      y2={props.y}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nexport const Stave = (props: { y: number; barNotes: string[][] }) => {\n  const { lineSpacing, sidePadding } = useSettings();\n  const { barWidth, noteWidth } = useSheetInfo();\n  const staveWidth = barWidth * props.barNotes.length;\n\n  return (\n    <>\n      {Utils.range(5).map((i) => (\n        <StaveLine key={i} y={props.y + i * lineSpacing} width={staveWidth} />\n      ))}\n      {Utils.range(props.barNotes.length + 1).map((i) => (\n        <BarLine key={i} y={props.y} x={sidePadding + i * barWidth} />\n      ))}\n      {props.barNotes.map((notes, barIndex) => {\n        const barX = sidePadding + barIndex * barWidth;\n        return notes.map((noteString, noteIndex) => {\n          const noteX = barX + noteIndex * noteWidth;\n          const { noteType, strings, chord } = noteString\n            .split(\":\")\n            .map((s) => s.trim())\n            .reduce(\n              (acc, part) => {\n                if (part[0]) {\n                  if (part[0] === part[0].toUpperCase()) {\n                    //chord\n                    return { ...acc, chord: part };\n                  } else if (part[0] === part[0].toLowerCase()) {\n                    //note\n                    return {\n                      ...acc,\n                      noteType: part[0],\n                      strings: part.substr(1),\n                    };\n                  }\n                }\n                return acc;\n              },\n              {\n                noteType: \"\",\n                strings: \"\",\n                chord: \"\",\n              }\n            );\n\n          return (\n            <React.Fragment key={noteIndex}>\n              <Chord {...{ chord, noteX, staveY: props.y, width: noteWidth }} />\n              <Note\n                {...{\n                  noteType,\n                  strings,\n                  x: noteX,\n                  y: props.y,\n                  width: noteWidth,\n                }}\n              />\n            </React.Fragment>\n          );\n        });\n      })}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Stave } from \"./Stave\";\nimport { useContext, useMemo } from \"react\";\nimport { useSettings } from \"./SettingsContext\";\nimport { merge } from \"../utils\";\n\nconst defaultSheetInfo = {\n  tuning: \"gDGBd\",\n  meter: 4,\n  barsPerStave: 4,\n  barWidth: 0,\n  noteWidth: 0,\n};\n\nconst getBarWidth = (staveWidth: number, barsPerStave: number) =>\n  staveWidth / barsPerStave;\nconst getNoteWidth = (barWidth: number, meter: number) => barWidth / meter;\n\nconst SheetInfoContext = React.createContext(defaultSheetInfo);\n\nexport const useSheetInfo = () => useContext(SheetInfoContext);\n\nexport const Sheet: React.FunctionComponent<{\n  title: string;\n  notes: string;\n  tuning?: string;\n  meter?: number;\n  barsPerStave?: number;\n}> = (props) => {\n  const { notes, title, children } = props;\n  const { width, padding, staveHeightWithPadding, staveWidth } = useSettings();\n\n  const sheetInfo = merge(useSheetInfo(), props);\n  const { barsPerStave, tuning, meter } = sheetInfo;\n\n  const barWidth = useMemo(() => getBarWidth(staveWidth, barsPerStave), [\n    staveWidth,\n    barsPerStave,\n  ]);\n  const noteWidth = useMemo(() => getNoteWidth(barWidth, meter), [\n    barWidth,\n    meter,\n  ]);\n\n  const notesArray = notes.split(\";\").map((s) => s.trim());\n\n  const staveBarNotes = notesArray.reduce(\n    (acc: string[][][], note, noteIndex) => {\n      const barIndex = Math.floor(noteIndex / sheetInfo.meter);\n      const noteIndexInBar = noteIndex % sheetInfo.meter;\n      const staveIndex = Math.floor(barIndex / barsPerStave);\n      const barIndexInStave = barIndex % barsPerStave;\n\n      if (!acc[staveIndex]) {\n        acc[staveIndex] = [];\n      }\n\n      if (!acc[staveIndex][barIndexInStave]) {\n        acc[staveIndex][barIndexInStave] = [];\n      }\n\n      acc[staveIndex][barIndexInStave][noteIndexInBar] = note;\n      return acc;\n    },\n    []\n  );\n\n  const sheetHeight =\n    0.5 * padding + staveHeightWithPadding * staveBarNotes.length;\n\n  return (\n    <SheetInfoContext.Provider value={{ ...sheetInfo, barWidth, noteWidth }}>\n      <h1>{title}</h1>\n      <p>{tuning}</p>\n      <svg\n        viewBox={`0 0 ${width} ${sheetHeight}`}\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        {staveBarNotes.map((barNotes, staveIndex) => {\n          return (\n            <Stave\n              key={staveIndex}\n              y={0.5 * padding + staveHeightWithPadding * staveIndex}\n              barNotes={barNotes}\n            />\n          );\n        })}\n        {children}\n      </svg>\n    </SheetInfoContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const HopHighLadies1 = () => (\n  <Sheet\n    title=\"Hop High Ladies v1\"\n    notes={`\n      G:h  0,  2;h 0, 1;m0;m  0;\n      s  2,  4;b0040;m 0;b0000;\n      h  0,  2;h 0, 1;m0;m  0;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:h  0,  2;h 0, 1;m0;m  0;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\n\n      G:m  0;m5;p2,0;b0000;\n      s  2,  4;b0040;m 0;b0000;\n      m  0;m5;p2,0;b0000;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:m  0;m5;p2,0;b0000;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      p 3, 0;m  0;D7:h  0,  2;b0120\n    `}\n  />\n);\n\nexport const HopHighLadies2 = () => (\n  <Sheet\n    title=\"Hop High Ladies v2\"\n    notes={`\n        G:h  0,  2;h 0, 1;m0;b  0;\n        s  2,  4;b  4;m 0;b0;\n        h  0,  2;h 0, 1;m0;b  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:h  0,  2;h 0, 1;m0;b  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\n  \n        G:m  0;m5;p2,0;d 0,  0;\n        s  2,  4;b  4;m 0;b0;\n        m  0;m5;p2,0;d 0,  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:m  0;m5;p2,0;d 0,  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        p 3, 0;m  0;D7:h  0,  2;m   0\n      `}\n  />\n);\n\nexport default () => (\n  <>\n    <HopHighLadies1 />\n    <HopHighLadies2 />\n  </>\n);\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const WorriedMansBluesOriginal = () => (\n  <Sheet\n    title=\"Worried Man's Blues\"\n    notes={`\n      G;;;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m  0;m   0;\n      C:m   2;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n\n      G:m   0;b0000;b0000;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m   4;m  0;\n      D7:m  2;b0120;b0120;m  2;\n      m 0;m  2;m  0;m   4;\n      G:m  0;b0000;m0000;\n    `}\n  />\n);\n\nexport const WorriedMansBluesOctaveUpV1 = () => (\n  <Sheet\n    title=\"Worried Man's Blues (octave up v.1)\"\n    notes={`\n      G;;;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987;m 8;m  7;\n      C:m  9;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n\n      G:m  7;b987;b987;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987; m 7;m 8;\n      D7:m a;baa7;baa7;m a;\n      G:m9;m a;m 8;m 7;\n      m 8;b987;m987\n    `}\n  />\n);\n\nexport default () => (\n  <>\n    <WorriedMansBluesOriginal />\n    <WorriedMansBluesOctaveUpV1 />\n  </>\n);\n","import * as React from \"react\";\nimport { useEditor } from \"./Editor\";\nimport { useSettings } from \"../components/SettingsContext\";\nimport { useSheetInfo } from \"../components/Sheet\";\n\nconst Cursor = () => {\n  const { position } = useEditor();\n  const { padding, lineSpacing } = useSettings();\n  const { noteWidth } = useSheetInfo();\n  const x = padding + (0.1 + position) * noteWidth;\n  const height = lineSpacing * 5;\n  const y1 = 0.5 * padding - 0.5 * lineSpacing;\n  const y2 = y1 + height;\n\n  return (\n    <line x1={x} y1={y1} x2={x} y2={y2} strokeWidth={1} stroke=\"black\">\n      <animate\n        attributeName=\"visibility\"\n        from=\"visible\"\n        to=\"hidden\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </line>\n  );\n};\n\nexport default Cursor;\n","import React, {\n  useEffect,\n  useCallback,\n  useState,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { Sheet } from \"../components/Sheet\";\nimport Cursor from \"./Cursor\";\n\nconst EditorContext = React.createContext<{\n  position: number;\n  meter: number;\n}>({\n  position: 0,\n  meter: 4,\n});\n\nexport const useEditor = () => useContext(EditorContext);\n\nconst Editor = () => {\n  const [notes, setNotes] = useState<string[]>([]);\n  const [position, setPosition] = useState(0);\n\n  const { move, addNote, del, backspace } = useMemo(\n    () => ({\n      move: (direction: \"left\" | \"right\") => {\n        switch (direction) {\n          case \"left\":\n            setPosition(Math.max(0, position - 1));\n            break;\n          case \"right\":\n            setPosition(Math.min(notes.length, position + 1));\n            break;\n        }\n      },\n      addNote: (note: string) => {\n        setNotes([...notes.slice(0, position), note, ...notes.slice(position)]);\n        setPosition(position + 1);\n      },\n      del: () => {\n        if (position < notes.length) {\n          setNotes([...notes.slice(0, position), ...notes.slice(position + 1)]);\n        }\n      },\n      backspace: () => {\n        setNotes([\n          ...notes.slice(0, Math.max(0, position - 1)),\n          ...notes.slice(position),\n        ]);\n        setPosition(Math.max(0, position - 1));\n      },\n    }),\n    [position, setPosition, notes, setNotes]\n  );\n\n  const onKey = useCallback(\n    ({ keyCode }: KeyboardEvent) => {\n      switch (keyCode) {\n        case 37:\n          move(\"left\");\n          break;\n        case 39:\n          move(\"right\");\n          break;\n        case 8:\n          backspace();\n          break;\n        case 46:\n          del();\n          break;\n        case 66:\n          addNote(\"b0000\");\n          break;\n      }\n    },\n    [move, addNote, backspace, del]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKey);\n    return () => document.removeEventListener(\"keydown\", onKey);\n  }, [onKey]);\n\n  const meter = 4;\n\n  return (\n    <EditorContext.Provider value={{ position, meter }}>\n      <Sheet title=\"Editor\" meter={meter} notes={notes.join(\";\")}>\n        <Cursor />\n      </Sheet>\n    </EditorContext.Provider>\n  );\n};\n\nexport default Editor;\n","import * as React from \"react\";\nimport { Sheet, useSheetInfo } from \"../components/Sheet\";\nimport { useState } from \"react\";\nimport SettingsContext, { useSettings } from \"../components/SettingsContext\";\nimport { range } from \"../utils\";\n\nconst Cursor = (props: { position: number }) => {\n  const { position } = props;\n  const { sidePadding, staveHeightWithPadding } = useSettings();\n  const { noteWidth } = useSheetInfo();\n\n  const x = sidePadding + position * noteWidth;\n  const y = 0;\n\n  return (\n    <rect\n      {...{\n        x,\n        y,\n        width: noteWidth,\n        height: staveHeightWithPadding,\n      }}\n      strokeWidth={1}\n      stroke=\"black\"\n      fill=\"transparent\"\n    ></rect>\n  );\n};\n\nconst VirtualSheet: React.FunctionComponent<{\n  notes: string;\n  title: string;\n  position: number;\n}> = ({ notes, title, position }) => {\n  const notesArray = notes.split(\";\");\n  const notesCount = notesArray.length;\n  const barsPerStave = 2;\n\n  const { meter } = useSheetInfo();\n  const previewSize = meter * barsPerStave;\n\n  let start = Math.max(0, notesArray.length - previewSize);\n  let end = notesCount;\n\n  if (position < start) {\n    const adjustment = start - position;\n    start = position;\n    end -= adjustment;\n  }\n\n  const visibleNotes = notesArray.slice(start, end);\n  const blanksToAdd = Math.max(0, previewSize - notesArray.length);\n  const blanks = range(blanksToAdd).map((_) => \"\");\n  const visibleNotesWithBlanks = [...visibleNotes, ...blanks].join(\";\");\n\n  const adjustedPosition = position - start;\n\n  return (\n    <Sheet\n      {...{ title, notes: visibleNotesWithBlanks, barsPerStave }}\n      notes={visibleNotesWithBlanks}\n    >\n      <Cursor position={adjustedPosition} />\n    </Sheet>\n  );\n};\n\nexport default () => {\n  const [notes, setNotes] = useState(\"\");\n  const [textPosition, setTextPosition] = useState(0);\n  const position = notes.substr(0, textPosition).split(\";\").length - 1;\n\n  return (\n    <>\n      <SettingsContext {...{ sidePaddingEnabled: false, width: 400 }}>\n        <VirtualSheet title=\"Editor\" {...{ position, notes }} />\n      </SettingsContext>\n      <br />\n      <textarea\n        rows={10}\n        onSelect={(e) =>\n          setTextPosition((e.target as HTMLTextAreaElement).selectionStart)\n        }\n        onChange={(e) => setNotes(e.target.value)}\n        value={notes}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nconst notes = `\n  Am:m  2;b2122;m  2;b  0;\n  m  2;b  0;m  2;b 0;\n  C:m 1;b2102;m 1;m0;\n  h0,2;b2102;p2,0;b 1;\n  G:m0;b0000;m0;m 1;\n  b0;b2;b0;b 1;\n  Am:m 1;b2122;m 0;b2022;\n  m  2;b2122;m  2;b2122\n`;\n\nexport default () => (\n  <Sheet {...{ title: \"Rose Tattoo\", tuning: \"gDGBd\", meter: 4, notes }} />\n);\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nexport const PartA = () => (\n  <Sheet\n    title=\"Sandy River Belle A\"\n    notes={`\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m2;m0;\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m   2;m   0;\n\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m2;m0;\n      d0, 5;d5, 5;d0, 5;d5, 5;\n      d0, 0;s  2,  4;m  0;b0000\n    `}\n  />\n);\n\nexport const PartB = () => (\n  <Sheet\n    title=\"Sandy River Belle B\"\n    notes={`\n      b0;b5;d 5,  7;b 5;\n      m9;d9, 8;d7, 8;d9, 8;\n      b0;b5;d 5,  7;b 5;\n      d 7,  9;b 7;m7;b7777;\n\n      b0;b5;d 5,  7;b 5;\n      m9;d9, 8;d7, 8;d9, 8;\n      d0, 5;d5, 5;d0, 5;d5, 5;\n      d0, 0;s  2,  4;m  0;b0000\n    `}\n  />\n);\n\nconst SandyRiverBelle = () => (\n  <>\n    <PartA />\n    <PartB />\n  </>\n);\n\nexport default SandyRiverBelle;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, HashRouter, Link } from \"react-router-dom\";\n\nimport HopHighLadies from \"./tunes/HopHighLadies\";\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\nimport InteractiveEditor from \"./interactive-editor/Editor\";\nimport TextEditor from \"./text-editor/Editor\";\nimport RoseTatoo from \"./tunes/RoseTatoo\";\n\nimport \"./App.css\";\nimport SettingsContext from \"./components/SettingsContext\";\nimport SandyRiverBelle from \"./tunes/SandyRiverBelle\";\n\ntype TitleRouteProps = {\n  path: string;\n  title: string;\n};\n\nconst TitleRoute: React.FunctionComponent<TitleRouteProps> = ({\n  path,\n  title,\n  children,\n}) => {\n  useEffect(() => {\n    document.title = \"Banjo Tab :: \" + title;\n  });\n  return <Route {...{ path }}>{children}</Route>;\n};\n\nconst App = () => {\n  const [showNotes, setShowNotes] = useState(false);\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div className=\"content\">\n          <span>\n            <input\n              type=\"checkbox\"\n              id=\"showNotes\"\n              checked={showNotes}\n              onChange={() => setShowNotes(!showNotes)}\n            />\n            <label htmlFor=\"showNotes\">Show Notes</label>\n            <br />\n            <Link to=\"/worried-man\">Worried Man's Blues</Link>\n            ::\n            <Link to=\"/hop-high-ladies\">Hop High Ladies</Link>\n            ::\n            <Link to=\"/rose-tattoo\">Rose Tattoo</Link>\n            ::\n            <Link to=\"/sandy-river-belle\">Sandy River Belle</Link>\n            {/* ::\n          <Link to=\"/interactive-editor\">Interactive Editor</Link> */}\n            ::\n            <Link to=\"/text-editor\">Text Editor</Link>\n          </span>\n          <SettingsContext {...{ showNotes }}>\n            <Switch>\n              <TitleRoute path=\"/worried-man\" title=\"Worried Man's Blues\">\n                <WorriedMansBlues />\n              </TitleRoute>\n              <TitleRoute path=\"/hop-high-ladies\" title=\"Hop High Ladies\">\n                <HopHighLadies />\n              </TitleRoute>\n              <TitleRoute path=\"/rose-tattoo\" title=\"Rose Tattoo\">\n                <RoseTatoo />\n              </TitleRoute>\n              <TitleRoute path=\"/interactive-editor\" title=\"Interactive Editor\">\n                <InteractiveEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/text-editor\" title=\"Text Editor\">\n                <TextEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/sandy-river-belle\" title=\"Sandy River Belle\">\n                <SandyRiverBelle />\n              </TitleRoute>\n              <Route path=\"/\">\n                <Redirect to=\"/worried-man\" />\n              </Route>\n            </Switch>\n          </SettingsContext>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}