{"version":3,"sources":["utils.ts","components/SettingsContext.tsx","components/Chord.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","interactive-editor/Cursor.tsx","interactive-editor/Editor.tsx","text-editor/Editor.tsx","tunes/RoseTatoo.tsx","tunes/SandyRiverBelle.tsx","components/VexTabSheet.tsx","tunes/RussianAnthem.tsx","tunes/Korobeiniki.tsx","tunes/Kalinka.tsx","tunes/MortalKombat.tsx","tunes/Lambada.tsx","tunes/MoonlightShadow.tsx","tunes/PrinceIgor.tsx","tunes/Sokolov.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","merge","defaultValue","overrides","Object","reduce","acc","key","getBarNotes","notes","meter","split","s","trim","note","index","lastBar","rest","slice","reverse","bars","bar","getBarNotesForEditor","coreSettings","width","lineSpacing","sidePaddingEnabled","textCharCentreOffset","x","y","noteHorizontalLineAdjustment","showNotes","getPadding","getStaveHeight","getSidePadding","padding","staveHeight","sidePadding","derivedSettings","staveHeightWithPadding","staveWidth","Settings","React","useSettings","useContext","SettingsContext","props","useMemo","getStaveHeightWithPadding","getStaveWidth","Provider","value","children","Chord","chord","noteX","staveY","SingleNote","tuning","useSheetInfo","Utils","scale","stringNote","toLowerCase","stringNoteIndex","fretNote","lowestStringIndex","noteTailY1","noteTailY2","noteCentreX","noteY","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","substr","PullOffNote","SlideNote","Note","noteType","BarLine","settings","StaveLine","Stave","barWidth","noteWidth","barNotes","i","barIndex","barX","noteString","noteIndex","part","toUpperCase","SheetInfoContext","barsPerStave","Sheet","sheetInfo","getBarWidth","getNoteWidth","staveBarNotes","lastStave","getStaveBarNotes","sheetHeight","viewBox","preserveAspectRatio","staveIndex","SheetTemplate","title","description","HopHighLadies1","HopHighLadies2","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","Cursor","position","useEditor","attributeName","to","dur","repeatCount","EditorContext","createContext","Editor","useState","setNotes","setPosition","move","direction","max","addNote","del","backspace","onKey","useCallback","keyCode","useEffect","document","addEventListener","removeEventListener","join","height","VirtualSheet","textPosition","barsCount","subsetBars","currentBarIndex","currentNoteIndexInBar","previousSymbol","virtualNotes","setTextPosition","rows","onSelect","e","target","selectionStart","onChange","PartA","PartB","SandyRiverBelle","Renderer","Vex","Flow","artist","Artist","tab","VexTab","VexTabSheet","staves","space","time","vexElement","useRef","element","current","innerHTML","renderer","Backends","SVG","input","stave","content","tabStaveTemplate","reset","parse","render","ref","RussianAnthem","Korobeiniki","CVersion","GVersion","Kalinka","MelodyNotes","MortalKombat","src","process","alt","Lambada","verse1","MoonlightShadow","Clawhammer","PriceIgor","Sokolov","TitleRoute","path","App","setShowNotes","className","type","id","checked","htmlFor","WorriedMansBlues","HopHighLadies","RoseTatoo","PrinceIgor","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2RAAaA,EAAQ,SAACC,GAAD,OAAoBC,MAAMC,KAAKD,MAAMD,GAAQG,SAErDC,EAAiB,SAACC,GAAD,OAC5BN,EAAM,GACHO,KAAI,SAACC,GAAD,MAAkB,CAAEA,cAAaC,MAAM,OAACH,QAAD,IAACA,IAAW,IAAIE,OAC3DE,QAAO,gBAAGD,EAAH,EAAGA,KAAH,YAAuBE,IAATF,GAA+B,MAATA,KAC3CF,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnB,GAAIG,MAAMC,SAASJ,IAAQ,CACzB,IACMK,EADW,uBACWC,QAAQN,GACpC,IAAoB,IAAhBK,EAEF,MAAO,CAAEN,cAAaC,MADE,GAAKK,GACeE,YAGhD,MAAO,CAAER,cAAaC,YAafQ,EAAwB,SAACX,GAAqB,IAAD,EAClDY,EAAcb,EAAeC,GAEnC,GAA2B,IAAvBY,EAAYjB,OAIhB,iBAAOiB,EAAY,UAAnB,aAAO,EAAgBV,aAcZW,EAAQ,SAAIC,EAAiBC,GACxC,OAAQC,OAAOlB,KAAKgB,GAA8BG,QAChD,SAACC,EAAKC,GAAN,YACqBd,IAAnBU,EAAUI,GAAV,2BACSD,GADT,eACoBC,EAAMJ,EAAUI,KAChCD,IAJD,eAKAJ,KAIIM,EAAc,SAACC,EAAeC,GAAhB,OACzBD,EACGE,MAAM,MACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,UACbrB,QAAO,SAACoB,GAAD,OAAOA,KACdvB,KAAI,SAACuB,GAAD,OACHA,EACGD,MAAM,KACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,UACbR,QAAO,SAACC,EAAiBQ,EAAMC,GAE9B,GADuBA,EAAQL,IAAU,EAEvC,MAAM,CAAE,CAACI,IAAT,mBAAmBR,IAHmB,IAMjCU,EANiC,YAMtBV,EANsB,MAOlCW,EAAOX,EAAIY,MAAM,GAEvB,MAAM,CAAN,sBAAYF,GAAZ,CAAqBF,KAArB,mBAA+BG,MAC9B,IACFE,aAEJd,QAAO,SAACC,EAAKc,GAAN,4BAAmBd,GAAnB,YAA2Bc,MAAO,IACzC5B,QAAO,SAAC6B,GAAD,QAA0B,IAAfA,EAAItC,QAA2B,KAAXsC,EAAI,QAwBlCC,EAAuB,SAACb,EAAeC,GAAhB,OAClCD,EACGE,MAAM,MACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,UAEbxB,KAAI,SAACuB,GAAD,OACHA,EACGD,MAAM,KACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,UACbR,QAAO,SAACC,EAAiBQ,EAAMC,GAE9B,GADuBA,EAAQL,IAAU,EAEvC,MAAM,CAAE,CAACI,IAAT,mBAAmBR,IAHmB,IAMjCU,EANiC,YAMtBV,EANsB,MAOlCW,EAAOX,EAAIY,MAAM,GAEvB,MAAM,CAAN,sBAAYF,GAAZ,CAAqBF,KAArB,mBAA+BG,MAC9B,IACFE,aAEJd,QAAO,SAACC,EAAKc,GAAN,4BAAmBd,GAAnB,YAA2Bc,MAAO,KChHxCG,EAAe,CACnBC,MAbY,IAcZC,YAbkB,GAclBC,oBAbyB,EAczBC,qBAZ2B,CAC3BC,GAAI,IACJC,EAAG,GAWHC,6BARmC,GASnCC,WARgB,GAWZC,EAAa,SAACP,GAAD,OAAyB,EAAIA,GAC1CQ,EAAiB,SAACR,GAAD,OAAuC,EAAdA,GAC1CS,EAAiB,SAACR,EAA6BS,GAA9B,OACrBT,EAAqBS,EAAU,GAM3BA,EAAUH,EA7BI,IA8BdI,EAAcH,EA9BA,IA+BdI,EAAcH,GA9BO,EA8B4BC,GAKjDG,EAAkB,CACtBH,UACAC,cACAC,cACAE,uBAP6BH,EAAcD,EAQ3CK,WA1CY,IAmC2B,EAAdH,GAUrBI,EAAWC,gBAAA,2BACZnB,GACAe,IAGQK,EAAc,kBAAMC,qBAAWH,IAuC7BI,EArCgE,SAC7EC,GAEA,IAAMvB,EAAetB,EAAM0C,IAAeG,GAClCrB,EAA2CF,EAA3CE,YAAaC,EAA8BH,EAA9BG,mBAAoBF,EAAUD,EAAVC,MAEnCW,EAAUY,mBAAQ,kBAAMf,EAAWP,KAAc,CAACA,IAClDW,EAAcW,mBAAQ,kBAAMd,EAAeR,KAAc,CAACA,IAC1DY,EAAcU,mBAClB,kBAAMb,EAAeR,EAAoBD,KACzC,CAACC,EAAoBD,IAEjBc,EAAyBQ,mBAC7B,kBAxC8B,SAACX,EAAqBD,GAAtB,OAChCC,EAAcD,EAuCNa,CAA0BZ,EAAaD,KAC7C,CAACC,EAAaD,IAEVK,EAAaO,mBAAQ,kBAzCP,SAACvB,EAAea,GAAhB,OACpBb,EAAQa,EAwCyBY,CAAczB,EAAOa,KAAc,CAClEb,EACAa,IAGF,OACE,gBAACI,EAASS,SAAV,CACEC,MAAK,2BACA5B,GADA,IAEHY,UACAC,cACAC,cACAE,yBACAC,gBAGDM,EAAMM,WCjEEC,EApBD,SAAC,GAUR,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,OACAhC,EAMI,EANJA,MAMI,EAC0CmB,IAAtClB,EADJ,EACIA,YAAaE,EADjB,EACiBA,qBACrB,IAAK2B,EACH,OAAO,KAET,IAAM1B,EAAI2B,EAAQ/B,EAAQ,EAAI8B,EAAMvE,OAAS4C,EAAqBC,EAC5DC,EAAI2B,EAAS,IAAM/B,EAAcE,EAAqBE,EAC5D,OAAO,uBAAU,CAAED,IAAGC,KAAMyB,ICRjBG,EAAa,SAAC,GAAyC,IAAD,EAAtC7B,EAAsC,EAAtCA,EAAGC,EAAmC,EAAnCA,EAAGL,EAAgC,EAAhCA,MAAOpC,EAAyB,EAAzBA,QAChCsE,EAAWC,IAAXD,OADyD,EAO7Df,IAJFZ,EAH+D,EAG/DA,UACAN,EAJ+D,EAI/DA,YACAW,EAL+D,EAK/DA,YACAT,EAN+D,EAM/DA,qBAEI3B,EAAc4D,EAAqBxE,GAASC,KAChD,YAA4B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACd,OAAIwC,EAEK,CAAEzC,cAAaC,KAAMA,EHcb,SAACmE,EAAgBpE,EAAqBC,GAC3D,IAAMsE,EAAQ,8CAA+BlD,MAAM,KAC7CmD,EAAaJ,EAAOK,cAAcpD,MAAM,IAAIQ,UAAU7B,GACtD0E,EAAkBH,EAAMhE,QAAQiE,GAGhCG,EAAWJ,GAAOG,EAFNrE,SAASJ,IAE4BsE,EAAM9E,QAE7D,cAAOkF,QAAP,IAAOA,IAAY,GGvBIL,CAAcF,EAAQpE,EAAaC,IAG/C,CAAED,cAAaC,WAIpB2E,EAAiB,UHZW,SAAC9E,GAAqB,IAAD,EACjDY,EAAcb,EAAeC,GAEnC,GAA2B,IAAvBY,EAAYjB,OAIhB,iBAAOiB,EAAYA,EAAYjB,OAAS,UAAxC,aAAO,EAAqCO,YGKlBsE,CAA2BxE,UAA9B,QAA0C,EAC3D+E,EAAatC,EAAIJ,GAAeyC,EAAoB,IACpDE,EAAavC,EAAIO,EAAcX,EAC/B4C,EAAczC,EAAY,GAARJ,EAExB,OACE,gCACGxB,EAAYX,KAAI,YAA4B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACzBgE,EAAQc,EAAc1C,EAAqBC,EAAIrC,EAAKR,OACpDuF,EAAQzC,EAAIvC,EAAcmC,EAAcE,EAAqBE,EACnE,OACE,wBAAMtB,IAAKjB,EAAasC,EAAG2B,EAAO1B,EAAGyC,GAClC/E,MAIP,wBACEgF,GAAIF,EACJG,GAAIL,EACJM,GAAIJ,EACJK,GAAIN,EACJO,YAAa,EACbC,OAAO,YAMFC,EAAa,SAAC/B,GAAsB,IAAD,EAK1CH,IAHFP,EAF4C,EAE5CA,YACAX,EAH4C,EAG5CA,YACAK,EAJ4C,EAI5CA,6BAEIgD,EAAkBhC,EAAMjB,EAAIO,EAAcX,EAC1CsD,EACJjC,EAAMlB,EAAkB,IAAdkB,EAAMtB,MAAeM,EAC3BkD,EACJlC,EAAMlB,EAAkB,IAAdkB,EAAMtB,MAAeM,EAVa,EAWjBgB,EAAM1D,QAAQuB,MAAM,KAXH,mBAWvCsE,EAXuC,KAW7BC,EAX6B,KAY9C,OACE,gCACE,gBAAC,EAAD,CACE9F,QAAS6F,EACTzD,MAAqB,GAAdsB,EAAMtB,MACbI,EAAGkB,EAAMlB,EACTC,EAAGiB,EAAMjB,IAEX,gBAAC,EAAD,CACEzC,QAAS8F,EACT1D,MAAqB,GAAdsB,EAAMtB,MACbI,EAAGkB,EAAMlB,EAAkB,GAAdkB,EAAMtB,MACnBK,EAAGiB,EAAMjB,IAEX,wBACE0C,GAAIQ,EACJP,GAAIM,EACJL,GAAIO,EACJN,GAAII,EACJH,YAAa,EACbC,OAAO,YAMFO,EAAY,SAACrC,GAAD,OACvB,gBAAC,EAAD,CACElB,EAAGkB,EAAMlB,EACTC,EAAGiB,EAAMjB,EACTL,MAAOsB,EAAMtB,MACbpC,QAAS0D,EAAM1D,QAAU,YAIhBgG,EAAW,SACtBtC,GAGI,IAAD,MACwDH,IAAnDlB,EADL,EACKA,YAAaE,EADlB,EACkBA,qBAAsBS,EADxC,EACwCA,YADxC,EAE0BU,EAAM1D,QAAQuB,MAAM,KAF9C,mBAEIsE,EAFJ,KAEcC,EAFd,KAGGG,EAAc,UAAGzB,EAA4BqB,UAA/B,QAA4C,EAC1DK,EAAc,UAAG1B,EAA4BsB,UAA/B,QAA4C,EAE1DK,EAAQzC,EAAMlB,EAAkB,IAAdkB,EAAMtB,MACxBgE,EAAQ1C,EAAMlB,EAAkB,IAAdkB,EAAMtB,MACxBiE,EAAQ3C,EAAMjB,GAAKwD,EAAiB,IAAO5D,EAC3CiE,EAAQ5C,EAAMjB,GAAKyD,EAAiB,IAAO7D,EAE3CkE,EAAeJ,EAAQ,GAAM9D,EAC7BmE,EAAeJ,EAAQ,GAAM/D,EAC7BoE,EAAeJ,EAAQ,GAAMhE,EAC7BqE,EAAeJ,EAAQ,GAAMjE,EAC7BsE,EAAcC,KAAKC,IAAIJ,EAAcC,GAErCI,EAAcpD,EAAMqD,MAAMpH,OAC1BqH,EACJtD,EAAMlB,EAAI,GAAMkB,EAAMtB,MAAQG,EAAqBC,EAAIsE,EACnDG,EACJvD,EAAMjB,EAAIO,EAAc,EAAIX,EAAcE,EAAqBE,EAEjE,OACE,gCACE,gBAAC,EAAD,CACED,EAAGkB,EAAMlB,EACTC,EAAGiB,EAAMjB,EACTL,MAAOsB,EAAMtB,MACbpC,QAAS0D,EAAM1D,UAEjB,wBACEkH,EAAC,YAAOf,EAAP,YAAgBE,EAAhB,cAA2BE,EAA3B,YAA2CI,EAA3C,aAA2DH,EAA3D,YAA2EG,EAA3E,aAA2FP,EAA3F,YAAoGE,GACrGd,OAAO,QACPD,YAAa,EACb4B,KAAK,gBAEP,wBAAM3E,EAAGwE,EAAQvE,EAAGwE,GACjBvD,EAAMqD,SAMFK,EAAe,SAAC1D,GAC3B,IAAM1D,GAC4B,IAAhC0D,EAAM1D,QAAQS,QAAQ,KAClBiD,EAAM1D,QAAQqH,OAAO,EAAG3D,EAAM1D,QAAQL,OAAS,GAAK,KAAO+D,EAAM1D,QACjE0D,EAAM1D,QACZ,OAAO,gBAAC,EAAD,2BAAmB0D,GAAU,CAAE1D,UAAS+G,MAAO,QAG3CO,EAAc,SAAC5D,GAC1B,IAAM1D,GAC4B,IAAhC0D,EAAM1D,QAAQS,QAAQ,KAClBiD,EAAM1D,QACN,IACA0D,EAAM1D,QAAQqH,OAAO,EAAG3D,EAAM1D,QAAQL,OAAS,GAC/C,IACA+D,EAAM1D,QACZ,OAAO,gBAAC,EAAD,2BAAmB0D,GAAU,CAAE1D,UAAS+G,MAAO,QAG3CQ,EAAY,SAAC7D,GAAD,OACvB,gBAAC,EAAD,iBAAcA,EAAd,CAAqBqD,MAAM,SAGhBS,EAAO,SAClB9D,GAEA,OAAQA,EAAM+D,UACZ,IAAK,IACH,OAAO,gBAAC,EAAc/D,GACxB,IAAK,IACH,OAAO,gBAAC,EAAiBA,GAC3B,IAAK,IACH,OAAO,gBAAC,EAAgBA,GAC1B,IAAK,IACH,OAAO,gBAAC,EAAcA,GACxB,IAAK,IACH,OAAO,gBAAC,EAAeA,GACzB,IAAK,IACH,OAAO,gBAAC,EAAeA,GACzB,QACE,OAAO,OC1LPgE,EAAU,SAAChE,GACf,IAAMiE,EAAWpE,IACjB,OACE,wBACE4B,GAAIzB,EAAMlB,EACV4C,GAAI1B,EAAMjB,EACV4C,GAAI3B,EAAMlB,EACV8C,GAAI5B,EAAMjB,EAAIkF,EAAS3E,YACvBuC,YAAa,EACbC,OAAO,WAKPoC,EAAY,SAAClE,GAAyC,IAClDT,EAAgBM,IAAhBN,YACR,OACE,wBACEkC,GAAIlC,EACJmC,GAAI1B,EAAMjB,EACV4C,GAAIpC,EAAcS,EAAMtB,MACxBkD,GAAI5B,EAAMjB,EACV8C,YAAa,EACbC,OAAO,WAKAqC,EAAQ,SAACnE,GAAgD,IAAD,EAC9BH,IAA7BlB,EAD2D,EAC3DA,YAAaY,EAD8C,EAC9CA,YAD8C,EAEnCsB,IAAxBuD,EAF2D,EAE3DA,SAAUC,EAFiD,EAEjDA,UACZ3E,EAAa0E,EAAWpE,EAAMsE,SAASrI,OAE7C,OACE,gCACG6E,EAAY,GAAGvE,KAAI,SAACgI,GAAD,OAClB,gBAAC,EAAD,CAAW9G,IAAK8G,EAAGxF,EAAGiB,EAAMjB,EAAIwF,EAAI5F,EAAaD,MAAOgB,OAEzDoB,EAAYd,EAAMsE,SAASrI,OAAS,GAAGM,KAAI,SAACgI,GAAD,OAC1C,gBAAC,EAAD,CAAS9G,IAAK8G,EAAGxF,EAAGiB,EAAMjB,EAAGD,EAAGS,EAAcgF,EAAIH,OAEnDpE,EAAMsE,SAAS/H,KAAI,SAACoB,EAAO6G,GAC1B,IAAMC,EAAOlF,EAAciF,EAAWJ,EACtC,OAAOzG,EAAMpB,KAAI,SAACmI,EAAYC,GAC5B,IAAMlE,EAAQgE,EAAOE,EAAYN,EADS,EAELK,EAClC7G,MAAM,KACNtB,KAAI,SAACuB,GAAD,OAAOA,EAAEC,UACbR,QACC,SAACC,EAAKoH,GACJ,GAAIA,EAAK,GAAI,CACX,GAAIA,EAAK,KAAOA,EAAK,GAAGC,cAEtB,OAAO,2BAAKrH,GAAZ,IAAiBgD,MAAOoE,IACnB,GAAIA,EAAK,KAAOA,EAAK,GAAG3D,cAE7B,OAAO,2BACFzD,GADL,IAEEuG,SAAUa,EAAK,GACftI,QAASsI,EAAKjB,OAAO,KAI3B,OAAOnG,IAET,CACEuG,SAAU,GACVzH,QAAS,GACTkE,MAAO,KAvBLuD,EAFkC,EAElCA,SAAUzH,EAFwB,EAExBA,QAASkE,EAFe,EAEfA,MA2B3B,OACE,gBAAC,WAAD,CAAgB/C,IAAKkH,GACnB,gBAAC,EAAU,CAAEnE,QAAOC,QAAOC,OAAQV,EAAMjB,EAAGL,MAAO2F,IACnD,gBAAC,EACK,CACFN,WACAzH,UACAwC,EAAG2B,EACH1B,EAAGiB,EAAMjB,EACTL,MAAO2F,aCtEnBS,EAAmBlF,gBAZA,CACvBgB,OAAQ,QACRhD,MAAO,EACPmH,aAAc,EACdX,SAAU,EACVC,UAAW,IASAxD,EAAe,kBAAMf,qBAAWgF,IAEhCE,EAKR,SAAChF,GAAW,IACPrC,EAAoBqC,EAApBrC,MAAO2C,EAAaN,EAAbM,SADD,EAEiDT,IAAvDnB,EAFM,EAENA,MAAOW,EAFD,EAECA,QAASI,EAFV,EAEUA,uBAAwBC,EAFlC,EAEkCA,WAE1CuF,EAAY9H,EAAM0D,IAAgBb,GAChC+E,EAAwBE,EAAxBF,aAAcnH,EAAUqH,EAAVrH,MAEhBwG,EAAWnE,mBAAQ,kBApBP,SAACP,EAAoBqF,GAArB,OAClBrF,EAAaqF,EAmBkBG,CAAYxF,EAAYqF,KAAe,CACpErF,EACAqF,IAEIV,EAAYpE,mBAAQ,kBAtBP,SAACmE,EAAkBxG,GAAnB,OAAqCwG,EAAWxG,EAsBnCuH,CAAaf,EAAUxG,KAAQ,CAC7DwG,EACAxG,IAGIwH,ELyCwB,SAC9BzH,EACAC,EACAmH,GAH8B,OAK9BrH,EAAYC,EAAOC,GAChBL,QAAO,SAACC,EAAmBe,EAAKN,GAE/B,GADmBA,EAAQ8G,IAAiB,EAE1C,MAAM,CAAE,CAACxG,IAAT,mBAAkBf,IAHqB,IAMlC6H,EANkC,YAMrB7H,EANqB,MAOnCW,EAAOX,EAAIY,MAAM,GAEvB,MAAM,CAAN,sBAAYiH,GAAZ,CAAuB9G,KAAvB,mBAAgCJ,MAC/B,IACFE,UK1DmBiH,CAAiB3H,EAAOC,EAAOmH,GAE/CQ,EACJ,GAAMlG,EAAUI,EAAyB2F,EAAcnJ,OAEzD,OACE,gBAAC6I,EAAiB1E,SAAlB,CAA2BC,MAAK,2BAAO4E,GAAP,IAAkBb,WAAUC,eAC1D,uBACEmB,QAAO,cAAS9G,EAAT,YAAkB6G,GACzBE,oBAAoB,iBAEnBL,EAAc7I,KAAI,SAAC+H,EAAUoB,GAC5B,OACE,gBAAC,EAAD,CACEjI,IAAKiI,EACL3G,EAAG,GAAMM,EAAUI,EAAyBiG,EAC5CpB,SAAUA,OAIfhE,KAMIqF,EAOR,SAAC3F,GAAW,IACP4F,EAA+B5F,EAA/B4F,MAAOC,EAAwB7F,EAAxB6F,YAAajF,EAAWZ,EAAXY,OAC5B,OACE,gCACE,0BAAKgF,GACJC,GAAe,yBAAIA,GACpB,yBAAIjF,GACJ,gBAAC,EAAUZ,KChFJ8F,EAAiB,kBAC5B,kBAAC,EAAD,CACEF,MAAM,qBACNjI,MAAK,ohBAsBIoI,EAAiB,kBAC5B,kBAAC,EAAD,CACEH,MAAM,qBACNjI,MAAK,gjBAsBM,oBACb,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCrDSqI,EAA2B,kBACtC,kBAAC,EAAD,CACEJ,MAAM,sBACNjI,MAAK,qeAsBIsI,EAA6B,kBACxC,kBAAC,EAAD,CACEL,MAAM,sCACNjI,MAAK,uaAsBM,oBACb,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QC7BWuI,EAtBA,WAAO,IACZC,EAAaC,KAAbD,SADW,EAEctG,IAAzBR,EAFW,EAEXA,QAASV,EAFE,EAEFA,YAEXG,EAAIO,GAAW,GAAM8G,GADLtF,IAAdwD,UAGF3C,EAAK,GAAMrC,EAAU,GAAMV,EAC3BiD,EAAKF,EAFkB,EAAd/C,EAIf,OACE,wBAAM8C,GAAI3C,EAAG4C,GAAIA,EAAIC,GAAI7C,EAAG8C,GAAIA,EAAIC,YAAa,EAAGC,OAAO,SACzD,2BACEuE,cAAc,aACdlK,KAAK,UACLmK,GAAG,SACHC,IAAI,KACJC,YAAY,iBCXdC,EAAgB7G,IAAM8G,cAGzB,CACDP,SAAU,EACVvI,MAAO,IAGIwI,GAAY,kBAAMtG,qBAAW2G,IA6E3BE,GA3EA,WAAO,IAAD,EACOC,mBAAmB,IAD1B,mBACZjJ,EADY,KACLkJ,EADK,OAEaD,mBAAS,GAFtB,mBAEZT,EAFY,KAEFW,EAFE,OAIuB7G,mBACxC,iBAAO,CACL8G,KAAM,SAACC,GACL,OAAQA,GACN,IAAK,OACHF,EAAY5D,KAAK+D,IAAI,EAAGd,EAAW,IACnC,MACF,IAAK,QACHW,EAAY5D,KAAKC,IAAIxF,EAAM1B,OAAQkK,EAAW,MAIpDe,QAAS,SAAClJ,GACR6I,EAAS,GAAD,mBAAKlJ,EAAMS,MAAM,EAAG+H,IAApB,CAA+BnI,GAA/B,YAAwCL,EAAMS,MAAM+H,MAC5DW,EAAYX,EAAW,IAEzBgB,IAAK,WACChB,EAAWxI,EAAM1B,QACnB4K,EAAS,GAAD,mBAAKlJ,EAAMS,MAAM,EAAG+H,IAApB,YAAkCxI,EAAMS,MAAM+H,EAAW,OAGrEiB,UAAW,WACTP,EAAS,GAAD,mBACHlJ,EAAMS,MAAM,EAAG8E,KAAK+D,IAAI,EAAGd,EAAW,KADnC,YAEHxI,EAAMS,MAAM+H,MAEjBW,EAAY5D,KAAK+D,IAAI,EAAGd,EAAW,QAGvC,CAACA,EAAUW,EAAanJ,EAAOkJ,IA7BzBE,EAJW,EAIXA,KAAMG,EAJK,EAILA,QAASC,EAJJ,EAIIA,IAAKC,EAJT,EAISA,UAgCtBC,EAAQC,uBACZ,YACE,OAD8B,EAA7BC,SAEC,KAAK,GACHR,EAAK,QACL,MACF,KAAK,GACHA,EAAK,SACL,MACF,KAAK,EACHK,IACA,MACF,KAAK,GACHD,IACA,MACF,KAAK,GACHD,EAAQ,YAId,CAACH,EAAMG,EAASE,EAAWD,IAG7BK,qBAAU,WAER,OADAC,SAASC,iBAAiB,UAAWL,GAC9B,kBAAMI,SAASE,oBAAoB,UAAWN,MACpD,CAACA,IAIJ,OACE,kBAACZ,EAAcrG,SAAf,CAAwBC,MAAO,CAAE8F,WAAUvI,MAH/B,IAIV,kBAAC,EAAD,CAAegI,MAAM,SAAShI,MAJpB,EAIkCD,MAAOA,EAAMiK,KAAK,MAC5D,kBAAC,EAAD,SCnFF1B,GAAS,SAAClG,GAAiC,IACvCmG,EAAanG,EAAbmG,SADsC,EAEEtG,IAAxCN,EAFsC,EAEtCA,YAAaE,EAFyB,EAEzBA,uBACb4E,EAAcxD,IAAdwD,UAEFvF,EAAIS,EAAc4G,EAAW9B,EAGnC,OACE,qCACM,CACFvF,IACAC,EANI,EAOJL,MAAO2F,EACPwD,OAAQpI,GALZ,CAOEoC,YAAa,EACbC,OAAO,QACP2B,KAAK,kBAKLqE,GAID,SAAC,GAAoC,IAAD,EAAjCnK,EAAiC,EAAjCA,MAAOiI,EAA0B,EAA1BA,MAAOmC,EAAmB,EAAnBA,aAEZnK,EAAUiD,IAAVjD,MAEJU,EAAOE,EAAqBb,EAAOC,GACjCoK,EAAY1J,EAAKrC,OAEjBgM,EAAazJ,EAAqBb,EAAMgG,OAAO,EAAGoE,GAAenK,GACnEsK,EAAkBhF,KAAK+D,IAAI,EAAGgB,EAAWhM,OAAS,GAElDkM,EAAwBjF,KAAK+D,IAAI,GAAG,UAACgB,EAAW,UAAZ,QAAkB,IAAIhM,OAAS,GAEjEmM,EAAiBzK,EAAMoK,EAAe,GAElB,KAAxBpK,EAAMoK,UACcpL,IAAnByL,GACoB,OAAnBA,GACoB,MAAnBA,GAA0BH,EAAWC,GAAiBjM,SAAW2B,KAGpEU,EAAI,sBACCA,EAAKF,MAAM,EAAG8J,EAAkB,IADjC,CAEF,IAFE,YAGC5J,EAAKF,MAAM8J,EAAkB,EAAGF,KAErCE,IACAC,EAAwB,GAG1B,IAKME,EALa/J,EAAKF,MACtB8E,KAAK+D,IAAI,EAAGiB,EAAkB,GAC9BA,EAAkB,GAGY3L,KAAI,SAACoB,GAAD,OAAWA,EAAMiK,KAAK,QAAMA,KAAK,MAErE,OACE,gBAAC,EAAkB,CAAEhC,QAAOjI,MAAO0K,EAActD,aApC9B,GAqCjB,gBAAC,GAAD,CAAQoB,SAAUgC,MAKT,cAAO,IAAD,EACOvB,mBAAS,IADhB,mBACZjJ,EADY,KACLkJ,EADK,OAEqBD,mBAAS,GAF9B,mBAEZmB,EAFY,KAEEO,EAFF,KAInB,OACE,gCACE,gBAAC,EAAoB,CAAE1J,oBAAoB,EAAOF,MAAO,KACvD,gBAAC,GAAD,eAAckH,MAAM,UAAa,CAAEmC,eAAcpK,YAEnD,2BACA,4BACE4K,KAAM,GACNC,SAAU,SAACC,GAAD,OACRH,EAAiBG,EAAEC,OAA+BC,iBAEpDC,SAAU,SAACH,GAAD,OAAO5B,EAAS4B,EAAEC,OAAOrI,QACnCA,MAAO1C,MC9EA,qBACb,kBAAC,EACK,CAAEiI,MAAO,cAAehF,OAAQ,QAAShD,MAAO,EAAGD,MAbhD,qMCAEkL,I,MAAQ,kBACnB,kBAAC,EAAD,CACEjD,MAAM,sBACNjI,MAAK,uQAcImL,GAAQ,kBACnB,kBAAC,EAAD,CACElD,MAAM,sBACNjI,MAAK,oPAqBMoL,GAPS,kBACtB,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,SCpCEC,GAAWC,OAAIC,KAAKF,SACpBG,GAAS,IAAIC,UAAO,GAAI,GAAI,IAAK,CAAErI,MAAO,KAC1CsI,GAAM,IAAIC,UAAOH,IAsDRI,GAzCK,SAAC,GAUd,IATLC,EASI,EATJA,OACAC,EAQI,EARJA,MACA7I,EAOI,EAPJA,OACA8I,EAMI,EANJA,KAOQzK,EAAcY,IAAdZ,UACF0K,EAAaC,iBAAuB,MA0B1C,OAzBApC,qBAAU,WACR,IAAMqC,EAAUF,EAAWG,QAC3BD,EAAQE,UAAY,GACpB,IAAMC,EAAW,IAAIhB,GAASa,EAASb,GAASiB,SAASC,KAEnDC,EAAK,8FAEPX,EACCjN,KAAI,SAAC6N,GAAD,OAhCY,SACvBX,EACAxK,EACA2B,EACA8I,EACAW,GALuB,gCAOTZ,EAPS,2BAQTC,EARS,qBAQQzK,EARR,6BAQsC2B,EARtC,aASvByJ,GAwBQC,CAAgB,OACdb,QADc,IACdA,IAAS,GADK,OAEdxK,QAFc,IAEdA,KAFc,OAGd2B,QAHc,IAGdA,IAAU,sBAHI,OAId8I,QAJc,IAIdA,IAAQ,MACRU,MAGHxC,KAAK,MAZC,UAeXyB,GAAIkB,QACJpB,GAAOoB,QACPlB,GAAImB,MAAML,GACVhB,GAAOsB,OAAOT,KACb,CAACR,EAAQ5I,EAAQ3B,EAAWwK,EAAOC,IAC/B,yBAAKgB,IAAKf,KCsFJgB,GAvCO,kBACpB,oCAIE,uDACA,oCACA,kBAAC,GACK,CACF/J,OAAQ,sBACR4I,OAAQ,CAAC,gQAAD,0pCC2ODoB,GAjHK,kBAClB,oCAME,2CACA,oCACA,kBAAC,GACK,CACFlB,KAAM,MACNF,OAAQ,CAAC,2OAAD,ioCA6BZ,+DACA,oCACA,kBAAC,GACK,CACFE,KAAM,MACNF,OAAQ,CAAC,2OAAD,q7BA6BZ,0DACA,oCACA,kBAAC,GACK,CACFE,KAAM,MACNF,OAAQ,CAAC,gRAAD,09BCvTHqB,GAAW,WACtB,OACE,kBAAC,EAAD,CACEjF,MAAM,UACNC,YAAY,QACZjF,OAAO,QACPmE,aAAc,EACdnH,MAAO,EACPD,MAAK,wOAeEmN,GAAW,WACtB,OACE,kBAAC,EAAD,CACElF,MAAM,UACNC,YAAY,SACZjF,OAAO,QACPmE,aAAc,EACdnH,MAAO,EACPD,MAAK,0NAsBIoN,GAPC,kBACd,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCnDSC,GAAc,WACzB,OACE,kBAAC,EAAD,CACEpF,MAAM,gBACNC,YAAY,eACZjF,OAAO,QACPmE,aAAc,EACdnH,MAAO,EACPD,MAAK,6fA4BIsN,GARM,kBACnB,oCACE,kBAAC,GAAD,MACA,yBAAKC,IAAG,UAAKC,GAAL,wBAAmDC,IAAI,YAC/D,yBAAKF,IAAG,UAAKC,GAAL,wBAAmDC,IAAI,cC2DpDC,GAhCC,WACd,OACE,oCACE,uCACA,oCACA,kBAAC,GACK,CACF7B,OAAQ,CAAC,+UAAD,8aCjELwB,GAAc,WACzB,IAGMM,EAAM,qIAiBZ,OACE,kBAAC,EAAD,CACE1F,MAAM,mBACNC,YAAY,eACZjF,OAAO,QACPmE,aAAc,EACdnH,MAAO,EACPD,MAAK,oBA3BE,2BA2BF,qBAED2N,EAFC,qBAGDA,EAHC,sBAlBG,0PAkBH,sBAgBIC,GANS,kBACtB,oCACE,kBAAC,GAAD,QCzCSP,GAAc,WACzB,OACE,kBAAC,EAAD,CACEpF,MAAM,cACNC,YAAY,eACZjF,OAAO,QACPmE,aAAc,GACdnH,MAAO,EACPD,MAAK,y4DAsHE6N,GAAa,WACxB,OACE,kBAAC,EAAD,CACE5F,MAAM,cACNC,YAAY,yBACZjF,OAAO,QACPmE,aAAc,GACdnH,MAAO,EACPD,MAAK,ysEA2HI8N,GARG,kBAChB,oCACE,yBAAKP,IAAG,UAAKC,GAAL,oBAA+CC,IAAI,UAC3D,kBAAC,GAAD,MACA,kBAAC,GAAD,QC7PW,SAASM,KACtB,OACE,oCACE,+CACA,oCACA,kBAAC,GACK,CACFhC,KAAM,MACNF,OAAQ,CAAC,8NAAD,0NCelB,IAAMmC,GAAuD,SAAC,GAIvD,IAHLC,EAGI,EAHJA,KACAhG,EAEI,EAFJA,MACAtF,EACI,EADJA,SAKA,OAHAkH,qBAAU,WACRC,SAAS7B,MAAQ,gBAAkBA,KAE9B,kBAAC,IAAU,CAAEgG,QAAStL,IA4FhBuL,GAzFH,WAAO,IAAD,EACkBjF,oBAAS,GAD3B,mBACT3H,EADS,KACE6M,EADF,KAEhB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WACb,8BACE,2BACEC,KAAK,WACLC,GAAG,YACHC,QAASjN,EACT2J,SAAU,kBAAMkD,GAAc7M,MAEhC,2BAAOkN,QAAQ,aAAf,cACA,6BAKA,kBAAC,IAAD,CAAM7F,GAAG,mBAAT,kBAbF,KAeE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,eAfF,KAmBE,kBAAC,IAAD,CAAMA,GAAG,YAAT,WAnBF,KAqBE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,eArBF,KAuBE,kBAAC,IAAD,CAAMA,GAAG,YAAT,oBAIF,kBAAC,EAAoB,CAAErH,aACrB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAY2M,KAAK,eAAehG,MAAM,uBACpC,kBAACwG,EAAD,OAEF,kBAAC,GAAD,CAAYR,KAAK,mBAAmBhG,MAAM,mBACxC,kBAACyG,EAAD,OAEF,kBAAC,GAAD,CAAYT,KAAK,eAAehG,MAAM,eACpC,kBAAC0G,GAAD,OAEF,kBAAC,GAAD,CAAYV,KAAK,sBAAsBhG,MAAM,sBAC3C,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,eAAehG,MAAM,eACpC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,qBAAqBhG,MAAM,qBAC1C,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,kBAAkBhG,MAAM,kBACvC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,eAAehG,MAAM,eACpC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,WAAWhG,MAAM,WAChC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,iBAAiBhG,MAAM,iBACtC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,WAAWhG,MAAM,WAChC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,oBAAoBhG,MAAM,oBACzC,kBAAC,GAAD,OAEF,kBAAC,GAAD,CAAYgG,KAAK,eAAehG,MAAM,eACpC,kBAAC2G,GAAD,OAEF,kBAAC,GAAD,CAAYX,KAAK,WAAWhG,MAAM,mBAChC,kBAAC8F,GAAD,OAGF,kBAAC,IAAD,CAAOE,KAAK,KACV,kBAAC,IAAD,CAAUtF,GAAG,oBCxGTkG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASpC,OACP,kBAAC,IAAMqC,WAAP,KACE,kBAAC,GAAD,OAEFrF,SAASsF,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.80babf01.chunk.js","sourcesContent":["export const range = (length: number) => Array.from(Array(length).keys());\n\nexport const getStringFrets = (strings: string) =>\n  range(5)\n    .map((stringIndex) => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\n    .map(({ stringIndex, fret }) => {\n      if (isNaN(parseInt(fret))) {\n        const alphabet = \"abcdefghijklmnopqrst\";\n        const alphaIndex = alphabet.indexOf(fret);\n        if (alphaIndex !== -1) {\n          const doubleDigitFret = 10 + alphaIndex;\n          return { stringIndex, fret: doubleDigitFret.toString() };\n        }\n      }\n      return { stringIndex, fret };\n    });\n\nexport const getLowestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\n};\n\nexport const getHighestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[0]?.stringIndex;\n};\n\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\n  const stringNoteIndex = scale.indexOf(stringNote);\n  const fretIndex = parseInt(fret);\n\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\n\n  return fretNote ?? \"\";\n};\n\nexport const merge = <T>(defaultValue: T, overrides: Partial<T>): T => {\n  return (Object.keys(defaultValue) as (keyof T)[]).reduce(\n    (acc, key) =>\n      overrides[key] !== undefined\n        ? { ...acc, ...{ [key]: overrides[key] } }\n        : acc,\n    { ...defaultValue }\n  );\n};\n\nexport const getBarNotes = (notes: string, meter: number) =>\n  notes\n    .split(\"\\n\")\n    .map((s) => s.trim())\n    .filter((s) => s)\n    .map((s) =>\n      s\n        .split(\";\")\n        .map((s) => s.trim())\n        .reduce((acc: string[][], note, index) => {\n          const firstNoteInBar = index % meter === 0;\n          if (firstNoteInBar) {\n            return [[note], ...acc];\n          }\n\n          const [lastBar] = acc;\n          const rest = acc.slice(1);\n\n          return [[...lastBar, note], ...rest];\n        }, [])\n        .reverse()\n    )\n    .reduce((acc, bars) => [...acc, ...bars], [])\n    .filter((bar) => !(bar.length === 1 && bar[0] === \"\"));\n\nexport const getStaveBarNotes = (\n  notes: string,\n  meter: number,\n  barsPerStave: number\n) =>\n  getBarNotes(notes, meter)\n    .reduce((acc: string[][][], bar, index) => {\n      const isFirstBar = index % barsPerStave === 0;\n      if (isFirstBar) {\n        return [[bar], ...acc];\n      }\n\n      const [lastStave] = acc;\n      const rest = acc.slice(1);\n\n      return [[...lastStave, bar], ...rest];\n    }, [])\n    .reverse();\n\nexport const getNotes = (notes: string, meter: number) =>\n  getBarNotes(notes, meter).reduce((acc, bar) => [...acc, ...bar], []);\n\nexport const getBarNotesForEditor = (notes: string, meter: number) =>\n  notes\n    .split(\"\\n\")\n    .map((s) => s.trim())\n    // .filter((s) => s)\n    .map((s) =>\n      s\n        .split(\";\")\n        .map((s) => s.trim())\n        .reduce((acc: string[][], note, index) => {\n          const firstNoteInBar = index % meter === 0;\n          if (firstNoteInBar) {\n            return [[note], ...acc];\n          }\n\n          const [lastBar] = acc;\n          const rest = acc.slice(1);\n\n          return [[...lastBar, note], ...rest];\n        }, [])\n        .reverse()\n    )\n    .reduce((acc, bars) => [...acc, ...bars], []);\n// .filter((bar) => !(bar.length === 1 && bar[0] === \"\"));\n","import * as React from \"react\";\nimport { useContext, useMemo } from \"react\";\nimport { merge } from \"../utils\";\n\nconst width = 800;\nconst lineSpacing = 10;\nconst sidePaddingEnabled = true;\n// Accounts for font size and svg discrepancies.\nconst textCharCentreOffset = {\n  x: -3.5,\n  y: 4,\n};\n// Accounts for different widths of vertical and horizontal lines and ugly edges.\nconst noteHorizontalLineAdjustment = 0.5;\nconst showNotes = false;\n\nconst coreSettings = {\n  width,\n  lineSpacing,\n  sidePaddingEnabled,\n  textCharCentreOffset,\n  noteHorizontalLineAdjustment,\n  showNotes,\n};\n\nconst getPadding = (lineSpacing: number) => 5 * lineSpacing;\nconst getStaveHeight = (lineSpacing: number) => lineSpacing * 4;\nconst getSidePadding = (sidePaddingEnabled: boolean, padding: number) =>\n  sidePaddingEnabled ? padding : 0;\nconst getStaveHeightWithPadding = (staveHeight: number, padding: number) =>\n  staveHeight + padding;\nconst getStaveWidth = (width: number, sidePadding: number) =>\n  width - sidePadding;\n\nconst padding = getPadding(lineSpacing);\nconst staveHeight = getStaveHeight(lineSpacing);\nconst sidePadding = getSidePadding(sidePaddingEnabled, padding);\n\nconst staveHeightWithPadding = staveHeight + padding;\nconst staveWidth = width - sidePadding * 2;\n\nconst derivedSettings = {\n  padding,\n  staveHeight,\n  sidePadding,\n  staveHeightWithPadding,\n  staveWidth,\n};\n\nconst Settings = React.createContext({\n  ...coreSettings,\n  ...derivedSettings,\n});\n\nexport const useSettings = () => useContext(Settings);\n\nconst SettingsContext: React.FunctionComponent<Partial<typeof coreSettings>> = (\n  props\n) => {\n  const coreSettings = merge(useSettings(), props);\n  const { lineSpacing, sidePaddingEnabled, width } = coreSettings;\n\n  const padding = useMemo(() => getPadding(lineSpacing), [lineSpacing]);\n  const staveHeight = useMemo(() => getStaveHeight(lineSpacing), [lineSpacing]);\n  const sidePadding = useMemo(\n    () => getSidePadding(sidePaddingEnabled, lineSpacing),\n    [sidePaddingEnabled, lineSpacing]\n  );\n  const staveHeightWithPadding = useMemo(\n    () => getStaveHeightWithPadding(staveHeight, padding),\n    [staveHeight, padding]\n  );\n  const staveWidth = useMemo(() => getStaveWidth(width, sidePadding), [\n    width,\n    sidePadding,\n  ]);\n\n  return (\n    <Settings.Provider\n      value={{\n        ...coreSettings,\n        padding,\n        staveHeight,\n        sidePadding,\n        staveHeightWithPadding,\n        staveWidth,\n      }}\n    >\n      {props.children}\n    </Settings.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import * as React from \"react\";\nimport { useSettings } from \"./SettingsContext\";\n\nconst Chord = ({\n  chord,\n  noteX,\n  staveY,\n  width,\n}: {\n  chord: string;\n  noteX: number;\n  staveY: number;\n  width: number;\n}) => {\n  const { lineSpacing, textCharCentreOffset } = useSettings();\n  if (!chord) {\n    return null;\n  }\n  const x = noteX + width / 2 + chord.length * textCharCentreOffset.x;\n  const y = staveY - 1.5 * lineSpacing + textCharCentreOffset.y;\n  return <text {...{ x, y }}>{chord}</text>;\n};\n\nexport default Chord;\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./SettingsContext\";\n\nexport type NoteProps = {\n  strings: string;\n  x: number;\n  y: number;\n  width: number;\n};\n\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\n  const { tuning } = useSheetInfo();\n  const {\n    showNotes,\n    lineSpacing,\n    staveHeight,\n    textCharCentreOffset,\n  } = useSettings();\n  const stringFrets = Utils.getStringFrets(strings).map(\n    ({ stringIndex, fret }) => {\n      if (showNotes) {\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\n        return { stringIndex, fret: fret + fretNote };\n      }\n      return { stringIndex, fret };\n    }\n  );\n\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\n  const noteTailY1 = y + lineSpacing * (lowestStringIndex + 0.5);\n  const noteTailY2 = y + staveHeight + lineSpacing;\n  const noteCentreX = x + width * 0.5;\n\n  return (\n    <>\n      {stringFrets.map(({ stringIndex, fret }) => {\n        const noteX = noteCentreX + textCharCentreOffset.x * fret.length;\n        const noteY = y + stringIndex * lineSpacing + textCharCentreOffset.y;\n        return (\n          <text key={stringIndex} x={noteX} y={noteY}>\n            {fret}\n          </text>\n        );\n      })}\n      <line\n        x1={noteCentreX}\n        y1={noteTailY1}\n        x2={noteCentreX}\n        y2={noteTailY2}\n        strokeWidth={1}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const DoubleNote = (props: NoteProps) => {\n  const {\n    staveHeight,\n    lineSpacing,\n    noteHorizontalLineAdjustment,\n  } = useSettings();\n  const horizontalLineY = props.y + staveHeight + lineSpacing;\n  const horizontalLineX1 =\n    props.x + props.width * 0.25 - noteHorizontalLineAdjustment;\n  const horizontalLineX2 =\n    props.x + props.width * 0.75 + noteHorizontalLineAdjustment;\n  const [strings1, strings2] = props.strings.split(\",\");\n  return (\n    <>\n      <SingleNote\n        strings={strings1}\n        width={props.width * 0.5}\n        x={props.x}\n        y={props.y}\n      />\n      <SingleNote\n        strings={strings2}\n        width={props.width * 0.5}\n        x={props.x + props.width * 0.5}\n        y={props.y}\n      />\n      <line\n        x1={horizontalLineX1}\n        y1={horizontalLineY}\n        x2={horizontalLineX2}\n        y2={horizontalLineY}\n        strokeWidth={3}\n        stroke=\"black\"\n      />\n    </>\n  );\n};\n\nexport const BrushNote = (props: NoteProps) => (\n  <DoubleNote\n    x={props.x}\n    y={props.y}\n    width={props.width}\n    strings={props.strings + \",    0\"}\n  />\n);\n\nexport const SlurNote = (\n  props: NoteProps & {\n    label: string;\n  }\n) => {\n  const { lineSpacing, textCharCentreOffset, staveHeight } = useSettings();\n  const [strings1, strings2] = props.strings.split(\",\");\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\n\n  const arcX1 = props.x + props.width * 0.25;\n  const arcX2 = props.x + props.width * 0.75;\n  const arcY1 = props.y + (highestString1 - 0.5) * lineSpacing;\n  const arcY2 = props.y + (highestString2 - 0.5) * lineSpacing;\n\n  const arcControlX1 = arcX1 + 0.5 * lineSpacing;\n  const arcControlX2 = arcX2 - 0.5 * lineSpacing;\n  const arcControlY1 = arcY1 - 0.5 * lineSpacing;\n  const arcControlY2 = arcY2 - 0.5 * lineSpacing;\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\n\n  const labelLength = props.label.length;\n  const labelX =\n    props.x + 0.5 * props.width + textCharCentreOffset.x * labelLength;\n  const labelY =\n    props.y + staveHeight + 2 * lineSpacing + textCharCentreOffset.y;\n\n  return (\n    <>\n      <DoubleNote\n        x={props.x}\n        y={props.y}\n        width={props.width}\n        strings={props.strings}\n      />\n      <path\n        d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`}\n        stroke=\"black\"\n        strokeWidth={1}\n        fill=\"transparent\"\n      />\n      <text x={labelX} y={labelY}>\n        {props.label}\n      </text>\n    </>\n  );\n};\n\nexport const HammerOnNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings.substr(0, props.strings.length - 1) + \"0,\" + props.strings\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"H\" } }} />;\n};\n\nexport const PullOffNote = (props: NoteProps) => {\n  const strings =\n    props.strings.indexOf(\",\") === -1\n      ? props.strings +\n        \",\" +\n        props.strings.substr(0, props.strings.length - 1) +\n        \"0\"\n      : props.strings;\n  return <SlurNote {...{ ...props, ...{ strings, label: \"P\" } }} />;\n};\n\nexport const SlideNote = (props: NoteProps) => (\n  <SlurNote {...props} label=\"SL\" />\n);\n\nexport const Note = (\n  props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }\n) => {\n  switch (props.noteType) {\n    case \"b\":\n      return <BrushNote {...props} />;\n    case \"h\":\n      return <HammerOnNote {...props} />;\n    case \"p\":\n      return <PullOffNote {...props} />;\n    case \"s\":\n      return <SlideNote {...props} />;\n    case \"m\":\n      return <SingleNote {...props} />;\n    case \"d\":\n      return <DoubleNote {...props} />;\n    default:\n      return null;\n  }\n};\n","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport Chord from \"./Chord\";\nimport { Note } from \"./Notes\";\nimport { useSheetInfo } from \"./Sheet\";\nimport { useSettings } from \"./SettingsContext\";\n\nconst BarLine = (props: { x: number; y: number }) => {\n  const settings = useSettings();\n  return (\n    <line\n      x1={props.x}\n      y1={props.y}\n      x2={props.x}\n      y2={props.y + settings.staveHeight}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nconst StaveLine = (props: { y: number; width: number }) => {\n  const { sidePadding } = useSettings();\n  return (\n    <line\n      x1={sidePadding}\n      y1={props.y}\n      x2={sidePadding + props.width}\n      y2={props.y}\n      strokeWidth={1}\n      stroke=\"black\"\n    />\n  );\n};\n\nexport const Stave = (props: { y: number; barNotes: string[][] }) => {\n  const { lineSpacing, sidePadding } = useSettings();\n  const { barWidth, noteWidth } = useSheetInfo();\n  const staveWidth = barWidth * props.barNotes.length;\n\n  return (\n    <>\n      {Utils.range(5).map((i) => (\n        <StaveLine key={i} y={props.y + i * lineSpacing} width={staveWidth} />\n      ))}\n      {Utils.range(props.barNotes.length + 1).map((i) => (\n        <BarLine key={i} y={props.y} x={sidePadding + i * barWidth} />\n      ))}\n      {props.barNotes.map((notes, barIndex) => {\n        const barX = sidePadding + barIndex * barWidth;\n        return notes.map((noteString, noteIndex) => {\n          const noteX = barX + noteIndex * noteWidth;\n          const { noteType, strings, chord } = noteString\n            .split(\":\")\n            .map((s) => s.trim())\n            .reduce(\n              (acc, part) => {\n                if (part[0]) {\n                  if (part[0] === part[0].toUpperCase()) {\n                    //chord\n                    return { ...acc, chord: part };\n                  } else if (part[0] === part[0].toLowerCase()) {\n                    //note\n                    return {\n                      ...acc,\n                      noteType: part[0],\n                      strings: part.substr(1),\n                    };\n                  }\n                }\n                return acc;\n              },\n              {\n                noteType: \"\",\n                strings: \"\",\n                chord: \"\",\n              }\n            );\n\n          return (\n            <React.Fragment key={noteIndex}>\n              <Chord {...{ chord, noteX, staveY: props.y, width: noteWidth }} />\n              <Note\n                {...{\n                  noteType,\n                  strings,\n                  x: noteX,\n                  y: props.y,\n                  width: noteWidth,\n                }}\n              />\n            </React.Fragment>\n          );\n        });\n      })}\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Stave } from \"./Stave\";\nimport { useContext, useMemo } from \"react\";\nimport { useSettings } from \"./SettingsContext\";\nimport { merge, getStaveBarNotes } from \"../utils\";\n\nconst defaultSheetInfo = {\n  tuning: \"gDGBd\",\n  meter: 4,\n  barsPerStave: 4,\n  barWidth: 0,\n  noteWidth: 0,\n};\n\nconst getBarWidth = (staveWidth: number, barsPerStave: number) =>\n  staveWidth / barsPerStave;\nconst getNoteWidth = (barWidth: number, meter: number) => barWidth / meter;\n\nconst SheetInfoContext = React.createContext(defaultSheetInfo);\n\nexport const useSheetInfo = () => useContext(SheetInfoContext);\n\nexport const Sheet: React.FunctionComponent<{\n  notes: string;\n  tuning?: string;\n  meter?: number;\n  barsPerStave?: number;\n}> = (props) => {\n  const { notes, children } = props;\n  const { width, padding, staveHeightWithPadding, staveWidth } = useSettings();\n\n  const sheetInfo = merge(useSheetInfo(), props);\n  const { barsPerStave, meter } = sheetInfo;\n\n  const barWidth = useMemo(() => getBarWidth(staveWidth, barsPerStave), [\n    staveWidth,\n    barsPerStave,\n  ]);\n  const noteWidth = useMemo(() => getNoteWidth(barWidth, meter), [\n    barWidth,\n    meter,\n  ]);\n\n  const staveBarNotes = getStaveBarNotes(notes, meter, barsPerStave);\n\n  const sheetHeight =\n    0.5 * padding + staveHeightWithPadding * staveBarNotes.length;\n\n  return (\n    <SheetInfoContext.Provider value={{ ...sheetInfo, barWidth, noteWidth }}>\n      <svg\n        viewBox={`0 0 ${width} ${sheetHeight}`}\n        preserveAspectRatio=\"xMidYMid meet\"\n      >\n        {staveBarNotes.map((barNotes, staveIndex) => {\n          return (\n            <Stave\n              key={staveIndex}\n              y={0.5 * padding + staveHeightWithPadding * staveIndex}\n              barNotes={barNotes}\n            />\n          );\n        })}\n        {children}\n      </svg>\n    </SheetInfoContext.Provider>\n  );\n};\n\nexport const SheetTemplate: React.FunctionComponent<{\n  title: string;\n  description?: string;\n  notes: string;\n  tuning?: string;\n  meter?: number;\n  barsPerStave?: number;\n}> = (props) => {\n  const { title, description, tuning } = props;\n  return (\n    <>\n      <h1>{title}</h1>\n      {description && <p>{description}</p>}\n      <p>{tuning}</p>\n      <Sheet {...props} />\n    </>\n  );\n};\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nexport const HopHighLadies1 = () => (\n  <SheetTemplate\n    title=\"Hop High Ladies v1\"\n    notes={`\n      G:h  0,  2;h 0, 1;m0;m  0;\n      s  2,  4;b0040;m 0;b0000;\n      h  0,  2;h 0, 1;m0;m  0;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:h  0,  2;h 0, 1;m0;m  0;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\n\n      G:m  0;m5;p2,0;b0000;\n      s  2,  4;b0040;m 0;b0000;\n      m  0;m5;p2,0;b0000;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:m  0;m5;p2,0;b0000;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      p 3, 0;m  0;D7:h  0,  2;b0120\n    `}\n  />\n);\n\nexport const HopHighLadies2 = () => (\n  <SheetTemplate\n    title=\"Hop High Ladies v2\"\n    notes={`\n        G:h  0,  2;h 0, 1;m0;b  0;\n        s  2,  4;b  4;m 0;b0;\n        h  0,  2;h 0, 1;m0;b  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:h  0,  2;h 0, 1;m0;b  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\n  \n        G:m  0;m5;p2,0;d 0,  0;\n        s  2,  4;b  4;m 0;b0;\n        m  0;m5;p2,0;d 0,  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:m  0;m5;p2,0;d 0,  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        p 3, 0;m  0;D7:h  0,  2;m   0\n      `}\n  />\n);\n\nexport default () => (\n  <>\n    <HopHighLadies1 />\n    <HopHighLadies2 />\n  </>\n);\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nexport const WorriedMansBluesOriginal = () => (\n  <SheetTemplate\n    title=\"Worried Man's Blues\"\n    notes={`\n      G;;;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m  0;m   0;\n      C:m   2;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n\n      G:m   0;b0000;b0000;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m   4;m  0;\n      D7:m  2;b0120;b0120;m  2;\n      m 0;m  2;m  0;m   4;\n      G:m  0;b0000;m0000;\n    `}\n  />\n);\n\nexport const WorriedMansBluesOctaveUpV1 = () => (\n  <SheetTemplate\n    title=\"Worried Man's Blues (octave up v.1)\"\n    notes={`\n      G;;;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987;m 8;m  7;\n      C:m  9;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n\n      G:m  7;b987;b987;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987; m 7;m 8;\n      D7:m a;baa7;baa7;m a;\n      G:m9;m a;m 8;m 7;\n      m 8;b987;m987\n    `}\n  />\n);\n\nexport default () => (\n  <>\n    <WorriedMansBluesOriginal />\n    <WorriedMansBluesOctaveUpV1 />\n  </>\n);\n","import * as React from \"react\";\nimport { useEditor } from \"./Editor\";\nimport { useSettings } from \"../components/SettingsContext\";\nimport { useSheetInfo } from \"../components/Sheet\";\n\nconst Cursor = () => {\n  const { position } = useEditor();\n  const { padding, lineSpacing } = useSettings();\n  const { noteWidth } = useSheetInfo();\n  const x = padding + (0.1 + position) * noteWidth;\n  const height = lineSpacing * 5;\n  const y1 = 0.5 * padding - 0.5 * lineSpacing;\n  const y2 = y1 + height;\n\n  return (\n    <line x1={x} y1={y1} x2={x} y2={y2} strokeWidth={1} stroke=\"black\">\n      <animate\n        attributeName=\"visibility\"\n        from=\"visible\"\n        to=\"hidden\"\n        dur=\"1s\"\n        repeatCount=\"indefinite\"\n      />\n    </line>\n  );\n};\n\nexport default Cursor;\n","import React, {\n  useEffect,\n  useCallback,\n  useState,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\nimport Cursor from \"./Cursor\";\n\nconst EditorContext = React.createContext<{\n  position: number;\n  meter: number;\n}>({\n  position: 0,\n  meter: 4,\n});\n\nexport const useEditor = () => useContext(EditorContext);\n\nconst Editor = () => {\n  const [notes, setNotes] = useState<string[]>([]);\n  const [position, setPosition] = useState(0);\n\n  const { move, addNote, del, backspace } = useMemo(\n    () => ({\n      move: (direction: \"left\" | \"right\") => {\n        switch (direction) {\n          case \"left\":\n            setPosition(Math.max(0, position - 1));\n            break;\n          case \"right\":\n            setPosition(Math.min(notes.length, position + 1));\n            break;\n        }\n      },\n      addNote: (note: string) => {\n        setNotes([...notes.slice(0, position), note, ...notes.slice(position)]);\n        setPosition(position + 1);\n      },\n      del: () => {\n        if (position < notes.length) {\n          setNotes([...notes.slice(0, position), ...notes.slice(position + 1)]);\n        }\n      },\n      backspace: () => {\n        setNotes([\n          ...notes.slice(0, Math.max(0, position - 1)),\n          ...notes.slice(position),\n        ]);\n        setPosition(Math.max(0, position - 1));\n      },\n    }),\n    [position, setPosition, notes, setNotes]\n  );\n\n  const onKey = useCallback(\n    ({ keyCode }: KeyboardEvent) => {\n      switch (keyCode) {\n        case 37:\n          move(\"left\");\n          break;\n        case 39:\n          move(\"right\");\n          break;\n        case 8:\n          backspace();\n          break;\n        case 46:\n          del();\n          break;\n        case 66:\n          addNote(\"b0000\");\n          break;\n      }\n    },\n    [move, addNote, backspace, del]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKey);\n    return () => document.removeEventListener(\"keydown\", onKey);\n  }, [onKey]);\n\n  const meter = 4;\n\n  return (\n    <EditorContext.Provider value={{ position, meter }}>\n      <SheetTemplate title=\"Editor\" meter={meter} notes={notes.join(\";\")}>\n        <Cursor />\n      </SheetTemplate>\n    </EditorContext.Provider>\n  );\n};\n\nexport default Editor;\n","import * as React from \"react\";\nimport { SheetTemplate, useSheetInfo } from \"../components/Sheet\";\nimport { useState } from \"react\";\nimport SettingsContext, { useSettings } from \"../components/SettingsContext\";\nimport { getBarNotesForEditor } from \"../utils\";\n\nconst Cursor = (props: { position: number }) => {\n  const { position } = props;\n  const { sidePadding, staveHeightWithPadding } = useSettings();\n  const { noteWidth } = useSheetInfo();\n\n  const x = sidePadding + position * noteWidth;\n  const y = 0;\n\n  return (\n    <rect\n      {...{\n        x,\n        y,\n        width: noteWidth,\n        height: staveHeightWithPadding,\n      }}\n      strokeWidth={1}\n      stroke=\"black\"\n      fill=\"transparent\"\n    ></rect>\n  );\n};\n\nconst VirtualSheet: React.FunctionComponent<{\n  notes: string;\n  title: string;\n  textPosition: number;\n}> = ({ notes, title, textPosition }) => {\n  const barsPerStave = 2;\n  const { meter } = useSheetInfo();\n\n  let bars = getBarNotesForEditor(notes, meter);\n  const barsCount = bars.length;\n\n  const subsetBars = getBarNotesForEditor(notes.substr(0, textPosition), meter);\n  let currentBarIndex = Math.max(0, subsetBars.length - 1);\n\n  let currentNoteIndexInBar = Math.max(0, (subsetBars[0] ?? []).length - 1);\n\n  const previousSymbol = notes[textPosition - 1];\n  const isNewBarStart =\n    notes[textPosition] === \"\" &&\n    (previousSymbol === undefined ||\n      previousSymbol === \"\\n\" ||\n      (previousSymbol === \";\" && subsetBars[currentBarIndex].length === meter));\n\n  if (isNewBarStart) {\n    bars = [\n      ...bars.slice(0, currentBarIndex + 1),\n      [],\n      ...bars.slice(currentBarIndex + 1, barsCount),\n    ];\n    currentBarIndex++;\n    currentNoteIndexInBar = 0;\n  }\n\n  const barsToShow = bars.slice(\n    Math.max(0, currentBarIndex - 1),\n    currentBarIndex + 1\n  );\n\n  const virtualNotes = barsToShow.map((notes) => notes.join(\";\")).join(\"\\n\");\n\n  return (\n    <SheetTemplate {...{ title, notes: virtualNotes, barsPerStave }}>\n      <Cursor position={currentNoteIndexInBar} />\n    </SheetTemplate>\n  );\n};\n\nexport default () => {\n  const [notes, setNotes] = useState(\"\");\n  const [textPosition, setTextPosition] = useState(0);\n\n  return (\n    <>\n      <SettingsContext {...{ sidePaddingEnabled: false, width: 400 }}>\n        <VirtualSheet title=\"Editor\" {...{ textPosition, notes }} />\n      </SettingsContext>\n      <br />\n      <textarea\n        rows={10}\n        onSelect={(e) =>\n          setTextPosition((e.target as HTMLTextAreaElement).selectionStart)\n        }\n        onChange={(e) => setNotes(e.target.value)}\n        value={notes}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nconst notes = `\n  Am:m  2;b2122;m  2;b  0;\n  m  2;b  0;m  2;b 0;\n  C:m 1;b2102;m 1;m0;\n  h0,2;b2102;p2,0;b 1;\n  G:m0;b0000;m0;m 1;\n  b0;b2;b0;b 1;\n  Am:m 1;b2122;m 0;b2022;\n  m  2;b2122;m  2;b2122\n`;\n\nexport default () => (\n  <SheetTemplate\n    {...{ title: \"Rose Tattoo\", tuning: \"gDGBd\", meter: 4, notes }}\n  />\n);\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nexport const PartA = () => (\n  <SheetTemplate\n    title=\"Sandy River Belle A\"\n    notes={`\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m2;m0;\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m   2;m   0;\n\n      h   2;h  2;s  2,  4;b0040;\n      p  2;b0000;m2;m0;\n      d0, 5;d5, 5;d0, 5;d5, 5;\n      d0, 0;s  2,  4;m  0;b0000\n    `}\n  />\n);\n\nexport const PartB = () => (\n  <SheetTemplate\n    title=\"Sandy River Belle B\"\n    notes={`\n      b0;b5;d 5,  7;b 5;\n      m9;d9, 8;d7, 8;d9, 8;\n      b0;b5;d 5,  7;b 5;\n      d 7,  9;b 7;m7;b7777;\n\n      b0;b5;d 5,  7;b 5;\n      m9;d9, 8;d7, 8;d9, 8;\n      d0, 5;d5, 5;d0, 5;d5, 5;\n      d0, 0;s  2,  4;m  0;b0000\n    `}\n  />\n);\n\nconst SandyRiverBelle = () => (\n  <>\n    <PartA />\n    <PartB />\n  </>\n);\n\nexport default SandyRiverBelle;\n","import React, { useEffect, useRef } from \"react\";\nimport { Vex, Artist, VexTab } from \"vextab\";\nimport { useSettings } from \"./SettingsContext\";\n\nconst Renderer = Vex.Flow.Renderer;\nconst artist = new Artist(10, 10, 700, { scale: 0.8 });\nconst tab = new VexTab(artist);\n\nconst tabStaveTemplate = (\n  space: number,\n  showNotes: boolean,\n  tuning: string,\n  time: string,\n  content: string\n) => `\noptions space=${space}\ntabstave time=${time} notation=${showNotes} strings=5 tuning=${tuning}\n${content}`;\n\nconst VexTabSheet = ({\n  staves,\n  space,\n  tuning,\n  time,\n}: {\n  staves: string[];\n  space?: number;\n  tuning?: string;\n  time?: string;\n}) => {\n  const { showNotes } = useSettings();\n  const vexElement = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    const element = vexElement.current!;\n    element.innerHTML = \"\";\n    const renderer = new Renderer(element, Renderer.Backends.SVG);\n\n    const input = `\n      options tab-stems=true tab-stem-direction=down scale=0.75 width=1200\n      ${staves\n        .map((stave) =>\n          tabStaveTemplate(\n            space ?? 60,\n            showNotes ?? false,\n            tuning ?? \"D/5,B/4,G/4,D/4,G/5\",\n            time ?? \"4/4\",\n            stave\n          )\n        )\n        .join(\"\\n\")}\n    `;\n\n    tab.reset();\n    artist.reset();\n    tab.parse(input);\n    artist.render(renderer);\n  }, [staves, tuning, showNotes, space, time]);\n  return <div ref={vexElement}></div>;\n};\n\nexport default VexTabSheet;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\nimport VexTabSheet from \"../components/VexTabSheet\";\n\nexport const RussianShort = () => (\n  <SheetTemplate\n    title=\"Russian National Anthem\"\n    description=\"short\"\n    tuning=\"gCGBd\"\n    barsPerStave={5}\n    notes={`\n      C:;;;d    x,  0;\n      C:b 1;h  2;G:b 0;d   4,   4;\n      Am:b  2;d  0,   5;C:b  0;d   0,   0;\n      Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n      Am:b  2;h 1;G:m0;d    x,  0;\n      C:b2;d0, 1;G:b0;d 0,  0;\n      Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n      F:b  2;d  0,   5;C:b  0;d   0,   0;\n      C:b 1; d 0,  2;m  0\n    `}\n  />\n);\n\nexport const RussianMelodyNotes = () => {\n  const middle = `\n    C:b 1;h  2;G:b 0;d   4,   4;\n    Am:b  2;d  0,   5;C:b  0;d   0,   0;\n    Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n    Am:b  2;h 1;G:b0;d    x,  0;\n    C:b2;d0, 1;G:b0;d 0,  0;\n    Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n    F:b  2;d  0,   5;C:b  0;d   0,   0;\n    C:b 1; d 0,  2;G:p  0, 0;h 1, 3;\n    C:b2;;d0, 1;h 1;\n    G:b0;d    x,  0;p  0, 0;h 1, 3;\n    C:b 1;;d 0,  2;h  2;    \n    G:b 0;d    x,   4;p   4,  0;p  2, 0;\n    C:b 1;p  2, 0;b 1;p  2, 0;\n    b 1;p  2, 1;F:b3;d3,    x;\n    F:b3;;G:p2;p 1;\n    C:b2;d    x, 1;b 1;;\n    Dm:b0;;p 1;p  2;\n    Am:b 1;d    x,  2;b  2;;\n    C:b 1;d 0,  2;b  0;d   0,   0;\n  `;\n  return (\n    <SheetTemplate\n      title=\"Russian National Anthem\"\n      description=\"melody notes\"\n      tuning=\"gCGBd\"\n      barsPerStave={5}\n      notes={`\n      C:m2100;;;d    x,  0;     \n      ${middle}\n      C:b 1;d 0,  2;b  0;d    x,  0;\n      ${middle}\n      b  0;;b  2;b 0;\n      m2100;\n    `}\n    />\n  );\n};\n\nexport const RussianFullClawhammer = () => {\n  const middle = `\n    C:b 1;h  2;G:b 0;d   4,   4;\n    Am:b  2;d  0,   5;C:b  0;d   0,   0;\n    Dm:b   2;s   2,   4;F:b   5;p   5,  0;\n    Am:b  2;h 1;G:b0002;d    x,  0;\n    C:b2;d0, 1;G:b0;d 0,  0;\n    Am:b 1;d 0,  2;Em:b 0;d   4,   4;\n    F:b  2;d  0,   5;C:b  0;d   0,   0;\n    C:b 1; d 0,  2;G:p  0, 0;h 1, 3;\n    C:m2;b2100;d0, 1;h 1;\n    G:m0;b0002;p  0, 0;h 1, 3;\n    C:m 1;b2100;d 0,  2;h  2;    \n    G:m 0;b0002;p   4,  0;p  2, 0;\n    C:b 1;p  2, 0;b 1;p  2, 0;\n    b 1;d  2, 1;F:m3;b3120;\n    F:m3;b3120;G:p2;p 1;\n    C:m2;b2100;m 1;b2100;\n    G:m0;b0002;p 1;p  2;\n    Am:m 1;b2120;m  2;b2120;\n    C:b 1;d 0,  2;b  0;d   0,   0;\n  `;\n  return (\n    <SheetTemplate\n      title=\"Russian National Anthem\"\n      description=\"clawhammer arrangement\"\n      tuning=\"gCGBd\"\n      barsPerStave={5}\n      notes={`\n      C:m2100;;;d    x,  0;     \n      ${middle}\n      C:b 1;d 0,  2;b  0;d    x,  0;\n      ${middle}\n      G:m  0;m0002;C:m  2;m 0;\n      m2100;\n    `}\n    />\n  );\n};\n\nconst RussianAnthem = () => (\n  <>\n    {/* <RussianShort /> */}\n    {/* <RussianFull /> */}\n    {/* <RussianFullClawhammer /> */}\n    <h1>Russian National Anthem</h1>\n    <p>gCGBd</p>\n    <VexTabSheet\n      {...{\n        tuning: \"D/5,B/4,G/4,C/4,G/5\",\n        staves: [\n          `\n            notes :hd (2/1.1/2.0/3.0/4) $.top.G$ :8 ## 0/3 =|: 1/2-0/5 0h2/3 0/2-0/5 4-4/4 | 2/3-0/5 0/3-5/4 0/3-0/5 0-0/4 |\n            notes 2/4-0/5 2s4/4 5/4-0/5 5/4-0/3 $.top.P, $ | 2/3-0/5 0h1/2 (0/1.0/2.0/3.2/4)$.top.G$-0/5 ## 0/3 |\n          `,\n          `\n            notes :8 2/1-0/5 0/1-1/2 0/1-0/5 0/2-0/3 | 1/2-0/5 0/2-2/3 0/2-0/5 4-4/4 | 2/3-0/5 0/3-5/4 0/3-0/5 0-0/4 |\n            notes 1/2-0/5 0/2-2/3 0/3-0/2 $.top.P, $ 1h3/2 | :q 2/1 :8 (2/1.1/2.0/3.0/4)$.top.C$-0/5 0/1-1/2 0h1/2 |\n          `,\n          `\n            notes :q 0/1 :8 (0/1.0/2.0/3.2/4)$.top.G$-0/5 0/3-0/2 $.top.P, $ 1h3/2 | :q 1/2 :8 (2/1.1/2.0/3.0/4)$.top.C$-0/5 0/2-2/3 0h2/3 |\n            notes :q 0/1 :8 (0/1.0/2.0/3.2/4)$.top.G$-0/5 4/4-0/3 $.top.P, $ 2/3-0/2 $.top.P, $ | \n            notes 1/2-0/5 2/3-0/2 $.top.P, $ 1/2-0/5 2/3-0/2 $.top.P, $ | 1/2-0/5 2/3-1/2 :q 3/1 :8 (3/1.1/2.2/3.0/4)$.top.F$-0/5 |\n          `,\n          `\n            notes :q 3/1 :8 (3/1.1/2.2/3.0/4)-0/5 2p0/1 1p0/2 | :q 2/1 :8 (2/1.1/2.0/3.0/4)$.top.C$-0/5 :q 1/2 :8 (2/1.1/2.0/3.0/4)-0/5 |\n            notes :q 0/1 :8 (0/1.0/2.0/3.2/4)$.top.G$-0/5 1p0/2 2p0/3 | :q 1/2 :8 (2/1.1/2.2/3.0/4)$.top.Am$-0/5 :q 2/3 :8 (2/1.1/2.2/3.0/4)-0/5 |\n            notes 1/2-0/5 0/2-2/3 0/3-0/5 0-0/4 |\n          `,\n          `\n            notes 1/2-0/5 0/2-2/3 0/3-0/5 ## 0/3 =:| :q 0/3 (0/1.0/2.0/3.2/4)$.top.G$ 2/3 0/2 | :w (2/1.1/2.0/3.0/4)$.top.C$ =||\n            text .-1,:w,1.,|2.\n          `,\n        ],\n      }}\n    />\n  </>\n);\n\nexport default RussianAnthem;\n","import React, { useState } from \"react\";\nimport { SheetTemplate, Sheet } from \"../components/Sheet\";\nimport VexTabSheet from \"../components/VexTabSheet\";\n\n//https://www.youtube.com/watch?v=_gCt8MgOzVk\nexport const MelodyNotes = () => {\n  const main = `\n    E:m2;h 1;\n    m0;p 1;\n    Am:m  2;d  2, 1;\n    m2;d0, 1;\n    E7:m 0;d    x, 1;\n    m0;m2;\n    Am:m 1;m  2;\n    m  2;;\n    Dm:d    x,0;d    x,3;\n    m7;p5,3;\n    Am/C:m2;d    x, 1;\n    m2;d0, 1;\n    E7:m 0;h 1;\n    m0;m2;\n    Am:m 1;m  2;\n    m  2;\n  `;\n  return (\n    <SheetTemplate\n      title=\"Korobeiniki\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n        ${main};\n        ${main};\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;;\n        m  2;;\n        E:m  1;;\n        m 0;;\n        Am:m2;;\n        m 1;;\n        E:m0;;\n        m 0;;\n        Am:m 1;m2;\n        m7;m7;\n        E:m6;;\n        ;;\n        ${main};\n        ${main}\n\n\n    `}\n    />\n  );\n};\n\nconst main1 = `\nE:b2;h 1;\nb0;p 1;\nAm:m  2;d  2, 1;\nb2;d0, 1;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;;\nDm:p3;h3;\nm7;p5,3;\nAm/C:b2;h 1;\nb2;d0, 1;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;\n`;\n\nconst main2 = `\nE:b2;h 1;\nb0;p 1;\nAm:m  2;d  2, 1;\nb2;d0, 1;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;;\nDm:d 6,  7;d0, 6;\nm7;p 8, 6;\nAm/C:b 5;s  4,  5;\nb 5;d0,  5;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;\n`;\n\nconst main3 = `\nE:b2;h 1;\nb0;p 1;\nAm:m  2;d  2, 1;\nb2;d0, 1;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;;\nDm:d 6,  7;d0, 6;\nm7;d5, 6;\nAm/C:b 5;s  4,  5;\nb 5;d0,  5;\nE7:b 0;h 1;\nb0;m2;\nAm:b 1;m  2;\nm  2;\n`;\n\nexport const ShortVersion = () => {\n  return (\n    <SheetTemplate\n      title=\"Korobeiniki\"\n      description=\"short\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={main1}\n    />\n  );\n};\n\nexport const ShortVersionHigh = () => {\n  return (\n    <SheetTemplate\n      title=\"Korobeiniki\"\n      description=\"travel banjo\"\n      tuning=\"cGCEg\"\n      barsPerStave={10}\n      meter={2}\n      notes={`\n          E:b 0;p   4,  0;\n          b  2;d  0,   4;\n          Am:m   2;p   2,  0;\n          b 0;p  2;\n          E7:b   4;p   4,  0;\n          b  2;m 0;\n          Am:b  0;m   2;\n          m   2;;\n          Dm:d 1,  2;d  2, 1;\n          m2;p 3, 1;\n          Am/C:b 0;p   4,  0;\n          b 0;p  2;\n          E7:b   4;p   4,  0;\n          b  2;m 0;\n          Am:b  0;m   2;\n          m   2;\n        `}\n    />\n  );\n};\n\nexport const ShortVersion2 = () => {\n  return (\n    <SheetTemplate\n      title=\"Korobeiniki\"\n      description=\"alternative short\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={main2}\n    />\n  );\n};\n\nexport const ShortVersion3 = () => {\n  return (\n    <SheetTemplate\n      title=\"Korobeiniki\"\n      description=\"alternative short 2\"\n      tuning=\"gDGBd\"\n      barsPerStave={10}\n      meter={2}\n      notes={main3}\n    />\n  );\n};\n\nexport const FullVersion = () => {\n  const tuning = \"gDGBd\";\n  const [variant, setVariant] = useState(0);\n  const main = variant === 0 ? main1 : main3;\n  return (\n    <>\n      <h1>Korobeiniki</h1>\n      <p>\n        Second verse variant:&nbsp;\n        <select\n          onChange={(e) => setVariant(parseInt(e.target.value))}\n          value={variant}\n        >\n          <option value={0}>long travel</option>\n          <option value={1}>up the neck</option>\n        </select>\n      </p>\n      <p>{tuning}</p>\n      <Sheet\n        tuning={tuning}\n        barsPerStave={10}\n        meter={2}\n        notes={`\n        ${main}\n        ${main}\n        Am:m2;b2122;\n        m 1;b2122;\n        E7:m0;b0012;\n        m 0;b0012;\n        Am:m 1;b2122;\n        m  2;b2122;\n        E:m  1;b2012;\n        m 0;b2012;\n        Am:m2;b2122;\n        m 1;b2122;\n        E7:m0;b0012;\n        m 0;b0012;\n        Am:m 1;m2;\n        m7;m7;\n        E:m6;;\n        d6,    x;;\n        ${main}\n        ${main}\n\n\n    `}\n      />\n    </>\n  );\n};\n\nconst Korobeiniki = () => (\n  <>\n    {/* <MelodyNotes /> */}\n    {/* <ShortVersion /> */}\n    {/* <ShortVersion2 /> */}\n    {/* <ShortVersion3 /> */}\n    {/* <FullVersion /> */}\n    <h1>Korobeiniki</h1>\n    <p>gDGBd</p>\n    <VexTabSheet\n      {...{\n        time: \"2/4\",\n        staves: [\n          `\n            notes =|: :8 2/1-0/5 0h1/2 | 0/1-0/5 1p0/2 | :q 2/3 :8 2/3-1/2 | 2/1-0/5 0/1-1/2 | 0/2-0/5 0h1/2 | 0/1-0/5 :q 2/1 | :8 1/2-0/5 :q 2/3 | :h 2v/3 |\n            text .0,|,:h,E,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :8 6/2-7/3 0/1-6/2 | :q 7/1 :8 5/1-6/2 | 5/2-0/5 4/3s5/3 | 5/2-0/5 0/1-5/3 | 0/2-0/5 0h1/2 | 0/1-0/5 :q 2/1 | :8 1/2-0/5 :q 2/3 | :h 2v/3 =:|\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,Fine,|\n            text ++,.0,:h,Dm,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :q 2/1 :8 (2/1.1/2.2/3.2/4)-0/5 | :q 1/2 :8 (2/1.1/2.2/3.2/4)-0/5 |\n            notes :q 0/1 :8 (0/1.0/2.1/3.2/4)-0/5 | :q 0/2 :8 (0/1.0/2.1/3.2/4)-0/5 |\n            notes :q 1/2 :8 (2/1.1/2.2/3.2/4)-0/5 | :q 2/3 :8 (2/1.1/2.2/3.2/4)-0/5 |\n            notes :q 1/3 :8 (2/1.0/2.1/3.2/4)-0/5 | :q 0/2 :8 (2/1.0/2.1/3.2/4)-0/5 |\n            text .-1,:h,Bridge\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n          `,\n          `\n            notes :q 2/1 :8 (2/1.1/2.2/3.2/4)-0/5 | :q 1/2 :8 (2/1.1/2.2/3.2/4)-0/5 |\n            notes :q 0/1 :8 (0/1.0/2.1/3.2/4)-0/5 | :q 0/2 :8 (0/1.0/2.1/3.2/4)-0/5 |\n            notes :q 1/2 2/1 | 7/1 7/1 | :h 6/1 $.a>/top.$ | 6v/1 |\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,D.C. al Fine,|\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n\n          `,\n        ],\n      }}\n    />\n    <h1>Korobeiniki (syncopated bridge)</h1>\n    <p>gDGBd</p>\n    <VexTabSheet\n      {...{\n        time: \"2/4\",\n        staves: [\n          `\n            notes =|: :8 2/1-0/5 0h1/2 | 0/1-0/5 1p0/2 | :q 2/3 :8 2/3-1/2 | 2/1-0/5 0/1-1/2 | 0/2-0/5 0h1/2 | 0/1-0/5 :q 2/1 | :8 1/2-0/5 :q 2/3 | :h 2v/3 |\n            text .0,|,:h,E,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :8 6/2-7/3 0/1-6/2 | :q 7/1 :8 5/1-6/2 | 5/2-0/5 4/3s5/3 | 5/2-0/5 0/1-5/3 | 0/2-0/5 0h1/2 | 0/1-0/5 :q 2/1 | :8 1/2-0/5 :q 2/3 | :h 2v/3 =:|\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,Fine,|\n            text ++,.0,:h,Dm,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :qd 2/1 :8 0/5 | :qd 1/2 :8 0/5 |\n            notes :qd 0/1 :8 0/5 | :qd 0/2 :8 0/5 |\n            notes :qd 1/2 :8 0/5 | :qd 2/3 :8 0/5 |\n            notes :qd 1/3 :8 0/5 | :qd 0/2 :8 0/5 |\n            text .-1,:h,Bridge\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n          `,\n          `\n            notes :qd 2/1 :8 0/5 | :qd 1/2 :8 0/5 |\n            notes :qd 0/1 :8 0/5 | :qd 0/2 :8 0/5 |\n            notes :q 1/2 2/1 | 7/1 7/1 | :h 6/1 $.a>/top.$ | 6v/1 |\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,D.C. al Fine,|\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n\n          `,\n        ],\n      }}\n    />\n    <h1>Korobeiniki (travel banjo)</h1>\n    <p>cGCEg</p>\n    <VexTabSheet\n      {...{\n        time: \"2/4\",\n        staves: [\n          `\n            notes =|: :8 0/2-0/5 4/4-0/3 $.top.P, $ | 2/3-0/5 0/3-4/4 | :q 2/4 :8 2/4-0/3 $.top.P, $ | 0/2-0/5 2p0/3 | 4/4-0/5 4/4-0/3 $.top.P, $ | 2/3-0/5 :q 0/2 | :8 0/3-0/5 :q 2/4 | :h 2v/4 |\n            text .0,|,:h,E,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :8 1/2-2/3 2/3-1/2$.top.M→, $ | :q 2/1 :8 3p1/2 | 0/2-0/5 4/4-0/3 $.top.P, $ | 0/2-0/5 2p0/3 | 4/4-0/5 4/4-0/3 $.top.P, $ | 2/3-0/5 :q 0/2 | :8 0/3-0/5 :q 2/4 | :h 2v/4 =:|\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,Fine,|\n            text ++,.0,:h,Dm,|, ,|,Am,|, ,|,E7,|, ,|,Am,|, ,|\n          `,\n          `\n            notes :qd 0/2 :8 0/5 | :qd 0/3 :8 0/5 |\n            notes :qd 2/3 :8 0/5 | :qd 4/4 :8 0/5 |\n            notes :qd 0/3 :8 0/5 | :qd 2/4 :8 0/5 |\n            notes :qd 1/4 :8 0/5 | :qd 4/4 :8 0/5 |\n            text .-1,:h,Bridge\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n          `,\n          `\n            notes :qd 0/2 :8 0/5 | :qd 0/3 :8 0/5 |\n            notes :qd 2/3 :8 0/5 | :qd 4/4 :8 0/5 |\n            notes :q 0/3 0/2 | 2/1 2/1 | :h 1/1$.a>/top.$ | 1v/1 |\n            text .-1,:h, ,|, ,|, ,|, ,|, ,|, ,|, ,|,D.C. al Fine,|\n            text ++, .0, :h,Am,|, ,|,E7,|, ,|,Am,|, ,|,E,|, ,|\n\n          `,\n        ],\n      }}\n    />\n    {/* <ShortVersionHigh /> */}\n  </>\n);\n\nexport default Korobeiniki;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\n// http://abcnotation.com/tunePage?a=trillian.mit.edu/~jc/music/abc/Russia/Kalinka/0000\n// https://www.youtube.com/watch?v=qn06W-iBfkQ\nexport const CVersion = () => {\n  return (\n    <SheetTemplate\n      title=\"Kalinka\"\n      description=\"lower\"\n      tuning=\"gCGBd\"\n      barsPerStave={9}\n      meter={2}\n      notes={`\n        ;b  2;\n        b  0;h   4,   5;\n        b  0;h   4,   5;\n        b  0;p   5,   4;\n        b   2;d  2,  2;\n        d  0,   5;h   4,   5;\n        b  0;h   4,   5;\n        b  0;p   5,   4;\n        m   2;\n      `}\n    />\n  );\n};\n\nexport const GVersion = () => {\n  return (\n    <SheetTemplate\n      title=\"Kalinka\"\n      description=\"higher\"\n      tuning=\"gDGBd\"\n      barsPerStave={9}\n      meter={2}\n      notes={`\n        ;b 0;\n        b  2;p   3,  0;\n        b  2;p   3,  0;\n        b  2;d  0,   3;\n        b   2;d 0, 0;\n        p  2;p   3,  0;\n        b  2;p   3,  0;\n        b  2;d  0,   3;\n        m   2;\n      `}\n    />\n  );\n};\n\nconst Kalinka = () => (\n  <>\n    <CVersion />\n    <GVersion />\n  </>\n);\n\nexport default Kalinka;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nexport const MelodyNotes = () => {\n  return (\n    <SheetTemplate\n      title=\"Mortal Kombat\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={4}\n      meter={4}\n      notes={`\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d 1,  0;d0, 1;\n        d   3,   3;d  2,   3;d 1,   3;p 1;\n\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d0,  0;d 0,  0;\n        d   3,   3;d  2,   3;d 1,   3;p 1;\n\n        d  2,  2;d 1,  2;d0,  2;p2;\n        d  5,  5;d 5,  5;d5,  5;d 5,  5;\n        d  0,  0;d 0,  0;d0,  0;d 0,  0;\n        d   3,   3;d  2,   3;d 1,   3;p 1\n    `}\n    />\n  );\n};\n\nconst MortalKombat = () => (\n  <>\n    <MelodyNotes />\n    <img src={`${process.env.PUBLIC_URL}/mortal-kombat-1.jpg`} alt=\"Notes 1\" />\n    <img src={`${process.env.PUBLIC_URL}/mortal-kombat-2.jpg`} alt=\"Notes 2\" />\n  </>\n);\n\nexport default MortalKombat;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\nimport VexTabSheet from \"../components/VexTabSheet\";\n\nexport const MelodyNotes = () => {\n  return (\n    <SheetTemplate\n      title=\"Lambada\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={5}\n      meter={4}\n      notes={`\n      ;;;m   2;\n      m2;d    x,0;p 1;m  2;\n      F:d  2, 1;d 0,  2;G:h  2;p   2;\n      C:m   2;;;m   2;\n      m2;d    x,0;p 1;m  2;\n      F:d  2, 1;d 0,  2;G:h  2;p   2;\n      C:m   2;;;;\n      Dm:m0;d0, 1;m   3;d  2, 1;\n      m2;d0, 1;m   3;d  2, 1;\n      G:m 0;p  2;d  0,  0;p  2;\n      Am:m  2;;;;\n      Dm:m0;d0, 1;m   3;d  2, 1;\n      m2;d0, 1;m   3;d  2, 1;\n      G:m 0;p  2;d  0,  0;p  2;\n      Am:p 1;m  2;;\n    `}\n    />\n  );\n};\n\nexport const Clawhammer = () => {\n  return (\n    <SheetTemplate\n      title=\"Lambada\"\n      description=\"Clawhammer Arrangement\"\n      tuning=\"gDGBd\"\n      barsPerStave={5}\n      meter={4}\n      notes={`\n      Am:;;;m   2;\n      b2;p2;p 1;m  2;\n      F:d  2, 1;d 0,  2;G:h  2;p   2;\n      C:m   2;b2102;h   2;b2102;\n      b2;p2;p 1;m  2;\n      F:d  2, 1;d 0,  2;G:h  2;p   2;\n      C:m   2;b2102;h   2;b2102;\n      Dm:b0;d0, 1;m   3;d  2, 1;\n      b2;d0, 1;m   3;d  2, 1;\n      G:b 0;p  2;d  0,  0;p  2;\n      Am:m  2;b2122;h  2;b2122;\n      Dm:b0;d0, 1;m   3;d  2, 1;\n      b2;d0, 1;m   3;d  2, 1;\n      G:b 0;p  2;d  0,  0;p  2;\n      Am:p 1;m  2;m2122;\n    `}\n    />\n  );\n};\n\nconst Lambada = () => {\n  return (\n    <>\n      <h1>Lambada</h1>\n      <p>gDGBd</p>\n      <VexTabSheet\n        {...{\n          staves: [\n            `\n            notes :q 2/4\n            notes =|: :8 2/1-0/5 2p0/1 1p0/2 :q 2/3 |\n            notes :8 2/3-1/2 0/1-2/3 0h2/3 2p0/4 |\n            notes :q 2/4 :8 (2/1.1/2.0/3.2/4)-0/5 0h2/4 (2/1.1/2.0/3.2/4)-0/5 =:|\n            text .-1,:q,Part A,|,:w, ,|, ,|, ,|\n            text ++,.0,:q,Am,|,:w, ,|,:h,F,G,|,:w,C,|\n          `,\n            `\n            notes =|: :8 0/1-0/5 0/1-1/2 :q 3/4 :8 2/3-1/2 |\n            notes :8 2/1-0/5 0/1-1/2 :q 3/4 :8 2/3-1/2 |\n            notes :8 0/1-0/5 2p0/3 0-0/3 2p0/3 |\n            notes :q 2/3 :8 (2/1.1/2.2/3.2/4)-0/5 0h2/3 (2/1.1/2.2/3.2/4)-0/5 =:|\n            notes :8 1p0/2 :h 2v/3 =|=\n            text .-1,|Part B,:w, ,|, ,|, ,|1., ,|2.,:hd, ,|\n            text ++,.0,|,:w,Dm,|, ,|,G,|,Am,|,:hd,Am,|\n          `,\n          ],\n        }}\n      />\n    </>\n  );\n};\n\nexport default Lambada;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\n// https://musescore.com/user/28594606/scores/5218741\nexport const MelodyNotes = () => {\n  const intro = `\n    ;;;h   2,   4;\n  `;\n  const verse1 = `\n    Em:m  0;m  0;h  2;d  0,   4;\n    C:m   2;;m   2;;\n    D:d   4,   4;h  2;;h  2;\n    G:m 0;m 0;D:d  2,   0;d    x,   0;\n  `;\n  const verse2 = `\n    G:m 0;h 3;p 2;d 0,  0;\n    D:d  2,  2;d 0,  2;;;\n    Em:m 0;d x,  2;C:m  0;d  0,   2;\n    D:d  2,  2;d 0,  2;;h  2;\n    G:m 0;h 3;p 2;d 0,  0;\n    D:d  2,   4;p   2;;h   2,   4;\n    Em:d  0,  0;m   4;C:h   2,   4;m  0;\n    D:m  2;\n  `;\n\n  return (\n    <SheetTemplate\n      title=\"Moonlight Shadow\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={5}\n      meter={4}\n      notes={`\n        ${intro}\n        ${verse1}\n        ${verse1} \n        ${verse2}       \n      `}\n    />\n  );\n};\n\nconst MoonlightShadow = () => (\n  <>\n    <MelodyNotes />\n  </>\n);\n\nexport default MoonlightShadow;\n","import React from \"react\";\nimport { SheetTemplate } from \"../components/Sheet\";\n\nexport const MelodyNotes = () => {\n  return (\n    <SheetTemplate\n      title=\"Prince Igor\"\n      description=\"melody notes\"\n      tuning=\"gDGBd\"\n      barsPerStave={16}\n      meter={2}\n      notes={`\n       m  2;m  2;\n       m2;mx;\n       mx;h2\n       m 1;d 0,  2;\n       h 1;m0;\n       mx;mx;\n       ;m2;\n       m 0;p  2;\n       m   2;m   2;\n       m  2;m  x;\n       m  x;m 0;\n       m  2;d  0,   4;\n       d  0,   4;m   2;\n       m   x;m   x;\n       ;m   4;\n       m  0;m 0;\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       h 1;m0;\n       mx;mx;\n       ;m2;\n       m 0;p  2;\n       m   2;m   2;\n       m  2;m  x;\n       m  x;m 0;\n       m  2;d  0,   4;\n       d  0,   4;m   2;\n       m   x;m   x;\n       m   x;;\n       ;;\n\n       m  2;m  2;\n       m 1;m x;\n       m x;m0;\n       m 1;d 0,  2;\n       h 1;m0;\n       mx;mx;\n       mx;m1;\n       m0;m 0;\n       m1;m1;\n       m5;mx;\n       mx;m7;\n       m5;p3,1;\n       d0, 1;m 0;\n       m x;m x;\n       m x;m 1;\n       m0;p 1;\n       m  2;m  2;\n       m 1;m x;\n       m x;m0;\n       m 1;d 0,  2;\n       h  2;m 0;\n       m x;m x;\n       m x;m 1;\n       m 0;m  0;\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       m 0;m x;\n       m x;m x;\n       m x;m x;\n       ;;  \n\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       h 1;m0;\n       mx;mx;\n       ;m2;\n       m 0;p  2;\n       m   2;m   2;\n       m  2;m  x;\n       m  x;m 0;\n       m  2;d  0,   4;\n       d  0,   4;m   2;\n       m   x;m   x;\n       ;m   4;\n       m  0;m 0;\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       h 1;m0;\n       mx;mx;\n       ;h2;\n       m0;p 1;\n       m   2;m   2;\n       m  2;m  x;\n       ;d  2, 0;\n       m  2;d  0,   4;\n       d  0,   4;m   2;\n       m   x;m   x;\n       ;;\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       d 0,  2;m  0;\n       m  x;;\n       m  2;m  2;\n       m2;mx;\n       mx;h2;\n       m 1;d 0,  2;\n       m 0;m x;\n       m x;;       \n\n\n      \n    `}\n    />\n  );\n};\n\nexport const Clawhammer = () => {\n  return (\n    <SheetTemplate\n      title=\"Prince Igor\"\n      description=\"clawhammer arrangement\"\n      tuning=\"gDGBd\"\n      barsPerStave={16}\n      meter={2}\n      notes={`\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2\n        m 1;d 0,  2;\n        h 1;m0;\n        G:b0000;m0;\n        b0000;m2;\n        m 0;p  2;\n        Am:m   2;m   2;\n        m  2;b2122;\n        m  2;m 0;\n        m  2;d  0,   4;\n        d  0,   4;m   2;\n        Em:b2002;m   2;\n        b2002;m   4;\n        m  0;m 0;\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        h 1;m0;\n        G:b0000;m0;\n        b0000;m2;\n        m 0;p  2;\n        Am:m   2;m   2;\n        m  2;b2122;\n        m  2;m 0;\n        m  2;d  0,   4;\n        d  0,   4;m   2;\n        Em:b2002;m   2;\n        b2002;m   4;\n        m  0;m 0;\n\n        Am:m  2;m  2;\n        m 1;b2122;\n        m 1;m0;\n        m 1;d 0,  2;\n        h 1;m0;\n        G:b0000;m0;\n        b0000;m 4;\n        m0;m 0;\n        m 4;m 4;\n        m5;b5555;\n        m7;b7777;\n        m5;p 6, 4;\n        d0,  5;m 0;\n        b0000;m 0;\n        b0000;m 1;\n        m0;p 1;\n        Am:m  2;m  2;\n        m 1;b2122;\n        m 1;m0;\n        m 1;d 0,  2;\n        h  2;m 0;\n        G:b0000;m 0;\n        b0000;m 1;\n        m 0;m  0;\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        G:m 0;b0000;\n        m  0;b0000;\n        m 0;b0000;\n        m  0;b0000;\n          \n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        h 1;m0;\n        G:b0000;m0;\n        b0000;m2;\n        m 0;p  2;\n        Am:m   2;m   2;\n        m  2;b2122;\n        m  2;m 0;\n        m  2;d  0,   4;\n        d  0,   4;m   2;\n        Em:b2002;m   2;\n        b2002;m   4;\n        m  0;m 0;\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        h 1;m0;\n        G:b0000;m0;\n        b0000;h2;\n        m0;p 1;\n        Am:m   2;m   2;\n        m  2;b2122;\n        m  2;d  2, 0;\n        m  2;d  0,   4;\n        d  0,   4;m   2;\n        Em:b2002;m   2;\n        b2002;m   2;\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        d 0,  2;m  0;\n        G:b0000;m  0;\n        Am:m  2;m  2;\n        m2;b2122;\n        m2;h2;\n        m 1;d 0,  2;\n        G:m 0;b0000;\n        m  0;b0000;\n       `}\n    />\n  );\n};\n\nconst PriceIgor = () => (\n  <>\n    <img src={`${process.env.PUBLIC_URL}/uletai-syao.jpg`} alt=\"Notes\" />\n    <MelodyNotes />\n    <Clawhammer />\n  </>\n);\n\nexport default PriceIgor;\n","import React from \"react\";\nimport VexTabSheet from \"../components/VexTabSheet\";\n\nexport default function Sokolov() {\n  return (\n    <>\n      <h1>Sokolov's Polka</h1>\n      <p>gDGBd</p>\n      <VexTabSheet\n        {...{\n          time: \"2/4\",\n          staves: [\n            `\n              notes :16 4/1-0/5-4h5/2 0h5/2-4/1-0/5 |\n              notes :8d 5p:16:4/1  :q 4/1 |\n              notes :16 7/2-7/1-8/3-7/2 9/4-8/3-7/2-7/1 |\n              notes :8d 10p:16:9/1  :q 9/1 |\n            `,\n            `\n              notes :16 14/1-12/2-14/3-0/5 7/2-9/3-8h9/3 |\n              notes :8d 5p:16:4/1  :q 4/1 |\n              notes :16 3/3-2/2-2/1-0/5 :8 4p2/1 |\n              notes 2/1-4/2 :q 9/1 =||\n            `,\n          ],\n        }}\n      />\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect, HashRouter, Link } from \"react-router-dom\";\n\nimport HopHighLadies from \"./tunes/HopHighLadies\";\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\nimport InteractiveEditor from \"./interactive-editor/Editor\";\nimport TextEditor from \"./text-editor/Editor\";\nimport RoseTatoo from \"./tunes/RoseTatoo\";\n\nimport \"./App.css\";\nimport SettingsContext from \"./components/SettingsContext\";\nimport SandyRiverBelle from \"./tunes/SandyRiverBelle\";\nimport RussianAnthem from \"./tunes/RussianAnthem\";\nimport Korobeiniki from \"./tunes/Korobeiniki\";\nimport Kalinka from \"./tunes/Kalinka\";\nimport MortalKombat from \"./tunes/MortalKombat\";\nimport Lambada from \"./tunes/Lambada\";\nimport MoonlightShadow from \"./tunes/MoonlightShadow\";\nimport PrinceIgor from \"./tunes/PrinceIgor\";\nimport Sokolov from \"./tunes/Sokolov\";\n\ntype TitleRouteProps = {\n  path: string;\n  title: string;\n};\n\nconst TitleRoute: React.FunctionComponent<TitleRouteProps> = ({\n  path,\n  title,\n  children,\n}) => {\n  useEffect(() => {\n    document.title = \"Banjo Tab :: \" + title;\n  });\n  return <Route {...{ path }}>{children}</Route>;\n};\n\nconst App = () => {\n  const [showNotes, setShowNotes] = useState(false);\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div className=\"content\">\n          <span>\n            <input\n              type=\"checkbox\"\n              id=\"showNotes\"\n              checked={showNotes}\n              onChange={() => setShowNotes(!showNotes)}\n            />\n            <label htmlFor=\"showNotes\">Show Notes</label>\n            <br />\n            {/* <Link to=\"/worried-man\">Worried Man's Blues</Link> */}\n            {/* :: */}\n            {/* <Link to=\"/rose-tattoo\">Rose Tattoo</Link> */}\n            {/* :: */}\n            <Link to=\"/russian-anthem\">Russian Anthem</Link>\n            ::\n            <Link to=\"/korobeiniki\">Korobeiniki</Link>\n            ::\n            {/* <Link to=\"/mortal-kombat\">Mortal Kombat</Link> */}\n            {/* :: */}\n            <Link to=\"/lambada\">Lambada</Link>\n            ::\n            <Link to=\"/prince-igor\">Prince Igor</Link>\n            ::\n            <Link to=\"/sokolov\">Sokolov's Polka</Link>\n            {/* ::\n            <Link to=\"/moonlight-shadow\">Moonlight Shadow</Link> */}\n          </span>\n          <SettingsContext {...{ showNotes }}>\n            <Switch>\n              <TitleRoute path=\"/worried-man\" title=\"Worried Man's Blues\">\n                <WorriedMansBlues />\n              </TitleRoute>\n              <TitleRoute path=\"/hop-high-ladies\" title=\"Hop High Ladies\">\n                <HopHighLadies />\n              </TitleRoute>\n              <TitleRoute path=\"/rose-tattoo\" title=\"Rose Tattoo\">\n                <RoseTatoo />\n              </TitleRoute>\n              <TitleRoute path=\"/interactive-editor\" title=\"Interactive Editor\">\n                <InteractiveEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/text-editor\" title=\"Text Editor\">\n                <TextEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/sandy-river-belle\" title=\"Sandy River Belle\">\n                <SandyRiverBelle />\n              </TitleRoute>\n              <TitleRoute path=\"/russian-anthem\" title=\"Russian Anthem\">\n                <RussianAnthem />\n              </TitleRoute>\n              <TitleRoute path=\"/korobeiniki\" title=\"Korobeiniki\">\n                <Korobeiniki />\n              </TitleRoute>\n              <TitleRoute path=\"/kalinka\" title=\"Kalinka\">\n                <Kalinka />\n              </TitleRoute>\n              <TitleRoute path=\"/mortal-kombat\" title=\"Mortal Kombat\">\n                <MortalKombat />\n              </TitleRoute>\n              <TitleRoute path=\"/lambada\" title=\"Lambada\">\n                <Lambada />\n              </TitleRoute>\n              <TitleRoute path=\"/moonlight-shadow\" title=\"Moonlight Shadow\">\n                <MoonlightShadow />\n              </TitleRoute>\n              <TitleRoute path=\"/prince-igor\" title=\"Prince Igor\">\n                <PrinceIgor />\n              </TitleRoute>\n              <TitleRoute path=\"/sokolov\" title=\"Sokolov's Polka\">\n                <Sokolov />\n              </TitleRoute>\n\n              <Route path=\"/\">\n                <Redirect to=\"/sokolov\" />\n              </Route>\n            </Switch>\n          </SettingsContext>\n        </div>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}