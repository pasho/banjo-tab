{"version":3,"sources":["utils.ts","components/Settings.tsx","components/Chord.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","interactive-editor/Cursor.tsx","interactive-editor/Editor.tsx","text-editor/Cursor.tsx","text-editor/Editor.tsx","tunes/RoseTatoo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","coreSettings","width","lineSpacing","sidePaddingEnabled","barsPerStave","textCharCentreOffset","x","y","noteHorizontalLineAdjustment","showNotes","CoreSettings","React","getDerivedSettings","padding","staveHeight","sidePadding","staveHeightWithPadding","staveWidth","SettingsContext","useSettings","useContext","Settings","props","parentCoreSettings","mergedCoreSettings","Object","reduce","acc","key","derivedSettings","useMemo","settings","Provider","value","children","Chord","chord","noteX","staveY","SingleNote","tuning","useSheet","Utils","scale","split","stringNote","toLowerCase","reverse","stringNoteIndex","lowestStringIndex","noteTailY1","noteTailY2","noteCentreX","noteY","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","PullOffNote","SlideNote","Note","noteType","BarLine","StaveLine","Stave","meter","barWidth","noteSpaceWidth","barNotes","i","notes","barIndex","barX","noteString","noteIndex","s","trim","part","toUpperCase","substr","defaultState","SheetContext","Sheet","title","sheetContext","staveBarNotes","note","floor","noteIndexInBar","staveIndex","barIndexInStave","sheetHeight","viewBox","preserveAspectRatio","HopHighLadies1","HopHighLadies2","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","Cursor","useEditor","position","noteWidth","height","attributeName","to","dur","repeatCount","EditorContext","createContext","Editor","useState","setNotes","setPosition","move","direction","max","addNote","slice","del","backspace","onKey","useCallback","keyCode","useEffect","document","addEventListener","removeEventListener","join","useTextEditor","textPosition","setTextPosition","onSelect","e","target","selectionStart","onChange","TitleRoute","path","App","setShowNotes","className","type","id","checked","htmlFor","WorriedMansBlues","HopHighLadies","RoseTatoo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d64f077.chunk.js","sourcesContent":["export const range = (length: number) => Array.from(Array(length).keys());\n\nexport const getStringFrets = (strings: string) =>\n  range(5)\n    .map(stringIndex => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\n    .map(({ stringIndex, fret }) => {\n      if (isNaN(parseInt(fret))) {\n        const alphabet = \"abcdefghijklmnopqrst\";\n        const alphaIndex = alphabet.indexOf(fret);\n        if (alphaIndex !== -1) {\n          const doubleDigitFret = 10 + alphaIndex;\n          return { stringIndex, fret: doubleDigitFret.toString() };\n        }\n      }\n      return { stringIndex, fret };\n    });\n\nexport const getLowestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\n};\n\nexport const getHighestStringIndex = (strings: string) => {\n  const stringFrets = getStringFrets(strings);\n\n  if (stringFrets.length === 0) {\n    return undefined;\n  }\n\n  return stringFrets[0]?.stringIndex;\n};\n\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\n  const stringNoteIndex = scale.indexOf(stringNote);\n  const fretIndex = parseInt(fret);\n\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\n\n  return fretNote;\n};","import * as React from \"react\";\nimport { useContext, useMemo } from \"react\";\n\nconst coreSettings = {\n  width: 800,\n  lineSpacing: 10,\n  sidePaddingEnabled: true,\n  barsPerStave: 4,\n  // Accounts for font size and svg discrepancies.\n  textCharCentreOffset: {\n    x: -3.5,\n    y: 4\n  },\n  // Accounts for different widths of vertical and horizontal lines and ugly edges.\n  noteHorizontalLineAdjustment: 0.5,\n  showNotes: false\n}\n\nconst CoreSettings = React.createContext(coreSettings);\n\nconst useCoreSettings = () => useContext(CoreSettings);\n\nconst getDerivedSettings = ({ width, lineSpacing, sidePaddingEnabled }: Pick<typeof coreSettings, \"width\" | \"lineSpacing\" | \"sidePaddingEnabled\">) => {\n  const padding = 5 * lineSpacing;\n  const staveHeight = lineSpacing * 4;\n  const sidePadding = sidePaddingEnabled ? padding : 0;\n  return {\n    padding,\n    staveHeight,\n    sidePadding,\n    staveHeightWithPadding: staveHeight + padding,\n    staveWidth: width - sidePadding * 2,\n  };\n}\n\nconst SettingsContext = React.createContext({\n  ...coreSettings,\n  ...getDerivedSettings(coreSettings)\n});\n\nexport const useSettings = () => useContext(SettingsContext);\n\nconst Settings: React.FunctionComponent<Partial<typeof coreSettings>> = props => {\n  const parentCoreSettings = useCoreSettings();\n\n  const mergedCoreSettings = (Object.keys(coreSettings) as (keyof (typeof coreSettings))[])\n    .reduce(\n      (acc, key) => props[key] !== undefined\n        ? { ...acc, ...{ [key]: props[key] } }\n        : acc,\n      { ...parentCoreSettings });\n\n  const { width, lineSpacing, sidePaddingEnabled } = mergedCoreSettings;\n  const derivedSettings = useMemo(\n    () => getDerivedSettings({ width, lineSpacing, sidePaddingEnabled }),\n    [width, lineSpacing, sidePaddingEnabled]\n  );\n\n  const settings = {\n    ...mergedCoreSettings,\n    ...derivedSettings\n  }\n  return (\n    <CoreSettings.Provider value={mergedCoreSettings}>\n      <SettingsContext.Provider value={settings}>\n        {props.children}\n      </SettingsContext.Provider>\n    </CoreSettings.Provider>\n  )\n};\n\nexport default Settings;","import * as React from \"react\";\nimport { useSettings } from \"./Settings\";\n\nexport const Chord = ({ chord, noteX, staveY, width }: {\n  chord: string,\n  noteX: number;\n  staveY: number;\n  width: number;\n}) => {\n  const settings = useSettings();\n  if (!chord) {\n    return null;\n  }\n  const x = noteX + width / 2 + chord.length * settings.textCharCentreOffset.x;\n  const y = staveY - 1.5 * settings.lineSpacing + settings.textCharCentreOffset.y;\n  return (\n    <text {...{ x, y }}>{chord}</text>\n  )\n}","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { useSheet } from \"./Sheet\";\nimport { useSettings } from \"./Settings\";\n\nexport type NoteProps = {\n  strings: string;\n  x: number;\n  y: number;\n  width: number;\n};\n\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\n  const { tuning } = useSheet();\n  const settings = useSettings();\n  const stringFrets = Utils.getStringFrets(strings)\n    .map(({stringIndex, fret}) => {\n      if(settings.showNotes){\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\n        return {stringIndex, fret: fret + fretNote};\n      }\n      return {stringIndex, fret};\n    });\n\n\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\n  const noteTailY1 = y + settings.lineSpacing * (lowestStringIndex + .5)\n  const noteTailY2 = y + settings.staveHeight + settings.lineSpacing;\n  const noteCentreX = x + width * .5;\n\n  return (\n    <>\n      {stringFrets\n        .map(({ stringIndex, fret }) => {\n          const noteX = noteCentreX + settings.textCharCentreOffset.x * fret.length;\n          const noteY = y + stringIndex * settings.lineSpacing + settings.textCharCentreOffset.y;\n          return <text key={stringIndex} x={noteX} y={noteY}>{fret}</text>\n        })}\n      <line x1={noteCentreX} y1={noteTailY1} x2={noteCentreX} y2={noteTailY2} strokeWidth={1} stroke=\"black\" />\n    </>\n  );\n}\n\nexport const DoubleNote = (props: NoteProps) => {\n  const settings = useSettings();\n  const horizontalLineY = props.y + settings.staveHeight + settings.lineSpacing;\n  const horizontalLineX1 = props.x + props.width * .25 - settings.noteHorizontalLineAdjustment;\n  const horizontalLineX2 = props.x + props.width * .75 + settings.noteHorizontalLineAdjustment;\n  const [strings1, strings2] = props.strings.split(\",\");\n  return (\n    <>\n      <SingleNote strings={strings1} width={props.width * .5} x={props.x} y={props.y} />\n      <SingleNote strings={strings2} width={props.width * .5} x={props.x + props.width * .5} y={props.y} />\n      <line x1={horizontalLineX1} y1={horizontalLineY} x2={horizontalLineX2} y2={horizontalLineY} strokeWidth={3} stroke=\"black\" />\n    </>\n  );\n}\n\nexport const BrushNote = (props: NoteProps) => <DoubleNote x={props.x} y={props.y} width={props.width} strings={props.strings + \",    0\"} />;\n\nexport const SlurNote = (props: NoteProps & {\n  label: string;\n}) => {\n  const settings = useSettings();\n  const [strings1, strings2] = props.strings.split(\",\");\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\n\n  const arcX1 = props.x + props.width * .25;\n  const arcX2 = props.x + props.width * .75;\n  const arcY1 = props.y + (highestString1 - 0.5) * settings.lineSpacing;\n  const arcY2 = props.y + (highestString2 - 0.5) * settings.lineSpacing;\n\n  const arcControlX1 = arcX1 + .5 * settings.lineSpacing;\n  const arcControlX2 = arcX2 - .5 * settings.lineSpacing;\n  const arcControlY1 = arcY1 - .5 * settings.lineSpacing;\n  const arcControlY2 = arcY2 - .5 * settings.lineSpacing;\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\n\n  const labelLength = props.label.length;\n  const labelX = props.x + 0.5 * props.width + settings.textCharCentreOffset.x * labelLength;\n  const labelY = props.y + settings.staveHeight + 2 * settings.lineSpacing + settings.textCharCentreOffset.y;\n\n  return (\n    <>\n      <DoubleNote x={props.x} y={props.y} width={props.width} strings={props.strings} />\n      <path d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`} stroke=\"black\" strokeWidth={1} fill=\"transparent\" />\n      <text x={labelX} y={labelY}>{props.label}</text>\n    </>\n  );\n}\n\nexport const HammerOnNote = (props: NoteProps) => <SlurNote {...props} label=\"H\" />\n\nexport const PullOffNote = (props: NoteProps) => <SlurNote {...props} label=\"P\" />\n\nexport const SlideNote = (props: NoteProps) => <SlurNote {...props} label=\"SL\" />\n\nexport const Note = (props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }) => {\n  switch (props.noteType) {\n    case \"b\":\n      return <BrushNote {...props} />;\n    case \"h\":\n      return <HammerOnNote {...props} />;\n    case \"p\":\n      return <PullOffNote {...props} />;\n    case \"s\":\n      return <SlideNote {...props} />;\n    case \"m\":\n      return <SingleNote {...props} />;\n    case \"d\":\n      return <DoubleNote {...props} />\n    default:\n      return null;\n  }\n}","import * as React from \"react\";\nimport * as Utils from \"../utils\";\nimport { Chord } from \"./Chord\";\nimport { Note } from \"./Notes\";\nimport { useSheet } from \"./Sheet\";\nimport { useSettings } from \"./Settings\";\n\nconst BarLine = (props: {\n  x: number;\n  y: number;\n}) => {\n  const settings = useSettings();\n  return (<line x1={props.x} y1={props.y} x2={props.x} y2={props.y + settings.staveHeight} strokeWidth={1} stroke=\"black\" />);\n}\n\nconst StaveLine = (props: {\n  y: number\n  width: number\n}) => {\n  const settings = useSettings();\n  return (<line x1={settings.sidePadding} y1={props.y} x2={settings.sidePadding + props.width} y2={props.y} strokeWidth={1} stroke=\"black\" />);\n}\n\nexport const Stave = (props: {\n  y: number;\n  barNotes: string[][]\n}) => {\n  const settings = useSettings();\n  const { meter } = useSheet();\n  const barWidth = settings.staveWidth / settings.barsPerStave;\n  const noteSpaceWidth = barWidth / meter;\n  const staveWidth = barWidth * props.barNotes.length;\n  \n  return (\n    <>\n      {Utils.range(5).map(i => <StaveLine key={i} y={props.y + i * settings.lineSpacing} width={staveWidth} />)}\n      {Utils.range(props.barNotes.length + 1).map(i => <BarLine key={i} y={props.y} x={settings.sidePadding + i * barWidth} />)}\n      {props.barNotes.map((notes, barIndex) => {\n        const barX = settings.sidePadding + barIndex * barWidth;\n        return notes.map(\n          (noteString, noteIndex) => {\n            const noteX = barX + noteIndex * noteSpaceWidth;\n            const { noteType, strings, chord } = noteString.split(\":\")\n              .map(s => s.trim())\n              .reduce((acc, part) => {\n                if (part[0]) {\n                  if (part[0] === part[0].toUpperCase()) {\n                    //chord\n                    return { ...acc, chord: part };\n                  }\n                  else if (part[0] === part[0].toLowerCase()) {\n                    //note\n                    return { ...acc, noteType: part[0], strings: part.substr(1) };\n                  }\n                }\n                return acc;\n              },\n                {\n                  noteType: '',\n                  strings: '',\n                  chord: ''\n                });\n\n            return (\n              <React.Fragment key={noteIndex}>\n                <Chord chord={chord} noteX={noteX} staveY={props.y} width={noteSpaceWidth} />\n                <Note noteType={noteType} {...{\n                  noteType,\n                  strings,\n                  x: noteX,\n                  y: props.y,\n                  width: noteSpaceWidth\n                }} />\n              </React.Fragment>\n            )\n          }\n        )\n      })}\n    </>\n  )\n};","import * as React from \"react\";\nimport { Stave } from \"./Stave\";\nimport { useContext } from \"react\";\nimport { useSettings } from \"./Settings\";\n\ntype SheetState = {\n  tuning: string;\n  meter: number;\n}\n\nconst defaultState: SheetState = {\n  tuning: \"gDGBd\",\n  meter: 4\n};\n\nconst SheetContext = React.createContext<SheetState>(defaultState);\n\nexport const useSheet = () => useContext(SheetContext);\n\ntype SheetProps = {\n  title: string;\n  tuning?: string;\n  meter?: number;\n  notes: string;\n}\n\nexport const Sheet: React.FunctionComponent<SheetProps> = (props) => {\n  const { tuning, meter, title, children } = props;\n  const settings = useSettings();\n  const notes = props.notes.split(\";\").map(s => s.trim());\n\n  const sheetContext = {\n    tuning: tuning ?? defaultState.tuning,\n    meter: meter ?? defaultState.meter\n  };\n  const staveBarNotes = notes\n    .reduce(\n      (acc: string[][][], note, noteIndex) => {\n        const barIndex = Math.floor(noteIndex / sheetContext.meter);\n        const noteIndexInBar = noteIndex % sheetContext.meter;\n        const staveIndex = Math.floor(barIndex / settings.barsPerStave);\n        const barIndexInStave = barIndex % settings.barsPerStave;\n\n        if (!acc[staveIndex]) {\n          acc[staveIndex] = [];\n        }\n\n        if (!acc[staveIndex][barIndexInStave]) {\n          acc[staveIndex][barIndexInStave] = [];\n        }\n\n        acc[staveIndex][barIndexInStave][noteIndexInBar] = note;\n        return acc;\n      },\n      []\n    );\n\n  const sheetHeight = .5 * settings.padding + settings.staveHeightWithPadding * staveBarNotes.length;\n\n  return (\n    <SheetContext.Provider value={sheetContext} >\n      <h1>{title}</h1>\n      <p>{tuning}</p>\n      <svg viewBox={`0 0 ${settings.width} ${sheetHeight}`} preserveAspectRatio=\"xMidYMid meet\">\n        {staveBarNotes.map(\n          (barNotes, staveIndex) => {\n            return (\n              <Stave key={staveIndex} y={.5 * settings.padding + settings.staveHeightWithPadding * staveIndex} barNotes={barNotes} />\n            )\n          }\n        )}\n        {children}\n      </svg>\n    </SheetContext.Provider >\n  )\n\n}","import React from 'react';\nimport { Sheet } from '../components/Sheet';\n\nexport const HopHighLadies1 = () =>\n  <Sheet\n    title=\"Hop High Ladies v1\"\n    notes={`\n      G:h  0,  2;h 0, 1;m0;m  0;\n      s  2,  4;b0040;m 0;b0000;\n      h  0,  2;h 0, 1;m0;m  0;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:h  0,  2;h 0, 1;m0;m  0;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\n\n      G:m  0;m5;p2,0;b0000;\n      s  2,  4;b0040;m 0;b0000;\n      m  0;m5;p2,0;b0000;\n      D7:h  0,  2;b0120;m  2;b0120;\n      G:m  0;m5;p2,0;b0000;\n      m 0;b0000;h 0, 1;m0;\n      C:m2;b2102;h0,2;b2102;\n      p 3, 0;m  0;D7:h  0,  2;b0120\n    `} />;\n\nexport const HopHighLadies2 = () =>\n  <Sheet\n    title=\"Hop High Ladies v2\"\n    notes={`\n        G:h  0,  2;h 0, 1;m0;b  0;\n        s  2,  4;b  4;m 0;b0;\n        h  0,  2;h 0, 1;m0;b  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:h  0,  2;h 0, 1;m0;b  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\n  \n        G:m  0;m5;p2,0;d 0,  0;\n        s  2,  4;b  4;m 0;b0;\n        m  0;m5;p2,0;d 0,  0;\n        D7:h  0,  2;d0, 1;m  2;m   0;\n        G:m  0;m5;p2,0;d 0,  0;\n        m 0;b0;h 0, 1;m0;\n        C:m2;d2, 1;h0,2;d2, 1;\n        p 3, 0;m  0;D7:h  0,  2;m   0\n      `} />;\n\nexport default () => (\n  <>\n    <HopHighLadies1 />\n    <HopHighLadies2 />\n  </>\n);","import React from 'react';\nimport { Sheet } from '../components/Sheet';\n\nexport const WorriedMansBluesOriginal = () =>\n  <Sheet\n    title=\"Worried Man's Blues\"\n    notes={`\n      G;;;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m  0;m   0;\n      C:m   2;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n      m  0;b2102;m  0;m   2;\n\n      G:m   0;b0000;b0000;m   0;\n      m   0;b0000;m   0;m   2;\n      m  0;b0000;b0000;m  0;\n      m 0;b0000;m 0;m  2;\n      m  0;b0000;m   4;m  0;\n      D7:m  2;b0120;b0120;m  2;\n      m 0;m  2;m  0;m   4;\n      G:m  0;b0000;m0000;\n    `} />;\n\nexport const WorriedMansBluesOctaveUpV1 = () =>\n  <Sheet\n    title=\"Worried Man's Blues (octave up v.1)\"\n    notes={`\n      G;;;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987;m 8;m  7;\n      C:m  9;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n      m 8;ba89;m 8;m  9;\n\n      G:m  7;b987;b987;m  7;\n      m  7;b987;m  7;m  9;\n      m 8;b987;b987;m 8;\n      m9;b987;m9;m a;\n      m 8;b987; m 7;m 8;\n      D7:m a;baa7;baa7;m a;\n      G:m9;m a;m 8;m 7;\n      m 8;b987;m987\n    `} />;\n\nexport default () => (\n  <>\n    <WorriedMansBluesOriginal />\n    <WorriedMansBluesOctaveUpV1 />\n  </>\n)\n","import * as React from 'react';\nimport { useEditor } from './Editor';\nimport { useSettings } from '../components/Settings';\n\nconst Cursor = () => {\n  const { position, meter } = useEditor();\n  const settings = useSettings();\n  const noteWidth = settings.staveWidth / settings.barsPerStave / meter;\n  const x = settings.padding + (.1 + position) * noteWidth;\n  const height = settings.lineSpacing * 5;\n  const y1 = .5 * settings.padding - .5 * settings.lineSpacing;\n  const y2 = y1 + height;\n\n  return (\n    <line\n      x1={x} y1={y1} x2={x} y2={y2}\n      strokeWidth={1} stroke=\"black\">\n      <animate attributeName=\"visibility\" from=\"visible\" to=\"hidden\" dur=\"1s\" repeatCount=\"indefinite\" />\n    </line>\n  )\n}\n\nexport default Cursor;","import React, { useEffect, useCallback, useState, useContext, useMemo } from 'react';\nimport { Sheet } from '../components/Sheet';\nimport Cursor from './Cursor';\n\nconst EditorContext = React.createContext<{\n  position: number;\n  meter: number;\n}>({\n  position: 0,\n  meter: 4\n});\n\nexport const useEditor = () => useContext(EditorContext);\n\nconst Editor = () => {\n  const [notes, setNotes] = useState<string[]>([]);\n  const [position, setPosition] = useState(0);\n\n  const { move, addNote, del, backspace } = useMemo(() => ({\n    move: (direction: \"left\" | \"right\") => {\n      switch (direction) {\n        case \"left\":\n          setPosition(Math.max(0, position - 1));\n          break;\n        case \"right\":\n          setPosition(Math.min(notes.length, position + 1));\n          break;\n      }\n    },\n    addNote: (note: string) => {\n      setNotes(\n        [\n          ...notes.slice(0, position),\n          note,\n          ...notes.slice(position)\n        ]\n      );\n      setPosition(position + 1);\n    },\n    del: () => {\n      if (position < notes.length) {\n        setNotes(\n          [\n            ...notes.slice(0, position),\n            ...notes.slice(position + 1)\n          ]);\n      }\n    },\n    backspace: () => {\n      setNotes(\n        [\n          ...notes.slice(0, Math.max(0, position - 1)),\n          ...notes.slice(position)\n        ]);\n      setPosition(Math.max(0, position - 1));\n    }\n  }\n  ), [position, setPosition, notes, setNotes]);\n\n  const onKey = useCallback(({ keyCode }: KeyboardEvent) => {\n    switch (keyCode) {\n      case 37:\n        move(\"left\");\n        break;\n      case 39:\n        move(\"right\");\n        break;\n      case 8:\n        backspace();\n        break;\n      case 46:\n        del();\n        break;\n      case 66:\n        addNote(\"b0000\");\n        break;\n    }\n  }, [move, addNote, backspace, del]);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKey);\n    return () => document.removeEventListener(\"keydown\", onKey);\n  }, [onKey]);\n\n  const meter = 4;\n\n  return (\n    <EditorContext.Provider value={{ position, meter }}>\n      <Sheet title=\"Editor\" meter={meter} notes={notes.join(\";\")}>\n        <Cursor />\n      </Sheet>\n    </EditorContext.Provider>\n  )\n}\n\nexport default Editor;","import * as React from 'react';\nimport { useTextEditor } from './Editor';\nimport { useSettings } from '../components/Settings';\n\nconst Cursor = () => {\n  const { position, meter } = useTextEditor();\n  const settings = useSettings();\n  const noteWidth = settings.staveWidth / settings.barsPerStave / meter;\n  const width = noteWidth;\n  const x = settings.sidePadding + position * noteWidth;\n  const height = settings.staveHeightWithPadding;\n  const y = 0;\n\n  return (\n    <rect\n      {...{ x, y, width, height }}\n      strokeWidth={1} \n      stroke=\"black\" \n      fill=\"transparent\">\n    </rect>\n  )\n}\n\nexport default Cursor;","import * as React from 'react';\nimport { Sheet } from '../components/Sheet';\nimport { useState, useContext } from 'react';\nimport Cursor from './Cursor';\nimport Settings from '../components/Settings';\n\nconst EditorContext = React.createContext<{\n  position: number;\n  meter: number;\n}>({\n  position: 0,\n  meter: 4\n});\n\nexport const useTextEditor = () => useContext(EditorContext);\n\nexport default () => {\n  const [notes, setNotes] = useState(\"\");\n  const [textPosition, setTextPosition] = useState(0);\n  const position = notes.substr(0, textPosition).split(\";\").length - 1;\n  const meter = 4;\n  return (\n    <EditorContext.Provider value={{ position, meter }}>\n      <Settings {...{ sidePaddingEnabled: false }}>\n        <Sheet title=\"Editor\" notes={notes}>\n          <Cursor />\n        </Sheet>\n      </Settings>\n      <br />\n      <textarea\n        onSelect={e => setTextPosition((e.target as HTMLTextAreaElement).selectionStart)}\n        onChange={e => setNotes(e.target.value)}\n        value={notes} />\n    </EditorContext.Provider>\n  )\n}\n","import React from \"react\";\nimport { Sheet } from \"../components/Sheet\";\n\nconst notes = `\n  Am:m  2;b2122;m  2;b  0;\n  m  2;b  0;m  2;b 0;\n  C:m 1;b2102;m 1;m0;\n  h0,2;b2102;p2,0;b 1;\n  G:m0;b0000;m0;m 1;\n  b0;b2;b0;b 1;\n  Am:m 1;b2122;m 0;b2022;\n  m  2;b2122;m 2;b2122\n`;\n\n\nexport default () => (\n  <Sheet {...{title: \"Rose Tattoo\", tuning: \"gDGBd\", meter: 4, notes}} />\n)","import React, { useState, useEffect } from 'react';\nimport { Switch, Route, Redirect, HashRouter, Link } from 'react-router-dom';\n\nimport HopHighLadies from \"./tunes/HopHighLadies\";\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\nimport InteractiveEditor from './interactive-editor/Editor';\nimport TextEditor from './text-editor/Editor';\nimport RoseTatoo from './tunes/RoseTatoo';\n\nimport './App.css';\nimport Settings from './components/Settings';\n\ntype TitleRouteProps = {\n  path: string;\n  title: string;\n};\n\nconst TitleRoute: React.FunctionComponent<TitleRouteProps> = ({ path, title, children }) => {\n  useEffect(() => { document.title = \"Banjo Tab :: \" + title; });\n  return (\n    <Route {...{ path }}>\n      {children}\n    </Route>\n  );\n}\n\n\nconst App = () => {\n  const [showNotes, setShowNotes] = useState(false);\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <div className=\"content\">\n          <span>\n            <input type=\"checkbox\" id=\"showNotes\" checked={showNotes} onChange={() => setShowNotes(!showNotes)} />\n            <label htmlFor=\"showNotes\">Show Notes</label>\n            <br />\n            <Link to=\"/worried-man\">Worried Man's Blues</Link>\n          ::\n          <Link to=\"/hop-high-ladies\">Hop High Ladies</Link>\n          ::\n          <Link to=\"/rose-tattoo\">Rose Tattoo</Link>\n          {/* ::\n          <Link to=\"/interactive-editor\">Interactive Editor</Link> */}\n          ::\n          <Link to=\"/text-editor\">Text Editor</Link>\n          </span>\n          <Settings {...{ showNotes }}>\n            <Switch>\n              <TitleRoute path=\"/worried-man\" title=\"Worried Man's Blues\">\n                <WorriedMansBlues />\n              </TitleRoute>\n              <TitleRoute path=\"/hop-high-ladies\" title=\"Hop High Ladies\">\n                <HopHighLadies />\n              </TitleRoute>\n              <TitleRoute path=\"/rose-tattoo\" title=\"Rose Tattoo\">\n                <RoseTatoo />\n              </TitleRoute>\n              <TitleRoute path=\"/interactive-editor\" title=\"Interactive Editor\">\n                <InteractiveEditor />\n              </TitleRoute>\n              <TitleRoute path=\"/text-editor\" title=\"Text Editor\">\n                <TextEditor />\n              </TitleRoute>\n              <Route path=\"/\">\n                <Redirect to=\"/worried-man\" />\n              </Route>\n            </Switch>\n          </Settings>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}