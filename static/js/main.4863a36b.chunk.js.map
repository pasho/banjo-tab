{"version":3,"sources":["settings.ts","utils.ts","components/Chord.tsx","components/StyleProvider.tsx","components/Notes.tsx","components/Stave.tsx","components/Sheet.tsx","tunes/HopHighLadies.tsx","tunes/WorriedMansBlues.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["textCharCentreOffset","range","length","Array","from","keys","getStringFrets","strings","map","stringIndex","fret","filter","undefined","isNaN","parseInt","alphaIndex","indexOf","toString","getHighestStringIndex","stringFrets","Chord","chord","noteX","staveY","width","x","Settings","y","defaultState","barsPerStave","showNotes","StyleContext","React","useStyle","useContext","StyleProvider","props","Provider","value","children","SingleNote","tuning","useSheet","Utils","scale","split","stringNote","toLowerCase","reverse","stringNoteIndex","lowestStringIndex","noteTailY1","noteTailY2","lineSpacing","noteCentreX","noteY","key","x1","y1","x2","y2","strokeWidth","stroke","DoubleNote","horizontalLineY","horizontalLineX1","horizontalLineX2","strings1","strings2","BrushNote","SlurNote","highestString1","highestString2","arcX1","arcX2","arcY1","arcY2","arcControlX1","arcControlX2","arcControlY1","arcControlY2","arcControlY","Math","min","labelLength","label","labelX","labelY","d","fill","HammerOnNote","PullOffNote","SlideNote","Note","noteType","BarLine","StaveLine","Stave","meter","barWidth","noteSpaceWidth","staveWidth","barNotes","i","notes","barIndex","barX","noteString","noteIndex","s","trim","reduce","acc","part","toUpperCase","substr","SheetContext","Sheet","title","sheetState","staveBarNotes","note","floor","noteIndexInBar","staveIndex","barIndexInStave","sheetHeight","staveHeight","viewBox","preserveAspectRatio","style","maxWidth","HopHighLadies1","HopHighLadies2","useEffect","document","WorriedMansBluesOriginal","WorriedMansBluesOctaveUpV1","App","useState","setShowNotes","className","to","type","id","checked","onClick","htmlFor","path","WorriedMansBlues","HopHighLadies","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4863a36b.chunk.js","sourcesContent":["export const width = 800;\r\nexport const lineSpacing = 10;\r\nexport const padding = () => 5 * lineSpacing;\r\nexport const staveHeight = () => lineSpacing * 4;\r\nexport const staveHeightWithPadding = () => staveHeight() + padding();\r\nexport const staveWidth = () => width - padding() * 2;\r\nexport const defaultBarsPerStave = 4;\r\n// Accounts for font size and svg discrepancies.\r\nexport const textCharCentreOffset = {\r\n  x: -3.5,\r\n  y: 4\r\n};\r\n// Accounts for different widths of vertical and horizontal lines and ugly edges.\r\nexport const noteHorizontalLineAdjustment = 0.5;","export const range = (length: number) => Array.from(Array(length).keys());\r\n\r\nexport const getStringFrets = (strings: string) =>\r\n  range(5)\r\n    .map(stringIndex => ({ stringIndex, fret: (strings ?? [])[stringIndex] }))\r\n    .filter(({ fret }) => fret !== undefined && fret !== \" \")\r\n    .map(({ stringIndex, fret }) => {\r\n      if (isNaN(parseInt(fret))) {\r\n        const alphabet = \"abcdefghijklmnopqrst\";\r\n        const alphaIndex = alphabet.indexOf(fret);\r\n        if (alphaIndex !== -1) {\r\n          const doubleDigitFret = 10 + alphaIndex;\r\n          return { stringIndex, fret: doubleDigitFret.toString() };\r\n        }\r\n      }\r\n      return { stringIndex, fret };\r\n    });\r\n\r\nexport const getLowestStringIndex = (strings: string) => {\r\n  const stringFrets = getStringFrets(strings);\r\n\r\n  if (stringFrets.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return stringFrets[stringFrets.length - 1]?.stringIndex;\r\n};\r\n\r\nexport const getHighestStringIndex = (strings: string) => {\r\n  const stringFrets = getStringFrets(strings);\r\n\r\n  if (stringFrets.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return stringFrets[0]?.stringIndex;\r\n};\r\n\r\nexport const getNote = (tuning: string, stringIndex: number, fret: string) => {\r\n  const scale = \"a♭ a b♭ b c c# d e♭ e f f# g\".split(\" \");\r\n  const stringNote = tuning.toLowerCase().split(\"\").reverse()[stringIndex];\r\n  const stringNoteIndex = scale.indexOf(stringNote);\r\n  const fretIndex = parseInt(fret);\r\n\r\n  const fretNote = scale[(stringNoteIndex + fretIndex) % scale.length];\r\n\r\n  return fretNote;\r\n};","import * as React from \"react\";\r\nimport * as Settings from \"../settings\";\r\n\r\nexport const Chord = ({ chord, noteX, staveY, width }: {\r\n  chord: string,\r\n  noteX: number;\r\n  staveY: number;\r\n  width: number;\r\n}) => {\r\n  if (!chord) {\r\n    return null;\r\n  }\r\n  const x = noteX + width / 2 + chord.length * Settings.textCharCentreOffset.x;\r\n  const y = staveY - 1.5 * Settings.lineSpacing + Settings.textCharCentreOffset.y;\r\n  return (\r\n    <text {...{ x, y }}>{chord}</text>\r\n  )\r\n}","import * as React from \"react\";\r\nimport * as Settings from \"../settings\";\r\nimport { useContext } from \"react\";\r\n\r\ntype StyleState = {\r\n  barsPerStave: number;\r\n  showNotes: boolean;\r\n}\r\n\r\nconst defaultState: StyleState = {\r\n  barsPerStave: Settings.defaultBarsPerStave,\r\n  showNotes: false\r\n};\r\n\r\nconst StyleContext = React.createContext<StyleState>(defaultState);\r\n\r\nexport const useStyle = () => useContext(StyleContext);\r\n\r\nexport const StyleProvider: React.FunctionComponent<Partial<StyleState>> = props => (\r\n  <StyleContext.Provider value={{\r\n    ...defaultState,\r\n    ...props\r\n  }}>{props.children}</StyleContext.Provider>\r\n)","import * as React from \"react\";\r\nimport * as Settings from \"../settings\";\r\nimport * as Utils from \"../utils\";\r\nimport { useStyle } from \"./StyleProvider\";\r\nimport { useSheet } from \"./Sheet\";\r\n\r\nexport type NoteProps = {\r\n  strings: string;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n};\r\n\r\nexport const SingleNote = ({ x, y, width, strings }: NoteProps) => {\r\n  const { tuning } = useSheet();\r\n  const { showNotes } = useStyle();\r\n  const stringFrets = Utils.getStringFrets(strings)\r\n    .map(({stringIndex, fret}) => {\r\n      if(showNotes){\r\n        const fretNote = Utils.getNote(tuning, stringIndex, fret);\r\n        return {stringIndex, fret: fret + fretNote};\r\n      }\r\n      return {stringIndex, fret};\r\n    });\r\n\r\n\r\n  const lowestStringIndex = Utils.getLowestStringIndex(strings) ?? 0;\r\n  const noteTailY1 = y + Settings.lineSpacing * (lowestStringIndex + .5)\r\n  const noteTailY2 = y + Settings.staveHeight() + Settings.lineSpacing;\r\n  const noteCentreX = x + width * .5;\r\n\r\n  return (\r\n    <>\r\n      {stringFrets\r\n        .map(({ stringIndex, fret }) => {\r\n          const noteX = noteCentreX + Settings.textCharCentreOffset.x * fret.length;\r\n          const noteY = y + stringIndex * Settings.lineSpacing + Settings.textCharCentreOffset.y;\r\n          return <text key={stringIndex} x={noteX} y={noteY}>{fret}</text>\r\n        })}\r\n      <line x1={noteCentreX} y1={noteTailY1} x2={noteCentreX} y2={noteTailY2} strokeWidth={1} stroke=\"black\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const DoubleNote = (props: NoteProps) => {\r\n  const horizontalLineY = props.y + Settings.staveHeight() + Settings.lineSpacing;\r\n  const horizontalLineX1 = props.x + props.width * .25 - Settings.noteHorizontalLineAdjustment;\r\n  const horizontalLineX2 = props.x + props.width * .75 + Settings.noteHorizontalLineAdjustment;\r\n  const [strings1, strings2] = props.strings.split(\",\");\r\n  return (\r\n    <>\r\n      <SingleNote strings={strings1} width={props.width * .5} x={props.x} y={props.y} />\r\n      <SingleNote strings={strings2} width={props.width * .5} x={props.x + props.width * .5} y={props.y} />\r\n      <line x1={horizontalLineX1} y1={horizontalLineY} x2={horizontalLineX2} y2={horizontalLineY} strokeWidth={3} stroke=\"black\" />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const BrushNote = (props: NoteProps) => <DoubleNote x={props.x} y={props.y} width={props.width} strings={props.strings + \",    0\"} />;\r\n\r\nexport const SlurNote = (props: NoteProps & {\r\n  label: string;\r\n}) => {\r\n  const [strings1, strings2] = props.strings.split(\",\");\r\n  const highestString1 = Utils.getHighestStringIndex(strings1) ?? 0;\r\n  const highestString2 = Utils.getHighestStringIndex(strings2) ?? 0;\r\n\r\n  const arcX1 = props.x + props.width * .25;\r\n  const arcX2 = props.x + props.width * .75;\r\n  const arcY1 = props.y + (highestString1 - 0.5) * Settings.lineSpacing;\r\n  const arcY2 = props.y + (highestString2 - 0.5) * Settings.lineSpacing;\r\n\r\n  const arcControlX1 = arcX1 + .5 * Settings.lineSpacing;\r\n  const arcControlX2 = arcX2 - .5 * Settings.lineSpacing;\r\n  const arcControlY1 = arcY1 - .5 * Settings.lineSpacing;\r\n  const arcControlY2 = arcY2 - .5 * Settings.lineSpacing;\r\n  const arcControlY = Math.min(arcControlY1, arcControlY2);\r\n\r\n  const labelLength = props.label.length;\r\n  const labelX = props.x + 0.5 * props.width + Settings.textCharCentreOffset.x * labelLength;\r\n  const labelY = props.y + Settings.staveHeight() + 2 * Settings.lineSpacing + Settings.textCharCentreOffset.y;\r\n\r\n  return (\r\n    <>\r\n      <DoubleNote x={props.x} y={props.y} width={props.width} strings={props.strings} />\r\n      <path d={`M ${arcX1} ${arcY1} C ${arcControlX1} ${arcControlY}, ${arcControlX2} ${arcControlY}, ${arcX2} ${arcY2}`} stroke=\"black\" strokeWidth={1} fill=\"transparent\" />\r\n      <text x={labelX} y={labelY}>{props.label}</text>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const HammerOnNote = (props: NoteProps) => <SlurNote {...props} label=\"H\" />\r\n\r\nexport const PullOffNote = (props: NoteProps) => <SlurNote {...props} label=\"P\" />\r\n\r\nexport const SlideNote = (props: NoteProps) => <SlurNote {...props} label=\"SL\" />\r\n\r\nexport const Note = (props: NoteProps & { noteType: \"m\" | \"b\" | \"d\" | \"h\" | \"p\" | \"s\" | unknown }) => {\r\n  switch (props.noteType) {\r\n    case \"b\":\r\n      return <BrushNote {...props} />;\r\n    case \"h\":\r\n      return <HammerOnNote {...props} />;\r\n    case \"p\":\r\n      return <PullOffNote {...props} />;\r\n    case \"s\":\r\n      return <SlideNote {...props} />;\r\n    case \"m\":\r\n      return <SingleNote {...props} />;\r\n    case \"d\":\r\n      return <DoubleNote {...props} />\r\n    default:\r\n      return null;\r\n  }\r\n}","import * as React from \"react\";\r\nimport * as Settings from \"../settings\";\r\nimport * as Utils from \"../utils\";\r\nimport { Chord } from \"./Chord\";\r\nimport { Note } from \"./Notes\";\r\nimport { useStyle } from \"./StyleProvider\";\r\nimport { useSheet } from \"./Sheet\";\r\n\r\nconst BarLine = (props: {\r\n  x: number;\r\n  y: number;\r\n}) => <line x1={props.x} y1={props.y} x2={props.x} y2={props.y + Settings.staveHeight()} strokeWidth={1} stroke=\"black\" />\r\n\r\nconst StaveLine = (props: {\r\n  y: number\r\n  width: number\r\n}) => <line x1={Settings.padding()} y1={props.y} x2={Settings.padding() + props.width} y2={props.y} strokeWidth={1} stroke=\"black\" />\r\n\r\nexport const Stave = (props: {\r\n  y: number;\r\n  barNotes: string[][]\r\n}) => {\r\n  const { barsPerStave } = useStyle();\r\n  const { meter } = useSheet();\r\n  const barWidth = () => Settings.staveWidth() / barsPerStave;\r\n  const noteSpaceWidth = barWidth() / meter;\r\n  const staveWidth = barWidth() * props.barNotes.length;\r\n  return (\r\n    <>\r\n      {Utils.range(5).map(i => <StaveLine key={i} y={props.y + i * Settings.lineSpacing} width={staveWidth} />)}\r\n      {Utils.range(props.barNotes.length + 1).map(i => <BarLine key={i} y={props.y} x={Settings.padding() + i * barWidth()} />)}\r\n      {props.barNotes.map((notes, barIndex) => {\r\n        const barX = Settings.padding() + barIndex * barWidth();\r\n        return notes.map(\r\n          (noteString, noteIndex) => {\r\n            const noteX = barX + noteIndex * noteSpaceWidth;\r\n            const { noteType, strings, chord } = noteString.split(\":\")\r\n              .map(s => s.trim())\r\n              .reduce((acc, part) => {\r\n                if (part[0]) {\r\n                  if (part[0] === part[0].toUpperCase()) {\r\n                    //chord\r\n                    return { ...acc, chord: part };\r\n                  }\r\n                  else if (part[0] === part[0].toLowerCase()) {\r\n                    //note\r\n                    return { ...acc, noteType: part[0], strings: part.substr(1) };\r\n                  }\r\n                }\r\n                return acc;\r\n              },\r\n                {\r\n                  noteType: '',\r\n                  strings: '',\r\n                  chord: ''\r\n                });\r\n\r\n            return (\r\n              <React.Fragment key={noteIndex}>\r\n                <Chord chord={chord} noteX={noteX} staveY={props.y} width={noteSpaceWidth} />\r\n                <Note noteType={noteType} {...{\r\n                  noteType,\r\n                  strings,\r\n                  x: noteX,\r\n                  y: props.y,\r\n                  width: noteSpaceWidth\r\n                }} />\r\n              </React.Fragment>\r\n            )\r\n          }\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n};","import * as React from \"react\";\r\nimport * as Settings from \"../settings\";\r\nimport { Stave } from \"./Stave\";\r\nimport { useStyle } from \"./StyleProvider\";\r\nimport { useContext } from \"react\";\r\n\r\ntype SheetState = {\r\n  tuning: string;\r\n  meter: number;\r\n}\r\n\r\nconst defaultState: SheetState = {\r\n  tuning: \"gDGBd\",\r\n  meter: 4\r\n};\r\n\r\nconst SheetContext = React.createContext<SheetState>(defaultState);\r\n\r\nexport const useSheet = () => useContext(SheetContext);\r\n\r\nexport const Sheet = ({ title, tuning, notes, meter }: {\r\n  title: string;\r\n  tuning?: string;\r\n  meter?: number;\r\n  notes: string;\r\n}) => {\r\n  const { barsPerStave } = useStyle();\r\n  const sheetState = {\r\n    tuning: tuning ?? defaultState.tuning, \r\n    meter: meter ?? defaultState.meter\r\n  };\r\n  const staveBarNotes = notes.split(\";\").map(s => s.trim())\r\n    .reduce(\r\n      (acc: string[][][], note, noteIndex) => {\r\n        const barIndex = Math.floor(noteIndex / sheetState.meter);\r\n        const noteIndexInBar = noteIndex % sheetState.meter;\r\n        const staveIndex = Math.floor(barIndex / barsPerStave);\r\n        const barIndexInStave = barIndex % barsPerStave;\r\n\r\n        if (!acc[staveIndex]) {\r\n          acc[staveIndex] = [];\r\n        }\r\n\r\n        if (!acc[staveIndex][barIndexInStave]) {\r\n          acc[staveIndex][barIndexInStave] = [];\r\n        }\r\n\r\n        acc[staveIndex][barIndexInStave][noteIndexInBar] = note;\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n  const sheetHeight = .5 * Settings.padding() + Settings.staveHeightWithPadding() * staveBarNotes.length;\r\n\r\n  return (\r\n    <SheetContext.Provider value={sheetState} >\r\n      <h1>{title}</h1>\r\n      <p>{tuning}</p>\r\n      <svg viewBox={`0 0 ${Settings.width} ${sheetHeight}`} preserveAspectRatio=\"xMidYMid meet\" style={{maxWidth: \"800px\"}}>\r\n        {staveBarNotes.map(\r\n          (barNotes, staveIndex) => {\r\n            return (\r\n              <Stave key={staveIndex} y={.5 * Settings.padding() + Settings.staveHeightWithPadding() * staveIndex} barNotes={barNotes} />\r\n            )\r\n          }\r\n        )}\r\n      </svg>\r\n    </SheetContext.Provider >\r\n  )\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Sheet } from '../components/Sheet';\r\n\r\nexport const HopHighLadies1 = () =>\r\n  <Sheet\r\n    title=\"Hop High Ladies v1\"\r\n    notes={`\r\n      G:h  0,  2;h 0, 1;m0;m  0;\r\n      s  2,  4;b0040;m 0;b0000;\r\n      h  0,  2;h 0, 1;m0;m  0;\r\n      D7:h  0,  2;b0120;m  2;b0120;\r\n      G:h  0,  2;h 0, 1;m0;m  0;\r\n      m 0;b0000;h 0, 1;m0;\r\n      C:m2;b2102;h0,2;b2102;\r\n      G:p 3, 0;m  0;D7:h  0,  2;b0120;\r\n\r\n      G:m  0;m5;p2,0;b0000;\r\n      s  2,  4;b0040;m 0;b0000;\r\n      m  0;m5;p2,0;b0000;\r\n      D7:h  0,  2;b0120;m  2;b0120;\r\n      G:m  0;m5;p2,0;b0000;\r\n      m 0;b0000;h 0, 1;m0;\r\n      C:m2;b2102;h0,2;b2102;\r\n      p 3, 0;m  0;D7:h  0,  2;b0120\r\n    `} />;\r\n\r\nexport const HopHighLadies2 = () =>\r\n  <Sheet\r\n    title=\"Hop High Ladies v2\"\r\n    notes={`\r\n        G:h  0,  2;h 0, 1;m0;b  0;\r\n        s  2,  4;b  4;m 0;b0;\r\n        h  0,  2;h 0, 1;m0;b  0;\r\n        D7:h  0,  2;d0, 1;m  2;m   0;\r\n        G:h  0,  2;h 0, 1;m0;b  0;\r\n        m 0;b0;h 0, 1;m0;\r\n        C:m2;d2, 1;h0,2;d2, 1;\r\n        G:p 3, 0;m  0;D7:h  0,  2;m   0;\r\n  \r\n        G:m  0;m5;p2,0;d 0,  0;\r\n        s  2,  4;b  4;m 0;b0;\r\n        m  0;m5;p2,0;d 0,  0;\r\n        D7:h  0,  2;d0, 1;m  2;m   0;\r\n        G:m  0;m5;p2,0;d 0,  0;\r\n        m 0;b0;h 0, 1;m0;\r\n        C:m2;d2, 1;h0,2;d2, 1;\r\n        p 3, 0;m  0;D7:h  0,  2;m   0\r\n      `} />;\r\n\r\nexport default () => {\r\n  useEffect(() => { document.title = \"Hop High Ladies\"; }, []);\r\n  return (\r\n    <>\r\n      <HopHighLadies1 />\r\n      <HopHighLadies2 />\r\n    </>\r\n  )\r\n};","import React, { useEffect } from 'react';\r\nimport { Sheet } from '../components/Sheet';\r\nimport { StyleProvider } from '../components/StyleProvider';\r\n\r\nexport const WorriedMansBluesOriginal = () =>\r\n  <Sheet\r\n    title=\"Worried Man's Blues\"\r\n    notes={`\r\n      G;;;m   0;\r\n      m   0;b0000;m   0;m   2;\r\n      m  0;b0000;b0000;m  0;\r\n      m 0;b0000;m 0;m  2;\r\n      m  0;b0000;m  0;m   0;\r\n      C:m   2;b2102;m  0;m   2;\r\n      m  0;b2102;m  0;m   2;\r\n      m  0;b2102;m  0;m   2;\r\n\r\n      G:m   0;b0000;b0000;m   0;\r\n      m   0;b0000;m   0;m   2;\r\n      m  0;b0000;b0000;m  0;\r\n      m 0;b0000;m 0;m  2;\r\n      m  0;b0000;m   4;m  0;\r\n      D7:m  2;b0120;b0120;m  2;\r\n      m 0;m  2;m  0;m   4;\r\n      G:m  0;b0000;m0000;\r\n    `} />;\r\n\r\nexport const WorriedMansBluesOctaveUpV1 = () =>\r\n  <Sheet\r\n    title=\"Worried Man's Blues (octave up v.1)\"\r\n    notes={`\r\n      G;;;m  7;\r\n      m  7;b987;m  7;m  9;\r\n      m 8;b987;b987;m 8;\r\n      m9;b987;m9;m a;\r\n      m 8;b987;m 8;m  7;\r\n      C:m  9;ba89;m 8;m  9;\r\n      m 8;ba89;m 8;m  9;\r\n      m 8;ba89;m 8;m  9;\r\n\r\n      G:m  7;b987;b987;m  7;\r\n      m  7;b987;m  7;m  9;\r\n      m 8;b987;b987;m 8;\r\n      m9;b987;m9;m a;\r\n      m 8;b987; m 7;m 8;\r\n      D7:m a;baa7;baa7;m a;\r\n      G:m9;m a;m 8;m 7;\r\n      m 8;b987;m987\r\n    `} />;\r\n\r\nexport default () => {\r\n  useEffect(() => { document.title = \"Worried Man's Blues\"; }, []);\r\n  return (\r\n    <>\r\n      <WorriedMansBluesOriginal />\r\n      <WorriedMansBluesOctaveUpV1 />\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, HashRouter, Link } from 'react-router-dom';\r\nimport HopHighLadies from \"./tunes/HopHighLadies\";\r\nimport WorriedMansBlues from \"./tunes/WorriedMansBlues\";\r\nimport './App.css';\r\nimport { StyleProvider } from './components/StyleProvider';\r\n\r\n\r\nconst App = () => {\r\n  const [showNotes, setShowNotes] = useState(false);\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <span>\r\n          <Link to=\"/worried-man\">Worried Man's Blues</Link>\r\n          ::\r\n          <Link to=\"/hop-high-ladies\">Hop High Ladies</Link>\r\n          ::\r\n          <input type=\"checkbox\" id=\"showNotes\" checked={showNotes} onClick={() => setShowNotes(!showNotes)} />\r\n          <label htmlFor=\"showNotes\">Show Notes</label>\r\n        </span>\r\n        <Switch>\r\n          <StyleProvider {...{ showNotes }}>\r\n            <Route path=\"/worried-man\">\r\n              <WorriedMansBlues />\r\n            </Route>\r\n            <Route path=\"/hop-high-ladies\">\r\n              <HopHighLadies />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Redirect to=\"/worried-man\" />\r\n            </Route>\r\n          </StyleProvider>\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}